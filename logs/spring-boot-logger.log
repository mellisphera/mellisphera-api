2019-02-28 08:35:10,290 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 4746 (started by mickael in /home/mickael/git/Backend)
2019-02-28 08:35:10,292 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 08:35:10,402 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Thu Feb 28 08:35:10 CET 2019]; root of context hierarchy
2019-02-28 08:35:13,089 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 08:35:13,471 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$910c6c2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:13,493 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:13,496 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1473b8c0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:13,518 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b5e10edf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:13,554 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:14,394 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 08:35:15,060 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c778f320d8984128a10aad7', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8935}] to 51.68.71.91:43975
2019-02-28 08:35:15,100 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c778f320d8984128a10aad7', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36768052}
2019-02-28 08:35:17,190 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@43acd79e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e1b061, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c1cfa53, org.springframework.security.web.header.HeaderWriterFilter@708f018e, org.springframework.security.web.authentication.logout.LogoutFilter@4667c4c1, com.apiwatch.security.jwt.JwtAuthTokenFilter@51b01550, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b06bef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6056232d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38f77cd9, org.springframework.security.web.session.SessionManagementFilter@6468a7b6, org.springframework.security.web.access.ExceptionTranslationFilter@2be95d31, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43984213]
2019-02-28 08:35:18,040 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Thu Feb 28 08:35:10 CET 2019]; root of context hierarchy
2019-02-28 08:35:18,168 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 08:35:18,172 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:18,173 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 08:35:18,173 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 08:35:18,175 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-28 08:35:18,175 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 08:35:18,175 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 08:35:18,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 08:35:18,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 08:35:18,183 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:18,184 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:18,195 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 08:35:18,197 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 08:35:18,198 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 08:35:18,199 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 08:35:18,199 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 08:35:18,200 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 08:35:18,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 08:35:18,202 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 08:35:18,203 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 08:35:18,205 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 08:35:18,216 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 08:35:18,217 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 08:35:18,217 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 08:35:18,219 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 08:35:18,220 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 08:35:18,220 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 08:35:18,220 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 08:35:18,225 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 08:35:18,225 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 08:35:18,225 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 08:35:18,226 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 08:35:18,227 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 08:35:18,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 08:35:18,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 08:35:18,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 08:35:18,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 08:35:18,230 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 08:35:18,230 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 08:35:18,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 08:35:18,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 08:35:18,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 08:35:18,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 08:35:18,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 08:35:18,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 08:35:18,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 08:35:18,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 08:35:18,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 08:35:18,239 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 08:35:18,239 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 08:35:18,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 08:35:18,242 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 08:35:18,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 08:35:18,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 08:35:18,244 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 08:35:18,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 08:35:18,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 08:35:18,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 08:35:18,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 08:35:18,257 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 08:35:18,258 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 08:35:18,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 08:35:18,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 08:35:18,264 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 08:35:18,266 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 08:35:18,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 08:35:18,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 08:35:18,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 08:35:18,276 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 08:35:18,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 08:35:18,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 08:35:18,283 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 08:35:18,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 08:35:18,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 08:35:18,285 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 08:35:18,285 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 08:35:18,286 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 08:35:18,287 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 08:35:18,288 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 08:35:18,298 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 08:35:18,299 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 08:35:18,302 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 08:35:18,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 08:35:18,304 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 08:35:18,305 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 08:35:18,306 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 08:35:18,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 08:35:18,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 08:35:18,317 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 08:35:18,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 08:35:18,320 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 08:35:18,328 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 08:35:18,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 08:35:18,333 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 08:35:18,345 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:18,540 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 08:35:18,553 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 08:35:18,652 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 08:35:19,150 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 08:35:19,169 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 9.895 seconds (JVM running for 11.749)
2019-02-28 08:35:19,297 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Thu Feb 28 08:35:10 CET 2019]; root of context hierarchy
2019-02-28 08:35:21,866 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 4514 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 08:35:21,870 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 08:35:21,927 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31534255: startup date [Thu Feb 28 08:35:21 CET 2019]; root of context hierarchy
2019-02-28 08:35:22,860 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 08:35:22,962 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ec8ad4b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:22,970 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:22,972 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3b4e7cc3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:22,977 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$115f776b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:22,984 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 08:35:23,236 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 08:35:23,248 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 08:35:23,259 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 08:35:23,260 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 08:35:23,280 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 08:35:23,358 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 08:35:23,359 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1436 ms
2019-02-28 08:35:24,391 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 08:35:24,848 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c778f3c0d898411a2d504be', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8936}] to 51.68.71.91:43975
2019-02-28 08:35:24,880 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c778f3c0d898411a2d504be', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31157268}
2019-02-28 08:35:25,345 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 08:35:25,345 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 08:35:25,345 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 08:35:25,346 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 08:35:25,346 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 08:35:25,347 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 08:35:25,349 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 08:35:26,177 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@3d27b3b6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2401e747, org.springframework.security.web.context.SecurityContextPersistenceFilter@69442da2, org.springframework.security.web.header.HeaderWriterFilter@1cdf2d05, org.springframework.security.web.authentication.logout.LogoutFilter@291037e5, com.apiwatch.security.jwt.JwtAuthTokenFilter@be487c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f1ce81f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36fa33e1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@484f670c, org.springframework.security.web.session.SessionManagementFilter@a826c14, org.springframework.security.web.access.ExceptionTranslationFilter@66681278, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f58a8ec]
2019-02-28 08:35:26,483 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31534255: startup date [Thu Feb 28 08:35:21 CET 2019]; root of context hierarchy
2019-02-28 08:35:26,685 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 08:35:26,689 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-28 08:35:26,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 08:35:26,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:26,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 08:35:26,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 08:35:26,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 08:35:26,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 08:35:26,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 08:35:26,693 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:26,694 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:26,696 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 08:35:26,701 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 08:35:26,705 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 08:35:26,705 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 08:35:26,710 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 08:35:26,711 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 08:35:26,712 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 08:35:26,718 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 08:35:26,719 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 08:35:26,720 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 08:35:26,724 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 08:35:26,724 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 08:35:26,725 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 08:35:26,726 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 08:35:26,726 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 08:35:26,726 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 08:35:26,726 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 08:35:26,729 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 08:35:26,730 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 08:35:26,730 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 08:35:26,730 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 08:35:26,730 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 08:35:26,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 08:35:26,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 08:35:26,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 08:35:26,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 08:35:26,732 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 08:35:26,732 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 08:35:26,734 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 08:35:26,734 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 08:35:26,735 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 08:35:26,735 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 08:35:26,735 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 08:35:26,735 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 08:35:26,736 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 08:35:26,736 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 08:35:26,736 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 08:35:26,736 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 08:35:26,737 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 08:35:26,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 08:35:26,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 08:35:26,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 08:35:26,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 08:35:26,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 08:35:26,740 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 08:35:26,740 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 08:35:26,740 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 08:35:26,741 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 08:35:26,741 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 08:35:26,741 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 08:35:26,742 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 08:35:26,742 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 08:35:26,742 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 08:35:26,743 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 08:35:26,744 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 08:35:26,744 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 08:35:26,744 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 08:35:26,746 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 08:35:26,747 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 08:35:26,747 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 08:35:26,748 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 08:35:26,748 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 08:35:26,748 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 08:35:26,749 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 08:35:26,749 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 08:35:26,750 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 08:35:26,750 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 08:35:26,750 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 08:35:26,751 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 08:35:26,752 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 08:35:26,752 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 08:35:26,752 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 08:35:26,753 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 08:35:26,753 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 08:35:26,754 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 08:35:26,760 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 08:35:26,764 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 08:35:26,764 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 08:35:26,764 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 08:35:26,765 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 08:35:26,765 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 08:35:26,766 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 08:35:26,769 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 08:35:26,770 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 08:35:26,837 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 08:35:26,837 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 08:35:26,904 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 08:35:27,192 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 08:35:27,205 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 08:35:27,221 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 08:35:27,256 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 08:35:27,412 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 08:35:27,425 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 6.464 seconds (JVM running for 27.17)
2019-02-28 08:37:12,436 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 08:37:12,436 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 08:37:12,503 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-02-28 08:37:12,588 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-3] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 08:37:13,081 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-3] Opened connection [connectionId{localValue:2, serverValue:8937}] to 51.68.71.91:43975
2019-02-28 08:37:14,769 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:3, serverValue:8938}] to 51.68.71.91:43975
2019-02-28 08:37:14,781 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:4, serverValue:8939}] to 51.68.71.91:43975
2019-02-28 08:37:14,808 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:5, serverValue:8940}] to 51.68.71.91:43975
2019-02-28 08:39:04,588 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:6, serverValue:8941}] to 51.68.71.91:43975
2019-02-28 08:58:15,904 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-6] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 09:00:28,557 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:7, serverValue:8946}] to 51.68.71.91:43975
2019-02-28 09:00:36,262 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 09:00:36
2019-02-28 09:00:37,054 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 10:00:34,203 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 10:00:34
2019-02-28 10:00:35,308 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 10:41:55,274 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-3] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 10:46:00,206 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31534255: startup date [Thu Feb 28 08:35:21 CET 2019]; root of context hierarchy
2019-02-28 10:46:00,213 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-28 10:46:00,773 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:8940}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 10:46:00,774 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:8938}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 10:46:00,775 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:7, serverValue:8946}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 10:46:00,776 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:8939}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 10:46:00,777 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:6, serverValue:8941}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 10:46:00,778 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:8937}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 10:46:07,749 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 4361 (started by mickael in /home/mickael/git/Backend)
2019-02-28 10:46:07,750 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 10:46:07,806 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Thu Feb 28 10:46:07 CET 2019]; root of context hierarchy
2019-02-28 10:46:08,732 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 10:46:08,840 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bb76607c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:08,850 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:08,852 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@21ab988f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:08,880 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e04b032e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:08,889 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:09,228 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 10:46:10,066 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77ade10d8984110960b5f6', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8957}] to 51.68.71.91:43975
2019-02-28 10:46:10,576 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77ade10d8984110960b5f6', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=508497023}
2019-02-28 10:46:10,626 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@107bfcb2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bac686b, org.springframework.security.web.context.SecurityContextPersistenceFilter@279dd959, org.springframework.security.web.header.HeaderWriterFilter@4fb392c4, org.springframework.security.web.authentication.logout.LogoutFilter@788ba63e, com.apiwatch.security.jwt.JwtAuthTokenFilter@b112b13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36c281ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29fd8e67, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ab26378, org.springframework.security.web.session.SessionManagementFilter@1c9fbb61, org.springframework.security.web.access.ExceptionTranslationFilter@7c112f5f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@330c1f61]
2019-02-28 10:46:11,166 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Thu Feb 28 10:46:07 CET 2019]; root of context hierarchy
2019-02-28 10:46:11,267 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 10:46:11,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 10:46:11,273 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 10:46:11,274 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 10:46:11,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 10:46:11,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 10:46:11,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-28 10:46:11,283 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 10:46:11,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:11,287 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:11,288 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:11,292 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 10:46:11,297 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 10:46:11,298 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 10:46:11,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 10:46:11,312 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 10:46:11,312 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 10:46:11,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 10:46:11,314 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 10:46:11,315 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 10:46:11,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 10:46:11,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 10:46:11,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 10:46:11,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 10:46:11,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 10:46:11,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 10:46:11,330 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 10:46:11,333 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 10:46:11,347 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:46:11,348 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 10:46:11,353 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 10:46:11,355 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 10:46:11,356 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 10:46:11,356 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 10:46:11,357 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 10:46:11,357 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 10:46:11,358 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:46:11,360 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 10:46:11,361 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 10:46:11,367 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 10:46:11,370 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 10:46:11,375 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 10:46:11,376 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 10:46:11,376 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 10:46:11,377 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 10:46:11,377 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 10:46:11,378 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:46:11,379 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:46:11,379 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 10:46:11,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 10:46:11,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 10:46:11,383 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 10:46:11,385 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 10:46:11,385 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 10:46:11,385 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 10:46:11,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 10:46:11,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 10:46:11,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 10:46:11,389 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 10:46:11,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 10:46:11,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 10:46:11,392 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 10:46:11,393 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 10:46:11,394 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 10:46:11,395 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 10:46:11,396 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 10:46:11,396 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 10:46:11,397 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 10:46:11,399 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 10:46:11,400 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 10:46:11,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 10:46:11,404 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 10:46:11,405 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 10:46:11,405 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 10:46:11,406 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 10:46:11,406 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 10:46:11,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 10:46:11,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:46:11,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 10:46:11,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 10:46:11,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 10:46:11,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 10:46:11,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 10:46:11,412 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 10:46:11,413 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:46:11,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:46:11,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 10:46:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 10:46:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 10:46:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 10:46:11,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 10:46:11,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 10:46:11,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 10:46:11,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:11,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:46:11,475 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:46:11,475 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:46:11,523 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:46:11,692 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 10:46:11,698 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.353 seconds (JVM running for 4.979)
2019-02-28 10:46:11,826 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Thu Feb 28 10:46:07 CET 2019]; root of context hierarchy
2019-02-28 10:46:13,837 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 4310 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 10:46:13,851 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 10:46:13,900 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bdb6f37: startup date [Thu Feb 28 10:46:13 CET 2019]; root of context hierarchy
2019-02-28 10:46:15,574 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 10:46:15,722 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$68aa071a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:15,744 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:15,745 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3f4cc4fd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:15,781 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8d7ea9cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:15,797 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:46:16,094 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 10:46:16,126 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 10:46:16,136 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 10:46:16,136 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 10:46:16,153 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 10:46:16,266 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 10:46:16,266 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 2371 ms
2019-02-28 10:46:16,867 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 10:46:17,257 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 10:46:17,258 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 10:46:17,258 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 10:46:17,258 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 10:46:17,258 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 10:46:17,258 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 10:46:17,259 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 10:46:17,825 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@8bacfc1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ad11bc8, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f6f96ce, org.springframework.security.web.header.HeaderWriterFilter@2a2c5a3c, org.springframework.security.web.authentication.logout.LogoutFilter@5aa1515e, com.apiwatch.security.jwt.JwtAuthTokenFilter@37b968e4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@497a7d6d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d2d3a88, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44b75b52, org.springframework.security.web.session.SessionManagementFilter@61b603dc, org.springframework.security.web.access.ExceptionTranslationFilter@1a56a666, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a1ce186]
2019-02-28 10:46:18,099 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bdb6f37: startup date [Thu Feb 28 10:46:13 CET 2019]; root of context hierarchy
2019-02-28 10:46:18,175 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 10:46:18,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 10:46:18,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-28 10:46:18,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 10:46:18,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:18,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 10:46:18,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 10:46:18,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 10:46:18,178 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 10:46:18,180 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:18,181 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:18,182 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 10:46:18,183 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 10:46:18,184 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 10:46:18,184 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 10:46:18,185 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 10:46:18,185 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 10:46:18,186 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 10:46:18,186 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 10:46:18,187 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 10:46:18,187 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 10:46:18,189 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 10:46:18,191 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 10:46:18,192 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 10:46:18,195 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 10:46:18,197 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 10:46:18,197 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 10:46:18,198 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 10:46:18,200 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 10:46:18,200 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 10:46:18,200 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 10:46:18,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:46:18,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 10:46:18,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:46:18,205 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 10:46:18,207 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 10:46:18,209 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 10:46:18,210 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77ade80d898410d64a25e2', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8958}] to 51.68.71.91:43975
2019-02-28 10:46:18,215 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 10:46:18,215 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 10:46:18,224 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:46:18,225 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 10:46:18,226 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 10:46:18,227 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 10:46:18,227 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 10:46:18,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 10:46:18,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 10:46:18,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:46:18,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 10:46:18,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 10:46:18,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 10:46:18,230 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 10:46:18,231 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 10:46:18,231 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 10:46:18,231 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 10:46:18,232 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 10:46:18,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 10:46:18,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 10:46:18,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 10:46:18,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 10:46:18,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 10:46:18,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 10:46:18,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 10:46:18,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 10:46:18,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 10:46:18,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 10:46:18,240 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 10:46:18,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 10:46:18,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 10:46:18,244 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77ade80d898410d64a25e2', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30971434}
2019-02-28 10:46:18,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 10:46:18,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 10:46:18,247 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 10:46:18,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 10:46:18,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 10:46:18,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 10:46:18,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 10:46:18,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 10:46:18,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 10:46:18,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:46:18,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 10:46:18,250 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 10:46:18,250 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 10:46:18,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 10:46:18,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 10:46:18,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 10:46:18,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 10:46:18,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:46:18,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:46:18,253 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 10:46:18,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 10:46:18,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 10:46:18,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 10:46:18,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 10:46:18,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 10:46:18,264 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:46:18,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 10:46:18,317 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:46:18,318 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:46:18,363 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:46:18,547 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 10:46:18,558 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 10:46:18,564 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 10:46:18,572 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 10:46:18,597 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 10:46:18,600 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 5.485 seconds (JVM running for 16.514)
2019-02-28 10:47:30,920 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-2] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 10:47:30,920 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 10:47:30,940 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-02-28 10:47:31,694 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:4, serverValue:8961}] to 51.68.71.91:43975
2019-02-28 10:47:31,699 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-5] Opened connection [connectionId{localValue:5, serverValue:8962}] to 51.68.71.91:43975
2019-02-28 10:47:31,702 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:3, serverValue:8959}] to 51.68.71.91:43975
2019-02-28 10:47:31,703 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:2, serverValue:8960}] to 51.68.71.91:43975
2019-02-28 10:49:39,181 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-6] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 10:53:01,039 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-6] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 10:54:39,335 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 3296 (started by mickael in /home/mickael/git/Backend)
2019-02-28 10:54:39,337 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 10:54:39,409 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6933b6c6: startup date [Thu Feb 28 10:54:39 CET 2019]; root of context hierarchy
2019-02-28 10:54:40,573 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 10:54:40,670 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ac29ce1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:40,678 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:40,679 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b5c0057' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:40,685 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2f973f93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:40,692 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:41,019 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 10:54:41,454 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77afe10d89840ce0332d7e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8963}] to 51.68.71.91:43975
2019-02-28 10:54:41,484 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77afe10d89840ce0332d7e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29086181}
2019-02-28 10:54:42,667 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@485e13d7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43984213, org.springframework.security.web.context.SecurityContextPersistenceFilter@6415f61e, org.springframework.security.web.header.HeaderWriterFilter@68ee3b6d, org.springframework.security.web.authentication.logout.LogoutFilter@1806bc4c, com.apiwatch.security.jwt.JwtAuthTokenFilter@61ab89b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a0bef24, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61bcbcce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ff7a73, org.springframework.security.web.session.SessionManagementFilter@a5bbaec, org.springframework.security.web.access.ExceptionTranslationFilter@3289079a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5115f590]
2019-02-28 10:54:43,204 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6933b6c6: startup date [Thu Feb 28 10:54:39 CET 2019]; root of context hierarchy
2019-02-28 10:54:43,308 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 10:54:43,310 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:43,312 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 10:54:43,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 10:54:43,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-28 10:54:43,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 10:54:43,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 10:54:43,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 10:54:43,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 10:54:43,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:43,327 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:43,332 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 10:54:43,337 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 10:54:43,339 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 10:54:43,341 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 10:54:43,343 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 10:54:43,344 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 10:54:43,345 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 10:54:43,346 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 10:54:43,347 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 10:54:43,347 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 10:54:43,350 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 10:54:43,351 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 10:54:43,351 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 10:54:43,354 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 10:54:43,355 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 10:54:43,356 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 10:54:43,357 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 10:54:43,361 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 10:54:43,362 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 10:54:43,362 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 10:54:43,363 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 10:54:43,363 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 10:54:43,364 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:54:43,364 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:54:43,364 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 10:54:43,365 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 10:54:43,366 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 10:54:43,367 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 10:54:43,370 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 10:54:43,370 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 10:54:43,371 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 10:54:43,371 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 10:54:43,372 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 10:54:43,372 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:54:43,373 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:54:43,373 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 10:54:43,374 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 10:54:43,374 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 10:54:43,374 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 10:54:43,376 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 10:54:43,377 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 10:54:43,378 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 10:54:43,378 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 10:54:43,378 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 10:54:43,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 10:54:43,381 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 10:54:43,381 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 10:54:43,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 10:54:43,383 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 10:54:43,383 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 10:54:43,385 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 10:54:43,386 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 10:54:43,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 10:54:43,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 10:54:43,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 10:54:43,389 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 10:54:43,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 10:54:43,392 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 10:54:43,393 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 10:54:43,393 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 10:54:43,394 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 10:54:43,394 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 10:54:43,395 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 10:54:43,395 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 10:54:43,396 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 10:54:43,398 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 10:54:43,402 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:54:43,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 10:54:43,406 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 10:54:43,406 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 10:54:43,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 10:54:43,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 10:54:43,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 10:54:43,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 10:54:43,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:54:43,409 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:54:43,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 10:54:43,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 10:54:43,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 10:54:43,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 10:54:43,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 10:54:43,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 10:54:43,413 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:54:43,413 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:43,460 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:54:43,460 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:54:43,505 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:54:43,695 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 10:54:43,701 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.767 seconds (JVM running for 6.0)
2019-02-28 10:54:43,791 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@6933b6c6: startup date [Thu Feb 28 10:54:39 CET 2019]; root of context hierarchy
2019-02-28 10:54:45,347 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 3253 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 10:54:45,349 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 10:54:45,372 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a1c212c: startup date [Thu Feb 28 10:54:45 CET 2019]; root of context hierarchy
2019-02-28 10:54:46,044 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 10:54:46,134 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$491310b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:46,142 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:46,144 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6b709262' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:46,149 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6de7b368] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:46,157 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 10:54:46,366 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 10:54:46,389 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 10:54:46,397 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 10:54:46,397 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 10:54:46,408 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 10:54:46,481 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 10:54:46,481 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1109 ms
2019-02-28 10:54:46,991 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 10:54:47,304 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77afe60d89840cb52afcbd', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8964}] to 51.68.71.91:43975
2019-02-28 10:54:47,335 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77afe60d89840cb52afcbd', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29806688}
2019-02-28 10:54:47,433 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 10:54:47,433 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 10:54:47,433 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 10:54:47,433 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 10:54:47,434 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 10:54:47,434 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 10:54:47,434 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 10:54:47,973 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@677222c4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e7175de, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c3cc1a0, org.springframework.security.web.header.HeaderWriterFilter@2e817795, org.springframework.security.web.authentication.logout.LogoutFilter@5a2fcea6, com.apiwatch.security.jwt.JwtAuthTokenFilter@67e8cd15, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ff7d240, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13452e83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70054f9f, org.springframework.security.web.session.SessionManagementFilter@45416fa4, org.springframework.security.web.access.ExceptionTranslationFilter@1da5f662, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fddf304]
2019-02-28 10:54:48,192 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a1c212c: startup date [Thu Feb 28 10:54:45 CET 2019]; root of context hierarchy
2019-02-28 10:54:48,259 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:48,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 10:54:48,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 10:54:48,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-28 10:54:48,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 10:54:48,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 10:54:48,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 10:54:48,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 10:54:48,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 10:54:48,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:48,266 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:48,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 10:54:48,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 10:54:48,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 10:54:48,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 10:54:48,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 10:54:48,271 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 10:54:48,272 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 10:54:48,273 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 10:54:48,273 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 10:54:48,273 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 10:54:48,298 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 10:54:48,299 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 10:54:48,299 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 10:54:48,300 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 10:54:48,300 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 10:54:48,300 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 10:54:48,301 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 10:54:48,302 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 10:54:48,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 10:54:48,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 10:54:48,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:54:48,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 10:54:48,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 10:54:48,304 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 10:54:48,304 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 10:54:48,304 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 10:54:48,305 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 10:54:48,306 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 10:54:48,307 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:54:48,307 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 10:54:48,308 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 10:54:48,308 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 10:54:48,308 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 10:54:48,308 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 10:54:48,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 10:54:48,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 10:54:48,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 10:54:48,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 10:54:48,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 10:54:48,310 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 10:54:48,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 10:54:48,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 10:54:48,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 10:54:48,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 10:54:48,312 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 10:54:48,312 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 10:54:48,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 10:54:48,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 10:54:48,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 10:54:48,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 10:54:48,314 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 10:54:48,314 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 10:54:48,314 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 10:54:48,315 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 10:54:48,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 10:54:48,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 10:54:48,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 10:54:48,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 10:54:48,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 10:54:48,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 10:54:48,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 10:54:48,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 10:54:48,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 10:54:48,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 10:54:48,320 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 10:54:48,320 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 10:54:48,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:54:48,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 10:54:48,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 10:54:48,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 10:54:48,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 10:54:48,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 10:54:48,323 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 10:54:48,323 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 10:54:48,324 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:54:48,324 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 10:54:48,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 10:54:48,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 10:54:48,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 10:54:48,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 10:54:48,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 10:54:48,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 10:54:48,328 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 10:54:48,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 10:54:48,373 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:54:48,373 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:54:48,413 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 10:54:48,541 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 10:54:48,551 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 10:54:48,556 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 10:54:48,562 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 10:54:48,585 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 10:54:48,587 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.585 seconds (JVM running for 21.208)
2019-02-28 10:55:35,840 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 10:55:35,840 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 10:55:35,859 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-28 10:55:35,924 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 10:55:36,403 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:8965}] to 51.68.71.91:43975
2019-02-28 10:55:37,862 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:5, serverValue:8968}] to 51.68.71.91:43975
2019-02-28 10:55:37,862 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:4, serverValue:8967}] to 51.68.71.91:43975
2019-02-28 10:55:37,869 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:3, serverValue:8966}] to 51.68.71.91:43975
2019-02-28 11:00:36,054 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 11:00:36
2019-02-28 11:00:38,592 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 11:01:37,457 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:6, serverValue:8974}] to 51.68.71.91:43975
2019-02-28 11:05:20,999 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-9] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 11:25:50,913 WARN com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Got socket exception on connection [connectionId{localValue:2, serverValue:8965}] to 51.68.71.91:43975. All connections to 51.68.71.91:43975 will be closed.
2019-02-28 11:25:50,919 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Closed connection [connectionId{localValue:2, serverValue:8965}] to 51.68.71.91:43975 because there was a socket exception raised by this connection.
2019-02-28 11:25:50,919 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Cluster description not yet available. Waiting for 30000 ms before timing out
2019-02-28 11:25:50,932 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Closed connection [connectionId{localValue:3, serverValue:8966}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 11:25:50,932 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-5] Closed connection [connectionId{localValue:4, serverValue:8967}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 11:25:50,933 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-5] Cluster description not yet available. Waiting for 30000 ms before timing out
2019-02-28 11:25:50,934 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Closed connection [connectionId{localValue:5, serverValue:8968}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 11:25:50,938 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Cluster description not yet available. Waiting for 30000 ms before timing out
2019-02-28 11:25:50,938 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Cluster description not yet available. Waiting for 30000 ms before timing out
2019-02-28 11:25:51,115 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Closed connection [connectionId{localValue:6, serverValue:8974}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 11:25:51,116 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Cluster description not yet available. Waiting for 30000 ms before timing out
2019-02-28 11:25:51,188 ERROR com.apiwatch.security.jwt.JwtAuthTokenFilter [http-nio-8091-exec-9] Can NOT set user authentication -> Message: {}
org.springframework.data.mongodb.UncategorizedMongoDbException: Exception receiving message; nested exception is com.mongodb.MongoSocketReadException: Exception receiving message
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:131)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:2589)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2457)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2265)
	at org.springframework.data.mongodb.core.ExecutableFindOperationSupport$ExecutableFindSupport.doFind(ExecutableFindOperationSupport.java:213)
	at org.springframework.data.mongodb.core.ExecutableFindOperationSupport$ExecutableFindSupport.oneValue(ExecutableFindOperationSupport.java:138)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery.lambda$getExecution$4(AbstractMongoQuery.java:124)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery.execute(AbstractMongoQuery.java:97)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy103.findUserByEmail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy103.findUserByEmail(Unknown Source)
	at com.apiwatch.security.service.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:34)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mongodb.MongoSocketReadException: Exception receiving message
	at com.mongodb.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:536)
	at com.mongodb.connection.InternalStreamConnection.receiveMessage(InternalStreamConnection.java:421)
	at com.mongodb.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:290)
	at com.mongodb.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:255)
	at com.mongodb.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:98)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:441)
	at com.mongodb.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:80)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:189)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:264)
	at com.mongodb.connection.DefaultServerConnection.command(DefaultServerConnection.java:126)
	at com.mongodb.connection.DefaultServerConnection.command(DefaultServerConnection.java:118)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:226)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:217)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:120)
	at com.mongodb.operation.FindOperation$1.call(FindOperation.java:717)
	at com.mongodb.operation.FindOperation$1.call(FindOperation.java:711)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:471)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:415)
	at com.mongodb.operation.FindOperation.execute(FindOperation.java:711)
	at com.mongodb.operation.FindOperation.execute(FindOperation.java:83)
	at com.mongodb.Mongo$3.execute(Mongo.java:826)
	at com.mongodb.MongoIterableImpl.execute(MongoIterableImpl.java:130)
	at com.mongodb.MongoIterableImpl.iterator(MongoIterableImpl.java:77)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2440)
	... 82 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mongodb.connection.SocketStream.read(SocketStream.java:84)
	at com.mongodb.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:547)
	at com.mongodb.connection.InternalStreamConnection.receiveMessage(InternalStreamConnection.java:418)
	... 104 common frames omitted
2019-02-28 11:25:51,214 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-9] Unauthorized error. Message :Full authentication is required to access this resource
2019-02-28 11:25:51,386 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-5] Opened connection [connectionId{localValue:7, serverValue:8975}] to 51.68.71.91:43975
2019-02-28 11:25:52,685 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:8, serverValue:8976}] to 51.68.71.91:43975
2019-02-28 11:25:52,688 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:10, serverValue:8978}] to 51.68.71.91:43975
2019-02-28 11:25:52,688 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-4] Opened connection [connectionId{localValue:9, serverValue:8977}] to 51.68.71.91:43975
2019-02-28 11:25:52,732 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-3] Opened connection [connectionId{localValue:11, serverValue:8979}] to 51.68.71.91:43975
2019-02-28 11:36:28,004 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: E11000 duplicate key error collection: production.Apiary index: _id_ dup key: { : ObjectId('5c7516fc0d89841052c13234') }; nested exception is com.mongodb.MongoWriteException: E11000 duplicate key error collection: production.Apiary index: _id_ dup key: { : ObjectId('5c7516fc0d89841052c13234') }] with root cause
com.mongodb.MongoWriteException: E11000 duplicate key error collection: production.Apiary index: _id_ dup key: { : ObjectId('5c7516fc0d89841052c13234') }
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:1033)
	at com.mongodb.MongoCollectionImpl.executeInsertOne(MongoCollectionImpl.java:513)
	at com.mongodb.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:493)
	at com.mongodb.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:487)
	at org.springframework.data.mongodb.core.MongoTemplate$8.doInCollection(MongoTemplate.java:1276)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:524)
	at org.springframework.data.mongodb.core.MongoTemplate.insertDocument(MongoTemplate.java:1270)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:1051)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:988)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.insert(SimpleMongoRepository.java:247)
	at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:629)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:593)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at com.apiwatch.controllers.ApiaryController.insert(ApiaryController.java:108)
	at com.apiwatch.controllers.ApiaryController$$FastClassBySpringCGLIB$$38108acd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.apiwatch.controllers.ApiaryController$$EnhancerBySpringCGLIB$$7fb51d66.insert(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 11:36:37,918 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: E11000 duplicate key error collection: production.Apiary index: _id_ dup key: { : ObjectId('5c7516fc0d89841052c13234') }; nested exception is com.mongodb.MongoWriteException: E11000 duplicate key error collection: production.Apiary index: _id_ dup key: { : ObjectId('5c7516fc0d89841052c13234') }] with root cause
com.mongodb.MongoWriteException: E11000 duplicate key error collection: production.Apiary index: _id_ dup key: { : ObjectId('5c7516fc0d89841052c13234') }
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:1033)
	at com.mongodb.MongoCollectionImpl.executeInsertOne(MongoCollectionImpl.java:513)
	at com.mongodb.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:493)
	at com.mongodb.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:487)
	at org.springframework.data.mongodb.core.MongoTemplate$8.doInCollection(MongoTemplate.java:1276)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:524)
	at org.springframework.data.mongodb.core.MongoTemplate.insertDocument(MongoTemplate.java:1270)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:1051)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:988)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.insert(SimpleMongoRepository.java:247)
	at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:629)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:593)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at com.apiwatch.controllers.ApiaryController.insert(ApiaryController.java:108)
	at com.apiwatch.controllers.ApiaryController$$FastClassBySpringCGLIB$$38108acd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.apiwatch.controllers.ApiaryController$$EnhancerBySpringCGLIB$$7fb51d66.insert(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 11:38:30,745 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8091-exec-10] Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 11:48:45,035 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-4] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 11:54:35,731 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a1c212c: startup date [Thu Feb 28 10:54:45 CET 2019]; root of context hierarchy
2019-02-28 11:54:35,737 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-28 11:54:35,788 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:8, serverValue:8976}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:54:35,789 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:11, serverValue:8979}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:54:35,789 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:10, serverValue:8978}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:54:35,790 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:9, serverValue:8977}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:54:35,790 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:7, serverValue:8975}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:54:42,084 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 5997 (started by mickael in /home/mickael/git/Backend)
2019-02-28 11:54:42,085 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 11:54:42,127 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Thu Feb 28 11:54:42 CET 2019]; root of context hierarchy
2019-02-28 11:54:42,925 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 11:54:43,040 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$981e4ea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:43,049 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:43,050 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1280851e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:43,056 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bcf2f15b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:43,064 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:43,392 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 11:54:43,724 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77bdf30d8984176d0ca2db', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8980}] to 51.68.71.91:43975
2019-02-28 11:54:43,757 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77bdf30d8984176d0ca2db', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28888936}
2019-02-28 11:54:44,662 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@37d28f02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15efda6c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b5a078a, org.springframework.security.web.header.HeaderWriterFilter@541179e7, org.springframework.security.web.authentication.logout.LogoutFilter@4ba02375, com.apiwatch.security.jwt.JwtAuthTokenFilter@18f55704, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ed922e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39909d1a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6056232d, org.springframework.security.web.session.SessionManagementFilter@46383a78, org.springframework.security.web.access.ExceptionTranslationFilter@4fb392c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52b06bef]
2019-02-28 11:54:44,996 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Thu Feb 28 11:54:42 CET 2019]; root of context hierarchy
2019-02-28 11:54:45,063 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 11:54:45,064 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:45,065 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 11:54:45,065 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 11:54:45,066 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:45,066 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 11:54:45,066 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 11:54:45,067 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 11:54:45,067 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 11:54:45,069 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:45,069 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:45,071 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 11:54:45,072 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 11:54:45,072 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 11:54:45,073 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 11:54:45,073 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 11:54:45,073 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 11:54:45,074 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 11:54:45,075 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 11:54:45,075 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 11:54:45,075 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 11:54:45,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 11:54:45,078 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:45,078 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 11:54:45,079 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 11:54:45,079 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 11:54:45,080 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 11:54:45,080 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 11:54:45,081 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 11:54:45,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 11:54:45,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 11:54:45,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 11:54:45,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:54:45,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 11:54:45,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:54:45,084 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 11:54:45,084 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 11:54:45,085 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 11:54:45,085 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 11:54:45,086 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 11:54:45,087 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 11:54:45,087 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 11:54:45,087 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 11:54:45,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 11:54:45,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:54:45,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:54:45,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 11:54:45,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 11:54:45,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 11:54:45,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 11:54:45,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 11:54:45,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 11:54:45,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 11:54:45,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 11:54:45,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 11:54:45,092 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 11:54:45,092 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 11:54:45,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 11:54:45,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 11:54:45,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 11:54:45,094 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 11:54:45,094 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 11:54:45,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 11:54:45,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 11:54:45,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 11:54:45,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 11:54:45,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 11:54:45,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 11:54:45,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 11:54:45,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 11:54:45,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 11:54:45,100 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 11:54:45,100 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 11:54:45,100 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 11:54:45,100 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 11:54:45,101 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 11:54:45,102 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 11:54:45,102 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:45,102 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 11:54:45,103 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 11:54:45,103 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 11:54:45,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 11:54:45,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 11:54:45,105 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 11:54:45,105 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 11:54:45,105 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:54:45,106 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:54:45,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 11:54:45,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 11:54:45,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 11:54:45,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 11:54:45,108 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 11:54:45,108 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 11:54:45,110 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:45,110 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:45,179 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:54:45,179 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:54:45,226 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:54:45,415 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 11:54:45,421 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.598 seconds (JVM running for 4.125)
2019-02-28 11:54:45,541 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Thu Feb 28 11:54:42 CET 2019]; root of context hierarchy
2019-02-28 11:54:47,121 DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator [background-preinit] Loaded expression factory via original TCCL
2019-02-28 11:54:47,211 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 5958 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 11:54:47,213 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 11:54:47,256 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43b755cc: startup date [Thu Feb 28 11:54:47 CET 2019]; root of context hierarchy
2019-02-28 11:54:48,015 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 11:54:48,117 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$33600d39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:48,126 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:48,128 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@27ba4b93' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:48,134 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5834afeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:48,141 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:54:48,366 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 11:54:48,379 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 11:54:48,387 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 11:54:48,387 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 11:54:48,402 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 11:54:48,650 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 11:54:48,651 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1395 ms
2019-02-28 11:54:48,989 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 11:54:49,501 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 11:54:49,502 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 11:54:49,502 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 11:54:49,502 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 11:54:49,503 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 11:54:49,503 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 11:54:49,503 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 11:54:49,585 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77bdf80d89841746d3b2ac', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8981}] to 51.68.71.91:43975
2019-02-28 11:54:49,615 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77bdf80d89841746d3b2ac', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28792139}
2019-02-28 11:54:50,010 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@7550908, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@709f9de5, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c6f5112, org.springframework.security.web.header.HeaderWriterFilter@411b302d, org.springframework.security.web.authentication.logout.LogoutFilter@4be171b1, com.apiwatch.security.jwt.JwtAuthTokenFilter@580ee187, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16c943a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c093187, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5fb6ea53, org.springframework.security.web.session.SessionManagementFilter@7a2f153c, org.springframework.security.web.access.ExceptionTranslationFilter@5c19d6d7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fa1d627]
2019-02-28 11:54:50,246 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43b755cc: startup date [Thu Feb 28 11:54:47 CET 2019]; root of context hierarchy
2019-02-28 11:54:50,308 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:50,309 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 11:54:50,310 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-28 11:54:50,310 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:50,310 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 11:54:50,310 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 11:54:50,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 11:54:50,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 11:54:50,311 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 11:54:50,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:50,314 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:50,315 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 11:54:50,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 11:54:50,317 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 11:54:50,317 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 11:54:50,317 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 11:54:50,317 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 11:54:50,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 11:54:50,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 11:54:50,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 11:54:50,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 11:54:50,320 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 11:54:50,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:50,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 11:54:50,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 11:54:50,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 11:54:50,322 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 11:54:50,323 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 11:54:50,324 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 11:54:50,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 11:54:50,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 11:54:50,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:54:50,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 11:54:50,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 11:54:50,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:54:50,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 11:54:50,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 11:54:50,327 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 11:54:50,327 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 11:54:50,328 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:54:50,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 11:54:50,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 11:54:50,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 11:54:50,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 11:54:50,330 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 11:54:50,330 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 11:54:50,330 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:54:50,330 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 11:54:50,331 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 11:54:50,331 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 11:54:50,332 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 11:54:50,332 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 11:54:50,332 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 11:54:50,332 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 11:54:50,332 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 11:54:50,333 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 11:54:50,334 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 11:54:50,334 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 11:54:50,334 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 11:54:50,334 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 11:54:50,334 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 11:54:50,335 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 11:54:50,336 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 11:54:50,336 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 11:54:50,337 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 11:54:50,337 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 11:54:50,337 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 11:54:50,337 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 11:54:50,339 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 11:54:50,339 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 11:54:50,340 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 11:54:50,340 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 11:54:50,340 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 11:54:50,340 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 11:54:50,340 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 11:54:50,341 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 11:54:50,341 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 11:54:50,342 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:50,342 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 11:54:50,343 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 11:54:50,343 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 11:54:50,343 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 11:54:50,343 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 11:54:50,344 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 11:54:50,344 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 11:54:50,344 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:54:50,344 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:54:50,346 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 11:54:50,346 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 11:54:50,346 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 11:54:50,346 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 11:54:50,346 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 11:54:50,347 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 11:54:50,348 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:54:50,349 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 11:54:50,394 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:54:50,394 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:54:50,436 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:54:50,567 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 11:54:50,578 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 11:54:50,583 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 11:54:50,591 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 11:54:50,626 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 11:54:50,628 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.826 seconds (JVM running for 13.544)
2019-02-28 11:56:17,850 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-3] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 11:56:17,850 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-3] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 11:56:17,881 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-3] FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-02-28 11:56:18,678 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:4, serverValue:8982}] to 51.68.71.91:43975
2019-02-28 11:56:18,685 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-5] Opened connection [connectionId{localValue:2, serverValue:8983}] to 51.68.71.91:43975
2019-02-28 11:56:18,705 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:5, serverValue:8985}] to 51.68.71.91:43975
2019-02-28 11:56:18,717 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:3, serverValue:8984}] to 51.68.71.91:43975
2019-02-28 11:57:55,101 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43b755cc: startup date [Thu Feb 28 11:54:47 CET 2019]; root of context hierarchy
2019-02-28 11:57:55,107 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-28 11:57:55,172 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:8984}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:57:55,173 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:8985}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:57:55,173 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:8982}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:57:55,173 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:8983}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 11:58:00,370 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 6198 (started by mickael in /home/mickael/git/Backend)
2019-02-28 11:58:00,372 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 11:58:00,412 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Thu Feb 28 11:58:00 CET 2019]; root of context hierarchy
2019-02-28 11:58:01,217 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 11:58:01,320 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$981e4ea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:01,328 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:01,330 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13a37e2a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:01,336 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bcf2f15b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:01,342 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:01,712 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 11:58:02,030 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77beb90d898418368e9303', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8986}] to 51.68.71.91:43975
2019-02-28 11:58:02,059 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77beb90d898418368e9303', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28489549}
2019-02-28 11:58:02,709 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@37d28f02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15efda6c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b5a078a, org.springframework.security.web.header.HeaderWriterFilter@541179e7, org.springframework.security.web.authentication.logout.LogoutFilter@4ba02375, com.apiwatch.security.jwt.JwtAuthTokenFilter@18f55704, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ed922e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39909d1a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6056232d, org.springframework.security.web.session.SessionManagementFilter@46383a78, org.springframework.security.web.access.ExceptionTranslationFilter@4fb392c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52b06bef]
2019-02-28 11:58:03,066 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Thu Feb 28 11:58:00 CET 2019]; root of context hierarchy
2019-02-28 11:58:03,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 11:58:03,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:03,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 11:58:03,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:03,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:03,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 11:58:03,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 11:58:03,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 11:58:03,138 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 11:58:03,140 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:03,141 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:03,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 11:58:03,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 11:58:03,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 11:58:03,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 11:58:03,145 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 11:58:03,145 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 11:58:03,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 11:58:03,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 11:58:03,147 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 11:58:03,147 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 11:58:03,148 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 11:58:03,149 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:03,149 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 11:58:03,150 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 11:58:03,151 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 11:58:03,151 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 11:58:03,151 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 11:58:03,153 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 11:58:03,153 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 11:58:03,154 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 11:58:03,154 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 11:58:03,154 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:58:03,155 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 11:58:03,155 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:58:03,155 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 11:58:03,156 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 11:58:03,157 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 11:58:03,157 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 11:58:03,159 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 11:58:03,159 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 11:58:03,160 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 11:58:03,160 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 11:58:03,160 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 11:58:03,160 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:58:03,161 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:58:03,161 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 11:58:03,161 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 11:58:03,161 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 11:58:03,162 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 11:58:03,163 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 11:58:03,163 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 11:58:03,164 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 11:58:03,164 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 11:58:03,164 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 11:58:03,165 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 11:58:03,166 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 11:58:03,166 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 11:58:03,166 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 11:58:03,166 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 11:58:03,167 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 11:58:03,167 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 11:58:03,168 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 11:58:03,168 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 11:58:03,169 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 11:58:03,170 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 11:58:03,170 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 11:58:03,170 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 11:58:03,172 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 11:58:03,173 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 11:58:03,173 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 11:58:03,173 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 11:58:03,174 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 11:58:03,174 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 11:58:03,174 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 11:58:03,174 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 11:58:03,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 11:58:03,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:03,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 11:58:03,178 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 11:58:03,178 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 11:58:03,179 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 11:58:03,179 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 11:58:03,180 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 11:58:03,181 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:58:03,181 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:58:03,181 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 11:58:03,183 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 11:58:03,183 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 11:58:03,184 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 11:58:03,184 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 11:58:03,184 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 11:58:03,185 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 11:58:03,187 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:03,187 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:03,236 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:58:03,237 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:58:03,282 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:58:03,462 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 11:58:03,468 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.346 seconds (JVM running for 3.921)
2019-02-28 11:58:03,574 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Thu Feb 28 11:58:00 CET 2019]; root of context hierarchy
2019-02-28 11:58:05,250 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 6158 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 11:58:05,254 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 11:58:05,279 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cd47821: startup date [Thu Feb 28 11:58:05 CET 2019]; root of context hierarchy
2019-02-28 11:58:05,946 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 11:58:06,038 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$46f5c63d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:06,046 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:06,047 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7b735834' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:06,052 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6bca68ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:06,059 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 11:58:06,269 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 11:58:06,281 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 11:58:06,289 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 11:58:06,289 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 11:58:06,302 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 11:58:06,518 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 11:58:06,518 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1239 ms
2019-02-28 11:58:06,839 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 11:58:07,148 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77bebe0d8984180e547e59', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8987}] to 51.68.71.91:43975
2019-02-28 11:58:07,177 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77bebe0d8984180e547e59', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28755153}
2019-02-28 11:58:07,196 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 11:58:07,197 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 11:58:07,197 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 11:58:07,197 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 11:58:07,197 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 11:58:07,198 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 11:58:07,198 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 11:58:07,759 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@4e8246f7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75c9aeb8, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c45032, org.springframework.security.web.header.HeaderWriterFilter@575ee1eb, org.springframework.security.web.authentication.logout.LogoutFilter@5faa7d15, com.apiwatch.security.jwt.JwtAuthTokenFilter@427c5f67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6100d3de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d330c68, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7849a38e, org.springframework.security.web.session.SessionManagementFilter@65bb2874, org.springframework.security.web.access.ExceptionTranslationFilter@54578b06, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3e7e939b]
2019-02-28 11:58:08,006 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cd47821: startup date [Thu Feb 28 11:58:05 CET 2019]; root of context hierarchy
2019-02-28 11:58:08,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:08,097 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 11:58:08,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:08,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:08,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 11:58:08,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 11:58:08,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 11:58:08,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 11:58:08,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 11:58:08,101 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:08,102 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:08,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 11:58:08,105 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 11:58:08,105 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 11:58:08,106 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 11:58:08,106 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 11:58:08,106 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 11:58:08,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 11:58:08,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 11:58:08,108 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 11:58:08,108 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 11:58:08,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 11:58:08,110 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:08,110 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 11:58:08,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 11:58:08,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 11:58:08,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 11:58:08,112 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 11:58:08,113 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 11:58:08,113 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 11:58:08,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 11:58:08,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:58:08,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 11:58:08,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 11:58:08,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 11:58:08,115 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 11:58:08,115 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 11:58:08,116 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 11:58:08,116 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 11:58:08,117 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:58:08,118 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 11:58:08,118 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 11:58:08,118 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 11:58:08,118 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 11:58:08,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 11:58:08,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 11:58:08,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 11:58:08,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 11:58:08,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 11:58:08,120 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 11:58:08,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 11:58:08,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 11:58:08,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 11:58:08,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 11:58:08,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 11:58:08,122 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 11:58:08,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 11:58:08,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 11:58:08,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 11:58:08,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 11:58:08,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 11:58:08,124 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 11:58:08,124 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 11:58:08,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 11:58:08,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 11:58:08,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 11:58:08,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 11:58:08,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 11:58:08,128 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 11:58:08,129 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 11:58:08,129 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 11:58:08,129 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 11:58:08,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 11:58:08,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 11:58:08,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 11:58:08,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 11:58:08,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 11:58:08,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:08,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 11:58:08,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 11:58:08,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 11:58:08,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 11:58:08,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 11:58:08,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 11:58:08,134 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 11:58:08,134 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:58:08,134 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 11:58:08,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 11:58:08,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 11:58:08,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 11:58:08,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 11:58:08,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 11:58:08,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 11:58:08,139 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 11:58:08,139 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 11:58:08,188 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:58:08,188 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:58:08,234 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 11:58:08,369 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 11:58:08,381 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 11:58:08,386 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 11:58:08,392 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 11:58:08,421 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 11:58:08,423 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.528 seconds (JVM running for 12.472)
2019-02-28 11:58:17,333 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-2] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 11:58:17,410 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 11:58:17,478 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-02-28 11:58:18,338 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:4, serverValue:8989}] to 51.68.71.91:43975
2019-02-28 11:58:18,347 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:3, serverValue:8988}] to 51.68.71.91:43975
2019-02-28 11:58:18,366 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:5, serverValue:8990}] to 51.68.71.91:43975
2019-02-28 11:58:18,367 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-5] Opened connection [connectionId{localValue:2, serverValue:8991}] to 51.68.71.91:43975
2019-02-28 12:00:28,029 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 12:00:28
2019-02-28 12:00:29,189 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 12:04:09,924 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 3356 (started by mickael in /home/mickael/git/Backend)
2019-02-28 12:04:09,937 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 12:04:10,132 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6a4f1a55: startup date [Thu Feb 28 12:04:10 CET 2019]; root of context hierarchy
2019-02-28 12:04:13,334 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 12:04:13,910 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b15b8bfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:13,939 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:13,955 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29314cc9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:13,970 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d6302ead] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:14,012 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:14,601 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 12:04:15,525 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77c02e0d89840d1cd2a6c4', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8996}] to 51.68.71.91:43975
2019-02-28 12:04:15,558 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77c02e0d89840d1cd2a6c4', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30620902}
2019-02-28 12:04:17,833 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@61a91c9b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17092fff, org.springframework.security.web.context.SecurityContextPersistenceFilter@1455154c, org.springframework.security.web.header.HeaderWriterFilter@244418a, org.springframework.security.web.authentication.logout.LogoutFilter@2aa7399c, com.apiwatch.security.jwt.JwtAuthTokenFilter@5e922647, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@526b2f3e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e17a321, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2121d1f9, org.springframework.security.web.session.SessionManagementFilter@4bd5849e, org.springframework.security.web.access.ExceptionTranslationFilter@15d42ccb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7bac686b]
2019-02-28 12:04:18,966 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6a4f1a55: startup date [Thu Feb 28 12:04:10 CET 2019]; root of context hierarchy
2019-02-28 12:04:19,165 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 12:04:19,167 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 12:04:19,168 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 12:04:19,169 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 12:04:19,170 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:19,174 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 12:04:19,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:19,181 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:19,183 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 12:04:19,186 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:19,188 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:19,192 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 12:04:19,195 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 12:04:19,197 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 12:04:19,198 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 12:04:19,200 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 12:04:19,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 12:04:19,202 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 12:04:19,202 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 12:04:19,203 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 12:04:19,207 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 12:04:19,212 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 12:04:19,213 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:19,216 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 12:04:19,219 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 12:04:19,220 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 12:04:19,223 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 12:04:19,224 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 12:04:19,231 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 12:04:19,232 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 12:04:19,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 12:04:19,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 12:04:19,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 12:04:19,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 12:04:19,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 12:04:19,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 12:04:19,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 12:04:19,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 12:04:19,239 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 12:04:19,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 12:04:19,242 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 12:04:19,242 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 12:04:19,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 12:04:19,244 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 12:04:19,244 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 12:04:19,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 12:04:19,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 12:04:19,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 12:04:19,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 12:04:19,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 12:04:19,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 12:04:19,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 12:04:19,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 12:04:19,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 12:04:19,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 12:04:19,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 12:04:19,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 12:04:19,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 12:04:19,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 12:04:19,273 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 12:04:19,275 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 12:04:19,277 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 12:04:19,281 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 12:04:19,282 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 12:04:19,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 12:04:19,286 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 12:04:19,287 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 12:04:19,291 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 12:04:19,294 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 12:04:19,295 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 12:04:19,296 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 12:04:19,296 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 12:04:19,302 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 12:04:19,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 12:04:19,303 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 12:04:19,306 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 12:04:19,312 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 12:04:19,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:19,313 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 12:04:19,315 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 12:04:19,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 12:04:19,316 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 12:04:19,317 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 12:04:19,318 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 12:04:19,319 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 12:04:19,320 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 12:04:19,321 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 12:04:19,324 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 12:04:19,325 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 12:04:19,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 12:04:19,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 12:04:19,326 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 12:04:19,327 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 12:04:19,329 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:19,330 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:19,398 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 12:04:19,398 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 12:04:19,482 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 12:04:19,872 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 12:04:19,882 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 10.677 seconds (JVM running for 11.714)
2019-02-28 12:04:20,150 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@6a4f1a55: startup date [Thu Feb 28 12:04:10 CET 2019]; root of context hierarchy
2019-02-28 12:04:22,075 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 3268 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 12:04:22,079 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 12:04:22,139 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16d85c8c: startup date [Thu Feb 28 12:04:22 CET 2019]; root of context hierarchy
2019-02-28 12:04:23,237 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 12:04:23,333 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3569c81c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:23,342 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:23,343 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@191437b1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:23,350 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5a3e6ace] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:23,358 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 12:04:23,573 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 12:04:23,586 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 12:04:23,594 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 12:04:23,594 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 12:04:23,609 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 12:04:23,658 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 12:04:23,659 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1521 ms
2019-02-28 12:04:24,143 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 12:04:24,585 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 12:04:24,587 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 12:04:24,587 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 12:04:24,587 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 12:04:24,587 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 12:04:24,588 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 12:04:24,588 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 12:04:25,313 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@2b8af6b4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42263d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c30a599, org.springframework.security.web.header.HeaderWriterFilter@7397b069, org.springframework.security.web.authentication.logout.LogoutFilter@1b0b4701, com.apiwatch.security.jwt.JwtAuthTokenFilter@500f9b1e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1038293e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a65e5cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b763b8a, org.springframework.security.web.session.SessionManagementFilter@31d1e47b, org.springframework.security.web.access.ExceptionTranslationFilter@40d5c135, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2932fb16]
2019-02-28 12:04:25,532 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16d85c8c: startup date [Thu Feb 28 12:04:22 CET 2019]; root of context hierarchy
2019-02-28 12:04:25,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 12:04:25,596 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:25,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:25,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 12:04:25,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:25,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 12:04:25,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 12:04:25,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 12:04:25,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 12:04:25,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:25,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:25,603 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 12:04:25,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 12:04:25,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 12:04:25,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 12:04:25,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 12:04:25,606 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 12:04:25,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 12:04:25,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 12:04:25,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 12:04:25,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 12:04:25,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:25,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 12:04:25,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 12:04:25,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 12:04:25,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 12:04:25,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 12:04:25,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 12:04:25,613 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 12:04:25,613 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 12:04:25,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 12:04:25,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 12:04:25,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 12:04:25,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 12:04:25,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 12:04:25,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 12:04:25,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 12:04:25,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 12:04:25,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 12:04:25,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 12:04:25,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 12:04:25,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 12:04:25,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 12:04:25,619 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 12:04:25,619 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 12:04:25,619 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 12:04:25,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 12:04:25,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 12:04:25,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 12:04:25,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 12:04:25,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 12:04:25,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 12:04:25,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 12:04:25,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 12:04:25,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 12:04:25,623 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 12:04:25,623 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 12:04:25,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 12:04:25,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 12:04:25,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 12:04:25,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 12:04:25,625 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 12:04:25,625 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 12:04:25,625 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 12:04:25,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 12:04:25,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 12:04:25,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 12:04:25,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 12:04:25,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 12:04:25,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 12:04:25,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 12:04:25,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 12:04:25,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 12:04:25,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 12:04:25,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 12:04:25,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 12:04:25,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 12:04:25,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:25,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 12:04:25,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 12:04:25,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 12:04:25,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 12:04:25,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 12:04:25,634 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 12:04:25,634 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 12:04:25,634 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 12:04:25,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 12:04:25,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 12:04:25,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 12:04:25,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 12:04:25,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 12:04:25,637 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 12:04:25,637 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 12:04:25,639 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 12:04:25,639 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 12:04:25,699 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 12:04:25,700 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 12:04:25,758 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 12:04:25,899 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 12:04:25,911 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 12:04:25,917 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 12:04:25,923 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 12:04:25,948 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 12:04:25,950 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.446 seconds (JVM running for 29.228)
2019-02-28 12:04:27,097 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77c0380d89840cc44ed2af', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:8997}] to 51.68.71.91:43975
2019-02-28 12:04:27,130 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77c0380d89840cc44ed2af', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31223898}
2019-02-28 12:04:50,883 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 12:04:50,884 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 12:04:50,902 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-02-28 12:04:50,938 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 12:04:51,385 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:8998}] to 51.68.71.91:43975
2019-02-28 12:04:52,941 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:3, serverValue:8999}] to 51.68.71.91:43975
2019-02-28 12:04:53,890 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:6, serverValue:9002}] to 51.68.71.91:43975
2019-02-28 12:04:53,924 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:4, serverValue:9000}] to 51.68.71.91:43975
2019-02-28 12:04:53,927 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:5, serverValue:9001}] to 51.68.71.91:43975
2019-02-28 12:09:57,395 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-9] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 12:24:21,678 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-3] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 13:00:58,513 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 13:00:58
2019-02-28 13:00:59,682 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 13:30:07,408 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-6] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 13:30:07,447 WARN com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Got socket exception on connection [connectionId{localValue:5, serverValue:9001}] to 51.68.71.91:43975. All connections to 51.68.71.91:43975 will be closed.
2019-02-28 13:30:07,451 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Closed connection [connectionId{localValue:5, serverValue:9001}] to 51.68.71.91:43975 because there was a socket exception raised by this connection.
2019-02-28 13:30:07,451 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Cluster description not yet available. Waiting for 30000 ms before timing out
2019-02-28 13:30:07,488 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-6] Unauthorized error. Message :Exception receiving message; nested exception is com.mongodb.MongoSocketReadException: Exception receiving message
2019-02-28 13:30:21,343 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-1] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 13:30:21,349 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Closed connection [connectionId{localValue:3, serverValue:8999}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 13:30:21,352 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Closed connection [connectionId{localValue:4, serverValue:9000}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 13:30:21,355 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Closed connection [connectionId{localValue:6, serverValue:9002}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 13:30:21,356 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Closed connection [connectionId{localValue:2, serverValue:8998}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-28 13:30:21,594 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:7, serverValue:9009}] to 51.68.71.91:43975
2019-02-28 13:30:22,580 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:10, serverValue:9012}] to 51.68.71.91:43975
2019-02-28 13:30:22,582 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-4] Opened connection [connectionId{localValue:9, serverValue:9011}] to 51.68.71.91:43975
2019-02-28 13:30:22,586 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:8, serverValue:9010}] to 51.68.71.91:43975
2019-02-28 13:32:50,853 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:11, serverValue:9013}] to 51.68.71.91:43975
2019-02-28 14:00:36,743 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 14:00:36
2019-02-28 14:00:37,765 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:06:52,023 ERROR com.apiwatch.security.jwt.JwtAuthTokenFilter [http-nio-8091-exec-5] Can NOT set user authentication -> Message: {}
java.lang.NullPointerException: null
	at com.apiwatch.security.service.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:35)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:18:23,513 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16d85c8c: startup date [Thu Feb 28 12:04:22 CET 2019]; root of context hierarchy
2019-02-28 14:18:23,519 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-28 14:18:23,563 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:7, serverValue:9009}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:18:23,564 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:8, serverValue:9010}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:18:23,565 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:9, serverValue:9011}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:18:23,566 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:11, serverValue:9013}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:18:23,567 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:10, serverValue:9012}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:19:02,622 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 9801 (started by mickael in /home/mickael/git/Backend)
2019-02-28 14:19:02,625 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:19:02,689 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Thu Feb 28 14:19:02 CET 2019]; root of context hierarchy
2019-02-28 14:19:03,600 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:19:03,735 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$17f58f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:03,743 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:03,745 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fcc0416' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:03,752 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3cca3239] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:03,767 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:04,123 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:19:04,434 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77dfc80d89842649744799', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9022}] to 51.68.71.91:43975
2019-02-28 14:19:04,464 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77dfc80d89842649744799', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29704475}
2019-02-28 14:19:05,279 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@e11ecfa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@485e13d7, org.springframework.security.web.context.SecurityContextPersistenceFilter@65eb76cd, org.springframework.security.web.header.HeaderWriterFilter@12a14b74, org.springframework.security.web.authentication.logout.LogoutFilter@31e2232f, com.apiwatch.security.jwt.JwtAuthTokenFilter@2cd62003, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@334ebcaa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52b06bef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43984213, org.springframework.security.web.session.SessionManagementFilter@19a31b9d, org.springframework.security.web.access.ExceptionTranslationFilter@7593ea79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37baddde]
2019-02-28 14:19:05,657 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Thu Feb 28 14:19:02 CET 2019]; root of context hierarchy
2019-02-28 14:19:05,737 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:19:05,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:05,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:19:05,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:05,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:05,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:19:05,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:19:05,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:19:05,740 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:19:05,741 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:05,742 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:05,743 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:19:05,744 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:19:05,745 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:19:05,745 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:19:05,745 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:19:05,746 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:19:05,747 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:19:05,747 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:19:05,747 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:19:05,747 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:19:05,749 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:19:05,750 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:05,750 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:19:05,751 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:19:05,751 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:19:05,752 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:19:05,752 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:19:05,753 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:19:05,754 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:19:05,754 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:19:05,754 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:19:05,755 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:19:05,755 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:19:05,755 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:19:05,755 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:19:05,756 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:19:05,756 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:19:05,757 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:19:05,759 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:19:05,762 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:19:05,763 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:19:05,765 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:19:05,765 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:19:05,766 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:19:05,766 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:19:05,767 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:19:05,767 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:19:05,768 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:19:05,768 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:19:05,770 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:19:05,771 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:19:05,772 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:19:05,772 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:19:05,772 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:19:05,778 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:19:05,780 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:19:05,781 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:19:05,781 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:19:05,781 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:19:05,782 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:19:05,782 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:19:05,783 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:19:05,783 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:19:05,784 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:19:05,784 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:19:05,784 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:19:05,785 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:19:05,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:19:05,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:19:05,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:19:05,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:19:05,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:19:05,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:19:05,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:19:05,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:19:05,789 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:19:05,789 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:05,790 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:19:05,790 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:19:05,792 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:19:05,796 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:19:05,796 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:19:05,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:19:05,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:19:05,799 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:19:05,801 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:19:05,808 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:19:05,810 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:19:05,812 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:19:05,814 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:19:05,814 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:19:05,814 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:19:05,816 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:05,816 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:05,884 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:19:05,885 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:19:05,943 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:19:06,144 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:19:06,150 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.821 seconds (JVM running for 4.482)
2019-02-28 14:19:06,277 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Thu Feb 28 14:19:02 CET 2019]; root of context hierarchy
2019-02-28 14:19:08,160 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 9762 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 14:19:08,163 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:19:08,208 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2113fd90: startup date [Thu Feb 28 14:19:08 CET 2019]; root of context hierarchy
2019-02-28 14:19:09,001 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:19:09,126 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ad5e78ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:09,136 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:09,138 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7076d4d7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:09,145 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d2331b80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:09,167 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:19:09,398 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 14:19:09,413 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 14:19:09,427 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 14:19:09,429 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 14:19:09,455 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 14:19:09,516 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 14:19:09,516 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1308 ms
2019-02-28 14:19:10,078 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:19:10,414 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77dfce0d89842622eadfca', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9023}] to 51.68.71.91:43975
2019-02-28 14:19:10,446 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77dfce0d89842622eadfca', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30958619}
2019-02-28 14:19:10,545 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 14:19:10,546 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 14:19:10,546 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 14:19:10,546 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 14:19:10,546 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 14:19:10,546 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 14:19:10,546 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 14:19:11,098 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@63dbb3d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42630c9e, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e658d07, org.springframework.security.web.header.HeaderWriterFilter@faca2fe, org.springframework.security.web.authentication.logout.LogoutFilter@775ad9d, com.apiwatch.security.jwt.JwtAuthTokenFilter@47f05e96, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19d49abe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8ffd393, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65f4709e, org.springframework.security.web.session.SessionManagementFilter@78b28026, org.springframework.security.web.access.ExceptionTranslationFilter@65947a78, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@32b75201]
2019-02-28 14:19:11,312 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2113fd90: startup date [Thu Feb 28 14:19:08 CET 2019]; root of context hierarchy
2019-02-28 14:19:11,396 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:19:11,402 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:11,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:11,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:19:11,404 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:11,404 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:19:11,404 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:19:11,405 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:19:11,405 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:19:11,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:11,412 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:11,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:19:11,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:19:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:19:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:19:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:19:11,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:19:11,418 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:19:11,418 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:19:11,418 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:19:11,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:19:11,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:19:11,421 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:11,421 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:19:11,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:19:11,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:19:11,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:19:11,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:19:11,424 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:19:11,424 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:19:11,425 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:19:11,425 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:19:11,430 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:19:11,430 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:19:11,432 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:19:11,433 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:19:11,435 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:19:11,439 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:19:11,439 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:19:11,441 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:19:11,442 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:19:11,442 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:19:11,442 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:19:11,442 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:19:11,443 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:19:11,443 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:19:11,443 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:19:11,443 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:19:11,443 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:19:11,444 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:19:11,445 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:19:11,445 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:19:11,445 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:19:11,446 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:19:11,447 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:19:11,450 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:19:11,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:19:11,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:19:11,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:19:11,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:19:11,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:19:11,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:19:11,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:19:11,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:19:11,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:19:11,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:19:11,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:19:11,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:19:11,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:19:11,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:19:11,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:19:11,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:19:11,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:19:11,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:19:11,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:19:11,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:19:11,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:19:11,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:11,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:19:11,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:19:11,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:19:11,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:19:11,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:19:11,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:19:11,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:19:11,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:19:11,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:19:11,472 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:19:11,472 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:19:11,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:19:11,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:19:11,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:19:11,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:19:11,475 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:19:11,476 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:19:11,551 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:19:11,552 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:19:11,627 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:19:11,817 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 14:19:11,828 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:19:11,834 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 14:19:11,840 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 14:19:11,875 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 14:19:11,877 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.176 seconds (JVM running for 13.868)
2019-02-28 14:19:24,400 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 14:19:24,400 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 14:19:24,429 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2019-02-28 14:19:24,818 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9024}] to 51.68.71.91:43975
2019-02-28 14:19:25,092 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-2] Unauthorized error. Message :null
2019-02-28 14:19:37,987 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:3, serverValue:9025}] to 51.68.71.91:43975
2019-02-28 14:19:38,044 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-3] Opened connection [connectionId{localValue:5, serverValue:9027}] to 51.68.71.91:43975
2019-02-28 14:19:38,082 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-4] Opened connection [connectionId{localValue:4, serverValue:9026}] to 51.68.71.91:43975
2019-02-28 14:21:36,515 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2113fd90: startup date [Thu Feb 28 14:19:08 CET 2019]; root of context hierarchy
2019-02-28 14:21:36,520 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-28 14:21:36,568 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9025}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:21:36,568 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9024}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:21:36,568 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9026}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:21:36,569 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9027}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:21:43,725 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 10048 (started by mickael in /home/mickael/git/Backend)
2019-02-28 14:21:43,727 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:21:43,783 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2584b82d: startup date [Thu Feb 28 14:21:43 CET 2019]; root of context hierarchy
2019-02-28 14:21:44,825 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:21:44,977 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ac29ce1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:44,986 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:44,987 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b5c0057' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:44,993 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2f973f93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:45,000 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:45,279 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:21:45,608 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e0690d898427400491e5', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9028}] to 51.68.71.91:43975
2019-02-28 14:21:45,638 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e0690d898427400491e5', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28967505}
2019-02-28 14:21:46,480 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@643d2dae, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52d6d273, org.springframework.security.web.context.SecurityContextPersistenceFilter@17947e6d, org.springframework.security.web.header.HeaderWriterFilter@4bd5849e, org.springframework.security.web.authentication.logout.LogoutFilter@334ebcaa, com.apiwatch.security.jwt.JwtAuthTokenFilter@7c72ecc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@521bb1a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ba02375, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4667c4c1, org.springframework.security.web.session.SessionManagementFilter@3c50ad4b, org.springframework.security.web.access.ExceptionTranslationFilter@4eb166a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31e2232f]
2019-02-28 14:21:46,889 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2584b82d: startup date [Thu Feb 28 14:21:43 CET 2019]; root of context hierarchy
2019-02-28 14:21:47,086 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:21:47,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:47,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:21:47,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:47,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:47,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:21:47,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:21:47,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:21:47,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:21:47,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:47,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:47,113 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:21:47,115 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:21:47,115 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:21:47,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:21:47,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:21:47,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:21:47,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:21:47,143 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:21:47,148 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:21:47,148 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:21:47,153 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:21:47,154 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:47,155 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:21:47,164 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:21:47,166 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:21:47,167 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:21:47,168 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:21:47,175 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:21:47,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:21:47,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:21:47,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:21:47,176 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:21:47,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:21:47,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:21:47,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:21:47,177 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:21:47,179 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:21:47,180 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:21:47,182 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:21:47,186 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:21:47,186 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:21:47,187 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:21:47,191 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:21:47,194 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:21:47,198 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:21:47,203 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:21:47,204 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:21:47,204 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:21:47,205 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:21:47,212 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:21:47,217 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:21:47,219 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:21:47,219 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:21:47,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:21:47,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:21:47,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:21:47,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:21:47,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:21:47,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:21:47,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:21:47,247 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:21:47,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:21:47,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:21:47,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:21:47,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:21:47,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:21:47,256 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:21:47,266 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:21:47,267 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:21:47,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:21:47,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:21:47,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:21:47,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:21:47,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:21:47,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:21:47,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:21:47,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:47,271 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:21:47,276 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:21:47,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:21:47,283 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:21:47,283 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:21:47,287 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:21:47,287 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:21:47,287 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:21:47,288 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:21:47,289 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:21:47,289 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:21:47,290 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:21:47,290 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:21:47,290 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:21:47,291 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:21:47,293 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:47,294 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:47,435 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:21:47,436 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:21:47,526 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:21:47,945 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:21:47,951 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.469 seconds (JVM running for 5.131)
2019-02-28 14:21:48,068 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@2584b82d: startup date [Thu Feb 28 14:21:43 CET 2019]; root of context hierarchy
2019-02-28 14:21:49,794 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 10007 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 14:21:49,797 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:21:49,822 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2ecd9ec5: startup date [Thu Feb 28 14:21:49 CET 2019]; root of context hierarchy
2019-02-28 14:21:50,597 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:21:50,714 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$93a0e1ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:50,722 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:50,723 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@74a1ff4a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:50,728 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b875849e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:50,735 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:21:50,954 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 14:21:50,967 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 14:21:50,975 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 14:21:50,975 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 14:21:50,994 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 14:21:51,053 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 14:21:51,053 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1231 ms
2019-02-28 14:21:51,642 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:21:51,963 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e06f0d898427173c79c4', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9029}] to 51.68.71.91:43975
2019-02-28 14:21:51,993 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e06f0d898427173c79c4', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28391102}
2019-02-28 14:21:52,128 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 14:21:52,129 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 14:21:52,129 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 14:21:52,129 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 14:21:52,130 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 14:21:52,130 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 14:21:52,130 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 14:21:52,742 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@624ab24a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@100f02a4, org.springframework.security.web.context.SecurityContextPersistenceFilter@22d9f487, org.springframework.security.web.header.HeaderWriterFilter@568778e5, org.springframework.security.web.authentication.logout.LogoutFilter@13f0075d, com.apiwatch.security.jwt.JwtAuthTokenFilter@be487c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ea93127, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29a49139, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f88918e, org.springframework.security.web.session.SessionManagementFilter@31eb9941, org.springframework.security.web.access.ExceptionTranslationFilter@710fe713, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19c0b40c]
2019-02-28 14:21:52,999 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2ecd9ec5: startup date [Thu Feb 28 14:21:49 CET 2019]; root of context hierarchy
2019-02-28 14:21:53,101 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:53,103 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:21:53,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:53,108 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:53,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:21:53,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:21:53,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:21:53,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:21:53,110 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:21:53,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:53,112 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:53,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:21:53,116 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:21:53,116 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:21:53,116 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:21:53,117 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:21:53,117 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:21:53,118 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:21:53,118 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:21:53,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:21:53,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:21:53,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:21:53,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:53,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:21:53,122 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:21:53,122 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:21:53,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:21:53,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:21:53,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:21:53,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:21:53,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:21:53,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:21:53,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:21:53,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:21:53,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:21:53,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:21:53,127 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:21:53,127 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:21:53,127 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:21:53,129 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:21:53,129 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:21:53,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:21:53,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:21:53,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:21:53,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:21:53,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:21:53,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:21:53,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:21:53,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:21:53,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:21:53,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:21:53,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:21:53,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:21:53,134 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:21:53,134 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:21:53,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:21:53,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:21:53,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:21:53,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:21:53,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:21:53,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:21:53,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:21:53,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:21:53,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:21:53,138 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:21:53,138 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:21:53,139 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:21:53,139 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:21:53,141 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:21:53,141 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:21:53,141 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:21:53,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:21:53,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:21:53,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:21:53,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:21:53,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:21:53,143 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:21:53,143 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:53,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:21:53,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:21:53,145 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:21:53,145 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:21:53,145 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:21:53,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:21:53,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:21:53,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:21:53,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:21:53,147 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:21:53,162 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:21:53,163 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:21:53,163 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:21:53,163 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:21:53,164 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:21:53,165 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:21:53,166 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:21:53,230 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:21:53,231 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:21:53,315 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:21:53,454 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 14:21:53,464 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:21:53,470 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 14:21:53,474 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 14:21:53,503 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 14:21:53,505 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.193 seconds (JVM running for 15.107)
2019-02-28 14:21:56,329 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 14:21:56,329 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 14:21:56,341 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-02-28 14:21:56,368 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:21:56,836 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9030}] to 51.68.71.91:43975
2019-02-28 14:21:56,893 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-2] Unauthorized error. Message :null
2019-02-28 14:21:58,605 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-3] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:21:58,648 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-3] Unauthorized error. Message :null
2019-02-28 14:22:04,033 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-5] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:22:05,363 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-3] Opened connection [connectionId{localValue:3, serverValue:9031}] to 51.68.71.91:43975
2019-02-28 14:22:05,383 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:5, serverValue:9033}] to 51.68.71.91:43975
2019-02-28 14:22:05,383 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:4, serverValue:9032}] to 51.68.71.91:43975
2019-02-28 14:23:26,302 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:23:26,412 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-2] Unauthorized error. Message :Bad credentials
2019-02-28 14:23:32,005 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-7] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:24:21,743 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2ecd9ec5: startup date [Thu Feb 28 14:21:49 CET 2019]; root of context hierarchy
2019-02-28 14:24:21,745 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-28 14:24:21,781 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9031}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:24:21,785 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9032}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:24:21,787 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9033}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:24:21,788 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9030}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-28 14:24:27,381 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 10234 (started by mickael in /home/mickael/git/Backend)
2019-02-28 14:24:27,382 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:24:27,453 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Thu Feb 28 14:24:27 CET 2019]; root of context hierarchy
2019-02-28 14:24:29,567 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:24:29,849 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$65ec35a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:29,869 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:29,871 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@a50ae65' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:29,891 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8ac0d85b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:29,929 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:30,399 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:24:30,976 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e10e0d898427fa69df4e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9036}] to 51.68.71.91:43975
2019-02-28 14:24:31,006 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e10e0d898427fa69df4e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29000680}
2019-02-28 14:24:32,540 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@11e355ca, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70d63e05, org.springframework.security.web.context.SecurityContextPersistenceFilter@a5bbaec, org.springframework.security.web.header.HeaderWriterFilter@32fa809f, org.springframework.security.web.authentication.logout.LogoutFilter@17092fff, com.apiwatch.security.jwt.JwtAuthTokenFilter@6d0b0da6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65eb76cd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c1cfa53, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e11ecfa, org.springframework.security.web.session.SessionManagementFilter@11eed657, org.springframework.security.web.access.ExceptionTranslationFilter@32e652b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a8816cc]
2019-02-28 14:24:32,876 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Thu Feb 28 14:24:27 CET 2019]; root of context hierarchy
2019-02-28 14:24:32,944 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:24:32,945 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:32,945 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:24:32,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:32,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:32,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:24:32,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:24:32,947 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:24:32,947 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:24:32,949 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:32,950 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:32,951 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:24:32,952 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:24:32,953 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:24:32,953 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:24:32,954 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:24:32,954 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:24:32,955 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:24:32,955 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:24:32,955 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:24:32,956 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:24:32,957 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:24:32,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:32,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:24:32,959 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:24:32,959 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:24:32,960 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:24:32,960 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:24:32,962 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:24:32,962 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:24:32,962 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:24:32,963 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:24:32,963 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:24:32,963 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:24:32,964 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:24:32,964 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:24:32,964 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:24:32,965 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:24:32,965 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:24:32,967 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:24:32,967 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:24:32,968 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:24:32,968 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:24:32,968 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:24:32,968 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:24:32,969 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:24:32,969 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:24:32,969 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:24:32,969 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:24:32,970 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:24:32,972 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:24:32,972 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:24:32,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:24:32,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:24:32,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:24:32,974 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:24:32,975 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:24:32,975 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:24:32,975 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:24:32,976 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:24:32,976 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:24:32,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:24:32,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:24:32,978 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:24:32,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:24:32,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:24:32,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:24:32,980 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:24:32,982 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:24:32,982 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:24:32,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:24:32,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:24:32,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:24:32,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:24:32,984 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:24:32,984 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:24:32,985 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:24:32,985 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:32,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:24:32,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:24:32,987 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:24:32,987 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:24:32,987 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:24:32,988 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:24:32,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:24:32,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:24:32,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:24:32,990 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:24:32,991 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:24:32,991 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:24:32,991 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:24:32,992 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:24:32,992 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:24:32,994 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:32,994 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:33,050 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:24:33,050 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:24:33,103 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:24:33,290 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:24:33,296 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 6.162 seconds (JVM running for 6.86)
2019-02-28 14:24:33,371 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Thu Feb 28 14:24:27 CET 2019]; root of context hierarchy
2019-02-28 14:24:34,968 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 10195 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 14:24:34,971 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:24:35,016 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@230b1781: startup date [Thu Feb 28 14:24:35 CET 2019]; root of context hierarchy
2019-02-28 14:24:35,829 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:24:36,042 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ab54dc53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:36,057 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:36,066 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1f9eacb2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:36,073 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d0297f05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:36,083 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:24:36,359 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 14:24:36,384 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 14:24:36,395 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 14:24:36,397 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 14:24:36,413 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 14:24:36,489 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 14:24:36,490 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1474 ms
2019-02-28 14:24:37,066 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:24:37,382 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e1150d898427d39d050b', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9037}] to 51.68.71.91:43975
2019-02-28 14:24:37,414 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e1150d898427d39d050b', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30778892}
2019-02-28 14:24:37,485 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 14:24:37,485 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 14:24:37,485 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 14:24:37,486 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 14:24:37,486 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 14:24:37,486 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 14:24:37,486 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 14:24:38,083 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@4115e60, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@575d2868, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c2d2c24, org.springframework.security.web.header.HeaderWriterFilter@5b162306, org.springframework.security.web.authentication.logout.LogoutFilter@1e29d0db, com.apiwatch.security.jwt.JwtAuthTokenFilter@672081db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3545adcc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@31b6fb6b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@159a9f9c, org.springframework.security.web.session.SessionManagementFilter@390a5ae1, org.springframework.security.web.access.ExceptionTranslationFilter@34a20425, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69843d10]
2019-02-28 14:24:38,359 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@230b1781: startup date [Thu Feb 28 14:24:35 CET 2019]; root of context hierarchy
2019-02-28 14:24:38,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:38,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:24:38,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:38,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:38,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:24:38,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:24:38,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:24:38,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:24:38,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:24:38,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:38,459 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:38,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:24:38,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:24:38,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:24:38,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:24:38,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:24:38,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:24:38,464 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:24:38,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:24:38,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:24:38,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:24:38,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:24:38,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:38,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:24:38,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:24:38,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:24:38,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:24:38,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:24:38,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:24:38,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:24:38,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:24:38,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:24:38,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:24:38,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:24:38,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:24:38,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:24:38,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:24:38,475 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:24:38,477 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:24:38,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:24:38,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:24:38,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:24:38,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:24:38,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:24:38,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:24:38,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:24:38,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:24:38,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:24:38,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:24:38,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:24:38,491 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:24:38,491 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:24:38,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:24:38,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:24:38,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:24:38,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:24:38,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:24:38,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:24:38,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:24:38,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:24:38,500 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:24:38,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:24:38,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:24:38,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:24:38,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:24:38,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:24:38,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:24:38,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:24:38,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:24:38,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:24:38,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:24:38,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:24:38,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:24:38,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:24:38,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:24:38,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:24:38,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:24:38,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:38,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:24:38,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:24:38,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:24:38,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:24:38,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:24:38,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:24:38,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:24:38,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:24:38,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:24:38,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:24:38,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:24:38,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:24:38,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:24:38,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:24:38,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:24:38,517 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:24:38,517 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:24:38,594 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:24:38,594 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:24:38,659 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:24:38,827 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 14:24:38,837 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:24:38,848 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 14:24:38,852 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 14:24:38,883 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 14:24:38,885 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.402 seconds (JVM running for 16.338)
2019-02-28 14:24:48,393 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-28 14:24:48,394 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-28 14:24:48,406 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-02-28 14:24:48,493 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:24:49,484 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9038}] to 51.68.71.91:43975
2019-02-28 14:24:49,635 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-2] Unauthorized error. Message :Bad credentials
2019-02-28 14:24:54,897 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-4] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-28 14:30:47,961 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 3214 (started by mickael in /home/mickael/git/Backend)
2019-02-28 14:30:47,966 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:30:48,064 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Thu Feb 28 14:30:48 CET 2019]; root of context hierarchy
2019-02-28 14:30:50,296 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:30:50,441 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$17f58f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:50,449 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:50,450 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fcc0416' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:50,455 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3cca3239] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:50,462 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:50,744 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:30:51,246 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e28a0d89840c8e0ead77', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9039}] to 51.68.71.91:43975
2019-02-28 14:30:51,276 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e28a0d89840c8e0ead77', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28702893}
2019-02-28 14:30:52,771 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@e11ecfa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@485e13d7, org.springframework.security.web.context.SecurityContextPersistenceFilter@65eb76cd, org.springframework.security.web.header.HeaderWriterFilter@12a14b74, org.springframework.security.web.authentication.logout.LogoutFilter@31e2232f, com.apiwatch.security.jwt.JwtAuthTokenFilter@2cd62003, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@334ebcaa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52b06bef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43984213, org.springframework.security.web.session.SessionManagementFilter@19a31b9d, org.springframework.security.web.access.ExceptionTranslationFilter@7593ea79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37baddde]
2019-02-28 14:30:53,279 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Thu Feb 28 14:30:48 CET 2019]; root of context hierarchy
2019-02-28 14:30:53,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:30:53,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:53,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:30:53,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:53,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:53,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:30:53,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:30:53,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:30:53,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:30:53,421 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:53,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:53,423 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:30:53,424 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:30:53,425 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:30:53,425 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:30:53,439 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:30:53,439 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:30:53,440 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:30:53,441 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:30:53,441 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:30:53,441 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:30:53,446 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:30:53,447 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:53,447 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:30:53,448 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:30:53,448 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:30:53,448 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:30:53,449 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:30:53,450 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:30:53,451 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:30:53,451 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:30:53,451 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:30:53,451 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:30:53,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:30:53,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:30:53,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:30:53,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:30:53,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:30:53,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:30:53,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:30:53,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:30:53,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:30:53,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:30:53,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:30:53,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:30:53,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:30:53,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:30:53,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:30:53,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:30:53,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:30:53,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:30:53,459 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:30:53,459 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:30:53,459 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:30:53,459 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:30:53,460 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:30:53,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:30:53,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:30:53,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:30:53,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:30:53,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:30:53,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:30:53,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:30:53,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:30:53,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:30:53,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:30:53,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:30:53,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:30:53,479 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:30:53,479 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:30:53,479 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:30:53,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:30:53,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:30:53,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:30:53,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:30:53,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:30:53,481 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:30:53,482 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:53,482 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:30:53,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:30:53,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:30:53,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:30:53,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:30:53,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:30:53,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:30:53,485 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:30:53,485 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:30:53,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:30:53,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:30:53,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:30:53,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:30:53,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:30:53,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:30:53,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:53,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:53,537 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:30:53,537 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:30:53,594 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:30:53,912 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:30:53,919 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 6.881 seconds (JVM running for 8.424)
2019-02-28 14:30:54,128 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Thu Feb 28 14:30:48 CET 2019]; root of context hierarchy
2019-02-28 14:30:56,794 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 3083 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-02-28 14:30:56,797 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-28 14:30:56,894 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b251c08: startup date [Thu Feb 28 14:30:56 CET 2019]; root of context hierarchy
2019-02-28 14:30:57,699 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-28 14:30:57,798 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c88caab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:57,807 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:57,809 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@38c6b6db' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:57,815 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ed614d6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:57,823 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-28 14:30:58,083 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-28 14:30:58,107 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-28 14:30:58,120 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-28 14:30:58,120 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-28 14:30:58,129 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-28 14:30:58,177 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-28 14:30:58,177 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1283 ms
2019-02-28 14:30:58,713 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-28 14:30:59,004 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e2920d89840c0b4b2914', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9040}] to 51.68.71.91:43975
2019-02-28 14:30:59,035 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c77e2920d89840c0b4b2914', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28669721}
2019-02-28 14:30:59,079 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-28 14:30:59,080 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-28 14:30:59,080 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-28 14:30:59,080 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-28 14:30:59,080 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-28 14:30:59,081 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-28 14:30:59,081 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-28 14:30:59,579 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@30d109bc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ae6e628, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f0ab44f, org.springframework.security.web.header.HeaderWriterFilter@5cb5235b, org.springframework.security.web.authentication.logout.LogoutFilter@3ec7ff53, com.apiwatch.security.jwt.JwtAuthTokenFilter@77e90af4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cdcb4d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4cb947e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@277252c8, org.springframework.security.web.session.SessionManagementFilter@7e4b1aa2, org.springframework.security.web.access.ExceptionTranslationFilter@23f80251, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a2fcea6]
2019-02-28 14:30:59,810 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b251c08: startup date [Thu Feb 28 14:30:56 CET 2019]; root of context hierarchy
2019-02-28 14:30:59,874 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:59,876 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-28 14:30:59,876 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:59,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:59,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-02-28 14:30:59,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-28 14:30:59,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-28 14:30:59,878 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-28 14:30:59,878 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-28 14:30:59,879 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:59,881 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:59,882 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-02-28 14:30:59,884 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-28 14:30:59,884 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-28 14:30:59,885 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-28 14:30:59,885 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-28 14:30:59,885 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-28 14:30:59,888 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-28 14:30:59,889 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-28 14:30:59,889 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-28 14:30:59,889 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-28 14:30:59,891 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-28 14:30:59,892 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:59,893 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-28 14:30:59,894 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-28 14:30:59,894 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-28 14:30:59,894 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-28 14:30:59,895 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-28 14:30:59,896 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-02-28 14:30:59,897 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-28 14:30:59,897 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-28 14:30:59,898 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:30:59,898 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-28 14:30:59,898 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-28 14:30:59,898 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-28 14:30:59,899 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-28 14:30:59,899 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-28 14:30:59,900 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-28 14:30:59,900 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-28 14:30:59,902 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:30:59,902 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-28 14:30:59,902 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-28 14:30:59,903 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-28 14:30:59,903 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-28 14:30:59,903 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-28 14:30:59,903 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-28 14:30:59,903 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-28 14:30:59,904 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-28 14:30:59,904 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-28 14:30:59,904 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-28 14:30:59,905 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-28 14:30:59,905 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-28 14:30:59,906 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-28 14:30:59,906 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-28 14:30:59,906 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-28 14:30:59,907 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-28 14:30:59,907 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-28 14:30:59,908 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-28 14:30:59,908 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-28 14:30:59,908 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-28 14:30:59,910 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-28 14:30:59,911 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-28 14:30:59,911 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-28 14:30:59,911 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-28 14:30:59,912 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-02-28 14:30:59,913 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-28 14:30:59,913 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-28 14:30:59,913 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-28 14:30:59,915 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-28 14:30:59,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-28 14:30:59,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-28 14:30:59,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-02-28 14:30:59,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-28 14:30:59,917 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-28 14:30:59,917 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-28 14:30:59,917 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-28 14:30:59,918 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-28 14:30:59,918 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:59,919 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-28 14:30:59,919 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-28 14:30:59,920 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-28 14:30:59,920 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-28 14:30:59,920 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-28 14:30:59,921 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-28 14:30:59,921 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-28 14:30:59,921 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:30:59,922 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-28 14:30:59,923 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-28 14:30:59,923 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-28 14:30:59,924 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-28 14:30:59,924 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-28 14:30:59,924 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-28 14:30:59,925 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-28 14:30:59,927 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-28 14:30:59,928 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-28 14:30:59,992 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:30:59,992 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:31:00,069 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-28 14:31:00,209 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-28 14:31:00,219 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-28 14:31:00,226 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-28 14:31:00,232 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-28 14:31:00,258 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-28 14:31:00,260 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.346 seconds (JVM running for 24.344)
