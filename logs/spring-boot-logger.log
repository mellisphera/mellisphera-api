2019-02-04 10:49:00,541 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellifera with PID 14795 (started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 10:49:00,543 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 10:49:00,601 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Mon Feb 04 10:49:00 CET 2019]; root of context hierarchy
2019-02-04 10:49:01,693 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 10:49:01,960 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$73d8f431] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:02,024 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:02,026 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@63e5e5b4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:02,043 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$98ad96e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:02,057 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:02,373 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 10:49:02,682 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580a8e4e041b39cbfbc00a', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4167}] to 51.68.71.91:43975
2019-02-04 10:49:02,711 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580a8e4e041b39cbfbc00a', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28230661}
2019-02-04 10:49:03,447 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@58b91d57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61a91c9b, org.springframework.security.web.context.SecurityContextPersistenceFilter@39909d1a, org.springframework.security.web.header.HeaderWriterFilter@5961e92d, org.springframework.security.web.authentication.logout.LogoutFilter@338b49d3, com.apiwatch.security.jwt.JwtAuthTokenFilter@5854a18, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7343922c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17947e6d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17092fff, org.springframework.security.web.session.SessionManagementFilter@36c281ed, org.springframework.security.web.access.ExceptionTranslationFilter@36327cec, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@107bfcb2]
2019-02-04 10:49:04,295 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Mon Feb 04 10:49:00 CET 2019]; root of context hierarchy
2019-02-04 10:49:04,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 10:49:04,464 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 10:49:04,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 10:49:04,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 10:49:04,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 10:49:04,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 10:49:04,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 10:49:04,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 10:49:04,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 10:49:04,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 10:49:04,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 10:49:04,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 10:49:04,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 10:49:04,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 10:49:04,472 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 10:49:04,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 10:49:04,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 10:49:04,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 10:49:04,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 10:49:04,475 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 10:49:04,476 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 10:49:04,477 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 10:49:04,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 10:49:04,481 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 10:49:04,481 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 10:49:04,482 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 10:49:04,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 10:49:04,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 10:49:04,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 10:49:04,485 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:49:04,485 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 10:49:04,485 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 10:49:04,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:49:04,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 10:49:04,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 10:49:04,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 10:49:04,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 10:49:04,491 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 10:49:04,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:49:04,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:49:04,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 10:49:04,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 10:49:04,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 10:49:04,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 10:49:04,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 10:49:04,494 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 10:49:04,494 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 10:49:04,495 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 10:49:04,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 10:49:04,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 10:49:04,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 10:49:04,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 10:49:04,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 10:49:04,498 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 10:49:04,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 10:49:04,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 10:49:04,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 10:49:04,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 10:49:04,500 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 10:49:04,500 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 10:49:04,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 10:49:04,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 10:49:04,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 10:49:04,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 10:49:04,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 10:49:04,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 10:49:04,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 10:49:04,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 10:49:04,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 10:49:04,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 10:49:04,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 10:49:04,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 10:49:04,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 10:49:04,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:49:04,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 10:49:04,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 10:49:04,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 10:49:04,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 10:49:04,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 10:49:04,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 10:49:04,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 10:49:04,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 10:49:04,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:49:04,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 10:49:04,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:49:04,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 10:49:04,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 10:49:04,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 10:49:04,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 10:49:04,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 10:49:04,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 10:49:04,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:49:04,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 10:49:04,585 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:49:04,586 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:49:04,644 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:49:04,846 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 10:49:04,879 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.614 seconds (JVM running for 5.207)
2019-02-04 10:49:05,096 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Mon Feb 04 10:49:00 CET 2019]; root of context hierarchy
2019-02-04 10:49:06,721 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellifera with PID 14753 (/home/mickael/repos_git/Backend-dev/target/classes started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 10:49:06,724 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 10:49:06,762 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@674d745d: startup date [Mon Feb 04 10:49:06 CET 2019]; root of context hierarchy
2019-02-04 10:49:07,435 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 10:49:07,538 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7b3e74a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:07,546 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:07,548 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@72d39983' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:07,554 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a0131754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:07,562 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:49:07,789 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-04 10:49:07,802 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-04 10:49:07,809 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-04 10:49:07,810 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-04 10:49:07,820 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-04 10:49:08,034 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-04 10:49:08,035 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1273 ms
2019-02-04 10:49:08,358 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 10:49:08,687 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580a944e041b39a15dcd6e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4168}] to 51.68.71.91:43975
2019-02-04 10:49:08,717 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580a944e041b39a15dcd6e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28286439}
2019-02-04 10:49:08,761 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-04 10:49:08,761 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-04 10:49:08,761 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-04 10:49:08,761 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-04 10:49:08,762 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-04 10:49:08,762 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-04 10:49:08,762 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-04 10:49:09,286 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@1028d404, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47b9534f, org.springframework.security.web.context.SecurityContextPersistenceFilter@46f007a7, org.springframework.security.web.header.HeaderWriterFilter@74bebaae, org.springframework.security.web.authentication.logout.LogoutFilter@10ac5034, com.apiwatch.security.jwt.JwtAuthTokenFilter@13748d8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71d08e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2335dfc7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b6fb468, org.springframework.security.web.session.SessionManagementFilter@6d2f4c33, org.springframework.security.web.access.ExceptionTranslationFilter@6493f2bc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70c8cdcc]
2019-02-04 10:49:09,523 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@674d745d: startup date [Mon Feb 04 10:49:06 CET 2019]; root of context hierarchy
2019-02-04 10:49:09,589 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 10:49:09,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 10:49:09,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 10:49:09,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 10:49:09,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 10:49:09,592 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 10:49:09,592 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 10:49:09,592 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 10:49:09,594 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 10:49:09,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 10:49:09,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 10:49:09,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 10:49:09,599 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 10:49:09,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 10:49:09,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 10:49:09,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 10:49:09,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 10:49:09,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 10:49:09,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 10:49:09,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 10:49:09,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 10:49:09,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 10:49:09,606 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 10:49:09,606 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 10:49:09,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 10:49:09,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 10:49:09,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 10:49:09,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 10:49:09,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:49:09,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 10:49:09,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 10:49:09,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 10:49:09,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:49:09,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 10:49:09,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 10:49:09,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 10:49:09,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 10:49:09,613 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 10:49:09,613 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:49:09,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 10:49:09,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 10:49:09,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 10:49:09,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 10:49:09,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 10:49:09,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 10:49:09,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:49:09,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 10:49:09,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 10:49:09,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 10:49:09,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 10:49:09,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 10:49:09,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 10:49:09,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 10:49:09,619 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 10:49:09,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 10:49:09,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 10:49:09,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 10:49:09,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 10:49:09,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 10:49:09,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 10:49:09,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 10:49:09,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 10:49:09,623 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 10:49:09,623 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 10:49:09,623 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 10:49:09,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 10:49:09,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 10:49:09,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 10:49:09,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 10:49:09,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 10:49:09,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 10:49:09,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 10:49:09,627 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 10:49:09,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:49:09,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 10:49:09,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 10:49:09,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 10:49:09,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 10:49:09,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 10:49:09,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 10:49:09,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 10:49:09,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 10:49:09,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:49:09,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 10:49:09,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:49:09,640 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 10:49:09,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 10:49:09,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 10:49:09,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 10:49:09,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 10:49:09,644 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 10:49:09,646 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:49:09,648 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 10:49:09,695 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:49:09,695 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:49:09,737 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:49:09,869 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-04 10:49:09,879 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 10:49:09,885 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-04 10:49:09,891 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-04 10:49:09,926 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-04 10:49:09,928 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.583 seconds (JVM running for 13.712)
2019-02-04 10:51:05,442 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-04 10:51:05,442 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-04 10:51:05,457 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2019-02-04 10:51:05,500 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-1] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:06,052 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:2, serverValue:4169}] to 51.68.71.91:43975
2019-02-04 10:51:06,867 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:4, serverValue:4171}] to 51.68.71.91:43975
2019-02-04 10:51:06,867 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:3, serverValue:4170}] to 51.68.71.91:43975
2019-02-04 10:51:06,877 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:5, serverValue:4172}] to 51.68.71.91:43975
2019-02-04 10:51:06,927 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:07,024 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:07,229 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:6, serverValue:4173}] to 51.68.71.91:43975
2019-02-04 10:51:18,231 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-8] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:18,509 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:18,651 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:18,864 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:7, serverValue:4174}] to 51.68.71.91:43975
2019-02-04 10:51:21,203 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:56,217 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:56,429 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:51:59,145 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.apiwatch.controllers.HiveController.getAllUserHives(HiveController.java:44)
	at com.apiwatch.controllers.DailyRecordsTHController.getByApiary(DailyRecordsTHController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:70)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 10:53:43,826 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@674d745d: startup date [Mon Feb 04 10:49:06 CET 2019]; root of context hierarchy
2019-02-04 10:53:43,828 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-04 10:53:43,865 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:4172}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 10:53:43,865 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:6, serverValue:4173}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 10:53:43,866 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:4169}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 10:53:43,866 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:7, serverValue:4174}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 10:53:43,866 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:4170}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 10:53:43,866 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:4171}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 10:53:49,699 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellifera with PID 15683 (started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 10:53:49,700 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 10:53:49,721 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1b919693: startup date [Mon Feb 04 10:53:49 CET 2019]; root of context hierarchy
2019-02-04 10:53:50,565 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 10:53:50,662 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8adb2c72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:50,680 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:50,681 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6b1e7ad3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:50,687 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$afafcf24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:50,694 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:51,000 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 10:53:51,478 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580bae4e041b3d43e91f32', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4175}] to 51.68.71.91:43975
2019-02-04 10:53:51,508 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580bae4e041b3d43e91f32', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28234741}
2019-02-04 10:53:52,687 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@2f0ed952, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f044c58, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ba02375, org.springframework.security.web.header.HeaderWriterFilter@37496720, org.springframework.security.web.authentication.logout.LogoutFilter@6af91cc8, com.apiwatch.security.jwt.JwtAuthTokenFilter@737db7f8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3289079a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@338b49d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d074b14, org.springframework.security.web.session.SessionManagementFilter@1d247525, org.springframework.security.web.access.ExceptionTranslationFilter@526b2f3e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22c75c01]
2019-02-04 10:53:53,227 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1b919693: startup date [Mon Feb 04 10:53:49 CET 2019]; root of context hierarchy
2019-02-04 10:53:53,342 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 10:53:53,344 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 10:53:53,349 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 10:53:53,350 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 10:53:53,350 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 10:53:53,351 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 10:53:53,351 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 10:53:53,352 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 10:53:53,355 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 10:53:53,355 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 10:53:53,359 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 10:53:53,360 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 10:53:53,361 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 10:53:53,362 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 10:53:53,365 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 10:53:53,367 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 10:53:53,368 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 10:53:53,368 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 10:53:53,369 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 10:53:53,372 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 10:53:53,373 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 10:53:53,373 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 10:53:53,375 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 10:53:53,375 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 10:53:53,376 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 10:53:53,376 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 10:53:53,379 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 10:53:53,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 10:53:53,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 10:53:53,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:53:53,381 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 10:53:53,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 10:53:53,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:53:53,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 10:53:53,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 10:53:53,383 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 10:53:53,384 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 10:53:53,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 10:53:53,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:53:53,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:53:53,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 10:53:53,389 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 10:53:53,389 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 10:53:53,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 10:53:53,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 10:53:53,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 10:53:53,391 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 10:53:53,391 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 10:53:53,399 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 10:53:53,399 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 10:53:53,400 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 10:53:53,401 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 10:53:53,401 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 10:53:53,402 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 10:53:53,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 10:53:53,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 10:53:53,403 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 10:53:53,404 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 10:53:53,404 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 10:53:53,406 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 10:53:53,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 10:53:53,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 10:53:53,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 10:53:53,409 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 10:53:53,410 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 10:53:53,411 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 10:53:53,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 10:53:53,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 10:53:53,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 10:53:53,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 10:53:53,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 10:53:53,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 10:53:53,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 10:53:53,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:53:53,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 10:53:53,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 10:53:53,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 10:53:53,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 10:53:53,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 10:53:53,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 10:53:53,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 10:53:53,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 10:53:53,423 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 10:53:53,424 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:53:53,424 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:53:53,430 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 10:53:53,431 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 10:53:53,431 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 10:53:53,432 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 10:53:53,436 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 10:53:53,438 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 10:53:53,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:53:53,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 10:53:53,577 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:53:53,577 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:53:53,638 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:53:53,802 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 10:53:53,808 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.478 seconds (JVM running for 5.203)
2019-02-04 10:53:53,926 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@1b919693: startup date [Mon Feb 04 10:53:49 CET 2019]; root of context hierarchy
2019-02-04 10:53:56,128 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellifera with PID 15641 (/home/mickael/repos_git/Backend-dev/target/classes started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 10:53:56,130 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 10:53:56,154 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e47ff01: startup date [Mon Feb 04 10:53:56 CET 2019]; root of context hierarchy
2019-02-04 10:53:57,165 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 10:53:57,407 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$dbf88f2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:57,426 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:57,427 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@55cc4571' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:57,454 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cd31de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:57,462 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 10:53:57,780 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-04 10:53:57,803 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-04 10:53:57,860 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-04 10:53:57,861 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-04 10:53:57,910 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-04 10:53:58,352 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-04 10:53:58,353 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 2199 ms
2019-02-04 10:53:58,762 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 10:53:59,101 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580bb64e041b3d199e7e1e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4176}] to 51.68.71.91:43975
2019-02-04 10:53:59,131 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c580bb64e041b3d199e7e1e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28472071}
2019-02-04 10:53:59,244 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-04 10:53:59,246 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-04 10:53:59,246 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-04 10:53:59,246 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-04 10:53:59,247 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-04 10:53:59,247 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-04 10:53:59,247 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-04 10:54:00,408 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@5e36bc01, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30da2599, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c46060e, org.springframework.security.web.header.HeaderWriterFilter@3a148393, org.springframework.security.web.authentication.logout.LogoutFilter@67d150d6, com.apiwatch.security.jwt.JwtAuthTokenFilter@3a7a5242, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79dd6284, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6967b6cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e72ac2f, org.springframework.security.web.session.SessionManagementFilter@6ce1c564, org.springframework.security.web.access.ExceptionTranslationFilter@27b1bab1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6709fa1f]
2019-02-04 10:54:00,670 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e47ff01: startup date [Mon Feb 04 10:53:56 CET 2019]; root of context hierarchy
2019-02-04 10:54:00,775 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 10:54:00,777 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 10:54:00,777 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 10:54:00,778 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 10:54:00,778 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 10:54:00,779 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 10:54:00,779 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 10:54:00,779 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 10:54:00,781 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 10:54:00,783 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 10:54:00,784 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 10:54:00,785 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 10:54:00,785 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 10:54:00,786 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 10:54:00,786 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 10:54:00,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 10:54:00,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 10:54:00,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 10:54:00,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 10:54:00,790 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 10:54:00,791 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 10:54:00,791 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 10:54:00,794 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 10:54:00,797 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 10:54:00,801 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 10:54:00,803 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 10:54:00,815 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 10:54:00,816 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 10:54:00,816 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:54:00,816 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 10:54:00,817 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 10:54:00,817 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 10:54:00,817 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 10:54:00,817 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 10:54:00,818 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 10:54:00,818 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 10:54:00,819 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 10:54:00,821 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 10:54:00,822 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:54:00,826 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 10:54:00,826 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 10:54:00,827 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 10:54:00,827 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 10:54:00,827 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 10:54:00,828 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 10:54:00,828 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 10:54:00,828 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 10:54:00,829 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 10:54:00,831 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 10:54:00,831 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 10:54:00,832 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 10:54:00,832 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 10:54:00,832 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 10:54:00,833 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 10:54:00,834 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 10:54:00,835 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 10:54:00,835 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 10:54:00,836 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 10:54:00,836 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 10:54:00,836 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 10:54:00,839 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 10:54:00,840 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 10:54:00,841 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 10:54:00,841 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 10:54:00,842 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 10:54:00,842 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 10:54:00,844 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 10:54:00,845 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 10:54:00,845 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 10:54:00,845 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 10:54:00,846 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 10:54:00,846 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 10:54:00,846 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 10:54:00,847 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:54:00,847 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 10:54:00,848 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 10:54:00,849 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 10:54:00,849 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 10:54:00,850 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 10:54:00,850 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 10:54:00,850 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 10:54:00,851 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 10:54:00,851 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 10:54:00,852 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:54:00,854 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 10:54:00,858 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 10:54:00,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 10:54:00,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 10:54:00,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 10:54:00,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 10:54:00,860 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 10:54:00,862 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 10:54:00,862 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 10:54:00,919 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:54:00,919 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:54:00,984 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 10:54:01,144 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-04 10:54:01,157 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 10:54:01,163 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-04 10:54:01,169 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-04 10:54:01,229 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-04 10:54:01,231 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 5.601 seconds (JVM running for 16.415)
2019-02-04 10:54:06,854 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-2] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-04 10:54:06,856 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-04 10:54:06,886 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2019-02-04 10:54:07,666 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:5, serverValue:4177}] to 51.68.71.91:43975
2019-02-04 10:54:07,675 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:2, serverValue:4178}] to 51.68.71.91:43975
2019-02-04 10:54:07,729 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:3, serverValue:4180}] to 51.68.71.91:43975
2019-02-04 10:54:07,729 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:4, serverValue:4179}] to 51.68.71.91:43975
2019-02-04 10:54:10,807 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-3] Opened connection [connectionId{localValue:6, serverValue:4181}] to 51.68.71.91:43975
2019-02-04 10:54:10,813 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:7, serverValue:4182}] to 51.68.71.91:43975
2019-02-04 11:00:00,032 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 11:00:00
2019-02-04 11:51:09,614 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e47ff01: startup date [Mon Feb 04 10:53:56 CET 2019]; root of context hierarchy
2019-02-04 11:51:09,621 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-04 11:51:09,666 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:6, serverValue:4181}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 11:51:09,667 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:4177}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 11:51:09,668 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:4180}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 11:51:09,668 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:7, serverValue:4182}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 11:51:09,669 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:4179}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 11:51:09,670 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:4178}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 13:03:48,191 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellifera with PID 22413 (started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 13:03:48,192 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 13:03:48,260 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Mon Feb 04 13:03:48 CET 2019]; root of context hierarchy
2019-02-04 13:03:49,272 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 13:03:49,390 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$73d8f431] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:49,398 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:49,399 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@48ea2003' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:49,406 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$98ad96e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:49,412 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:49,646 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 13:03:50,046 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c582a254e041b578df37513', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4195}] to 51.68.71.91:43975
2019-02-04 13:03:50,076 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c582a254e041b578df37513', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28519622}
2019-02-04 13:03:50,828 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@6c1cfa53, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d68b571, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fb392c4, org.springframework.security.web.header.HeaderWriterFilter@120d3fd, org.springframework.security.web.authentication.logout.LogoutFilter@521bb1a4, com.apiwatch.security.jwt.JwtAuthTokenFilter@43e065f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54d1608f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b81616b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52b06bef, org.springframework.security.web.session.SessionManagementFilter@5961e92d, org.springframework.security.web.access.ExceptionTranslationFilter@6dd1f638, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@334ebcaa]
2019-02-04 13:03:51,292 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Mon Feb 04 13:03:48 CET 2019]; root of context hierarchy
2019-02-04 13:03:51,377 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 13:03:51,379 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 13:03:51,379 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 13:03:51,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 13:03:51,380 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 13:03:51,381 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 13:03:51,381 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 13:03:51,382 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 13:03:51,384 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 13:03:51,385 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 13:03:51,386 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 13:03:51,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 13:03:51,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 13:03:51,387 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 13:03:51,388 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 13:03:51,389 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 13:03:51,389 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 13:03:51,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 13:03:51,390 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 13:03:51,392 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 13:03:51,392 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 13:03:51,394 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 13:03:51,400 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 13:03:51,401 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 13:03:51,401 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 13:03:51,402 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 13:03:51,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 13:03:51,407 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 13:03:51,408 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 13:03:51,409 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 13:03:51,414 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 13:03:51,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 13:03:51,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 13:03:51,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 13:03:51,416 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 13:03:51,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 13:03:51,417 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 13:03:51,419 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 13:03:51,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 13:03:51,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 13:03:51,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 13:03:51,420 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 13:03:51,421 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 13:03:51,421 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 13:03:51,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 13:03:51,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 13:03:51,423 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 13:03:51,423 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 13:03:51,434 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 13:03:51,434 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 13:03:51,435 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 13:03:51,435 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 13:03:51,435 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 13:03:51,437 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 13:03:51,438 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 13:03:51,438 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 13:03:51,440 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 13:03:51,440 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 13:03:51,440 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 13:03:51,441 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 13:03:51,443 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 13:03:51,448 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 13:03:51,451 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 13:03:51,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 13:03:51,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 13:03:51,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 13:03:51,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 13:03:51,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 13:03:51,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 13:03:51,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 13:03:51,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 13:03:51,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 13:03:51,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 13:03:51,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 13:03:51,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 13:03:51,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 13:03:51,460 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 13:03:51,460 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 13:03:51,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 13:03:51,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 13:03:51,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 13:03:51,462 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 13:03:51,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 13:03:51,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 13:03:51,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 13:03:51,464 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 13:03:51,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 13:03:51,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 13:03:51,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 13:03:51,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 13:03:51,466 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 13:03:51,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 13:03:51,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 13:03:51,533 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 13:03:51,533 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 13:03:51,600 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 13:03:51,783 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 13:03:51,794 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.887 seconds (JVM running for 4.5)
2019-02-04 13:03:51,923 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Mon Feb 04 13:03:48 CET 2019]; root of context hierarchy
2019-02-04 13:03:53,890 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellifera with PID 22371 (/home/mickael/repos_git/Backend-dev/target/classes started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 13:03:53,892 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 13:03:53,939 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e164206: startup date [Mon Feb 04 13:03:53 CET 2019]; root of context hierarchy
2019-02-04 13:03:54,656 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 13:03:54,770 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a6823514] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:54,778 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:54,779 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@33d66a3e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:54,785 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cb56d7c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:54,792 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 13:03:55,020 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-04 13:03:55,039 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-04 13:03:55,047 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-04 13:03:55,047 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-04 13:03:55,068 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-04 13:03:55,167 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-04 13:03:55,168 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1229 ms
2019-02-04 13:03:55,739 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 13:03:56,046 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c582a2b4e041b576371c13e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4196}] to 51.68.71.91:43975
2019-02-04 13:03:56,076 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c582a2b4e041b576371c13e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28413562}
2019-02-04 13:03:56,219 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-04 13:03:56,220 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-04 13:03:56,220 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-04 13:03:56,220 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-04 13:03:56,220 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-04 13:03:56,221 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-04 13:03:56,221 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-04 13:03:56,754 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@6751db67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58475dcf, org.springframework.security.web.context.SecurityContextPersistenceFilter@1017df75, org.springframework.security.web.header.HeaderWriterFilter@658b9521, org.springframework.security.web.authentication.logout.LogoutFilter@13f50a61, com.apiwatch.security.jwt.JwtAuthTokenFilter@5b867b20, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1724144f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8df59b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f3574d6, org.springframework.security.web.session.SessionManagementFilter@6ffad058, org.springframework.security.web.access.ExceptionTranslationFilter@348ed49f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@460f2955]
2019-02-04 13:03:56,991 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e164206: startup date [Mon Feb 04 13:03:53 CET 2019]; root of context hierarchy
2019-02-04 13:03:57,074 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 13:03:57,075 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 13:03:57,075 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 13:03:57,076 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 13:03:57,076 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 13:03:57,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 13:03:57,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 13:03:57,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 13:03:57,079 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 13:03:57,080 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 13:03:57,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 13:03:57,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 13:03:57,085 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 13:03:57,087 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 13:03:57,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 13:03:57,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 13:03:57,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 13:03:57,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 13:03:57,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 13:03:57,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 13:03:57,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 13:03:57,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 13:03:57,094 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 13:03:57,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 13:03:57,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 13:03:57,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 13:03:57,097 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 13:03:57,097 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 13:03:57,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 13:03:57,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 13:03:57,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 13:03:57,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 13:03:57,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 13:03:57,101 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 13:03:57,103 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 13:03:57,105 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 13:03:57,106 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 13:03:57,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 13:03:57,109 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 13:03:57,110 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 13:03:57,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 13:03:57,111 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 13:03:57,112 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 13:03:57,112 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 13:03:57,112 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 13:03:57,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 13:03:57,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 13:03:57,114 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 13:03:57,116 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 13:03:57,117 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 13:03:57,119 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 13:03:57,121 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 13:03:57,122 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 13:03:57,123 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 13:03:57,124 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 13:03:57,124 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 13:03:57,124 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 13:03:57,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 13:03:57,125 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 13:03:57,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 13:03:57,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 13:03:57,126 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 13:03:57,127 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 13:03:57,128 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 13:03:57,128 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 13:03:57,128 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 13:03:57,130 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 13:03:57,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 13:03:57,131 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 13:03:57,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 13:03:57,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 13:03:57,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 13:03:57,132 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 13:03:57,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 13:03:57,133 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 13:03:57,134 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 13:03:57,135 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 13:03:57,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 13:03:57,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 13:03:57,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 13:03:57,136 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 13:03:57,137 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 13:03:57,138 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 13:03:57,139 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 13:03:57,140 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 13:03:57,142 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 13:03:57,143 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 13:03:57,143 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 13:03:57,143 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 13:03:57,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 13:03:57,144 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 13:03:57,146 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 13:03:57,147 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 13:03:57,216 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 13:03:57,217 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 13:03:57,273 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 13:03:57,460 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-04 13:03:57,471 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 13:03:57,482 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-04 13:03:57,491 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-04 13:03:57,523 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-04 13:03:57,526 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.065 seconds (JVM running for 13.834)
2019-02-04 13:03:59,805 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-04 13:03:59,805 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-04 13:03:59,817 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-02-04 13:03:59,864 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 13:04:00,364 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:4197}] to 51.68.71.91:43975
2019-02-04 13:04:01,059 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:3, serverValue:4198}] to 51.68.71.91:43975
2019-02-04 13:04:01,092 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:5, serverValue:4200}] to 51.68.71.91:43975
2019-02-04 13:04:01,096 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:4, serverValue:4199}] to 51.68.71.91:43975
2019-02-04 13:49:45,180 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-10] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 14:00:00,035 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 14:00:00
2019-02-04 14:12:40,851 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c582a2b4e041b576371c13e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:6, serverValue:4205}] to 51.68.71.91:43975
2019-02-04 14:30:10,420 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c582a2b4e041b576371c13e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:7, serverValue:4206}] to 51.68.71.91:43975
2019-02-04 14:45:18,402 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e164206: startup date [Mon Feb 04 13:03:53 CET 2019]; root of context hierarchy
2019-02-04 14:45:18,411 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-02-04 14:45:18,430 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:4199}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-04 14:45:18,433 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:4197}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-04 14:45:18,434 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:4198}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-04 14:45:18,435 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:4200}] to 51.68.71.91:43975 because there was a socket exception raised on another connection from this pool.
2019-02-04 14:45:18,641 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Opened connection [connectionId{localValue:8, serverValue:4207}] to 51.68.71.91:43975
2019-02-04 14:45:18,669 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:8, serverValue:4207}] to 51.68.71.91:43975 because the pool has been closed.
2019-02-04 14:45:37,148 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellifera with PID 14932 (started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 14:45:37,150 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 14:45:37,190 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Mon Feb 04 14:45:37 CET 2019]; root of context hierarchy
2019-02-04 14:45:38,458 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 14:45:38,576 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$981e4ea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:38,585 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:38,587 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1280851e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:38,593 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bcf2f15b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:38,616 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:38,945 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 14:45:39,255 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c5842024e041b3a54e78436', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4208}] to 51.68.71.91:43975
2019-02-04 14:45:39,284 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c5842024e041b3a54e78436', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28226820}
2019-02-04 14:45:40,026 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@485e13d7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43984213, org.springframework.security.web.context.SecurityContextPersistenceFilter@6415f61e, org.springframework.security.web.header.HeaderWriterFilter@68ee3b6d, org.springframework.security.web.authentication.logout.LogoutFilter@1806bc4c, com.apiwatch.security.jwt.JwtAuthTokenFilter@61ab89b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a0bef24, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61bcbcce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ff7a73, org.springframework.security.web.session.SessionManagementFilter@a5bbaec, org.springframework.security.web.access.ExceptionTranslationFilter@3289079a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5115f590]
2019-02-04 14:45:40,384 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Mon Feb 04 14:45:37 CET 2019]; root of context hierarchy
2019-02-04 14:45:40,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 14:45:40,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 14:45:40,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 14:45:40,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 14:45:40,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 14:45:40,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 14:45:40,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 14:45:40,456 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 14:45:40,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 14:45:40,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 14:45:40,475 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 14:45:40,476 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 14:45:40,476 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 14:45:40,477 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 14:45:40,477 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 14:45:40,478 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 14:45:40,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 14:45:40,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 14:45:40,484 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 14:45:40,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 14:45:40,490 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 14:45:40,491 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 14:45:40,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 14:45:40,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 14:45:40,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 14:45:40,494 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 14:45:40,495 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 14:45:40,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 14:45:40,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 14:45:40,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 14:45:40,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 14:45:40,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 14:45:40,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 14:45:40,498 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 14:45:40,498 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 14:45:40,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 14:45:40,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 14:45:40,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 14:45:40,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 14:45:40,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 14:45:40,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 14:45:40,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 14:45:40,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 14:45:40,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 14:45:40,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 14:45:40,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 14:45:40,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 14:45:40,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 14:45:40,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 14:45:40,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 14:45:40,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 14:45:40,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 14:45:40,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 14:45:40,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 14:45:40,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 14:45:40,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 14:45:40,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 14:45:40,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 14:45:40,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 14:45:40,517 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 14:45:40,518 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 14:45:40,518 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 14:45:40,521 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 14:45:40,524 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 14:45:40,525 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 14:45:40,525 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 14:45:40,527 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 14:45:40,528 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 14:45:40,528 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 14:45:40,528 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 14:45:40,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 14:45:40,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 14:45:40,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 14:45:40,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 14:45:40,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 14:45:40,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 14:45:40,531 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 14:45:40,533 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 14:45:40,534 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 14:45:40,534 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 14:45:40,534 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 14:45:40,535 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 14:45:40,535 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 14:45:40,536 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 14:45:40,536 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 14:45:40,537 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 14:45:40,537 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 14:45:40,537 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 14:45:40,538 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 14:45:40,538 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 14:45:40,540 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 14:45:40,543 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 14:45:40,543 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 14:45:40,606 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 14:45:40,606 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 14:45:40,689 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 14:45:40,869 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 14:45:40,879 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.996 seconds (JVM running for 4.811)
2019-02-04 14:45:41,002 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Mon Feb 04 14:45:37 CET 2019]; root of context hierarchy
2019-02-04 14:45:42,683 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellifera with PID 14884 (/home/mickael/repos_git/Backend-dev/target/classes started by mickael in /home/mickael/repos_git/Backend-dev)
2019-02-04 14:45:42,688 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-02-04 14:45:42,740 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad467d4: startup date [Mon Feb 04 14:45:42 CET 2019]; root of context hierarchy
2019-02-04 14:45:43,440 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-02-04 14:45:43,570 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$973612fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:43,579 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:43,580 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@609a7170' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:43,586 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bc0ab5ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:43,602 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-04 14:45:43,827 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-02-04 14:45:43,840 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-02-04 14:45:43,848 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-02-04 14:45:43,849 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-02-04 14:45:43,866 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-02-04 14:45:44,113 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-02-04 14:45:44,113 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1373 ms
2019-02-04 14:45:44,447 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-02-04 14:45:44,741 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c5842084e041b3a24fb738f', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:4209}] to 51.68.71.91:43975
2019-02-04 14:45:44,771 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c5842084e041b3a24fb738f', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28508491}
2019-02-04 14:45:44,832 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-04 14:45:44,832 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-04 14:45:44,832 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-04 14:45:44,832 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-02-04 14:45:44,833 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-04 14:45:44,833 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-02-04 14:45:44,833 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-02-04 14:45:45,349 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@7b3654c0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77ffa8e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@1433c7fd, org.springframework.security.web.header.HeaderWriterFilter@2db45ee5, org.springframework.security.web.authentication.logout.LogoutFilter@7c46f8ba, com.apiwatch.security.jwt.JwtAuthTokenFilter@3711d1f7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21a567cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5877e139, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@549b50d4, org.springframework.security.web.session.SessionManagementFilter@1daec707, org.springframework.security.web.access.ExceptionTranslationFilter@325fba99, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@415bd905]
2019-02-04 14:45:45,591 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad467d4: startup date [Mon Feb 04 14:45:42 CET 2019]; root of context hierarchy
2019-02-04 14:45:45,671 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-02-04 14:45:45,673 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-02-04 14:45:45,673 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String)
2019-02-04 14:45:45,674 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String)
2019-02-04 14:45:45,675 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-02-04 14:45:45,676 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-02-04 14:45:45,676 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-02-04 14:45:45,676 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-02-04 14:45:45,678 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm)
2019-02-04 14:45:45,680 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-02-04 14:45:45,681 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-02-04 14:45:45,681 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-02-04 14:45:45,682 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-02-04 14:45:45,682 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-02-04 14:45:45,682 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-02-04 14:45:45,685 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-02-04 14:45:45,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-02-04 14:45:45,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-02-04 14:45:45,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-02-04 14:45:45,688 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-02-04 14:45:45,688 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-02-04 14:45:45,689 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-02-04 14:45:45,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-02-04 14:45:45,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-02-04 14:45:45,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-02-04 14:45:45,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-02-04 14:45:45,695 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String,java.lang.String)
2019-02-04 14:45:45,696 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-02-04 14:45:45,697 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 14:45:45,697 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-02-04 14:45:45,697 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-02-04 14:45:45,697 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-02-04 14:45:45,698 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-02-04 14:45:45,698 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-02-04 14:45:45,699 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public void com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-02-04 14:45:45,702 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-02-04 14:45:45,702 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-02-04 14:45:45,706 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-02-04 14:45:45,707 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 14:45:45,707 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-02-04 14:45:45,707 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-02-04 14:45:45,708 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-02-04 14:45:45,708 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-02-04 14:45:45,709 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-02-04 14:45:45,711 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-02-04 14:45:45,713 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-02-04 14:45:45,714 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-02-04 14:45:45,715 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-02-04 14:45:45,717 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-02-04 14:45:45,717 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-02-04 14:45:45,718 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-02-04 14:45:45,718 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-02-04 14:45:45,718 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-02-04 14:45:45,719 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-02-04 14:45:45,720 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-02-04 14:45:45,720 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-02-04 14:45:45,720 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-02-04 14:45:45,720 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-02-04 14:45:45,721 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-02-04 14:45:45,722 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-02-04 14:45:45,722 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-02-04 14:45:45,722 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-02-04 14:45:45,723 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String)
2019-02-04 14:45:45,724 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-02-04 14:45:45,724 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-02-04 14:45:45,724 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-02-04 14:45:45,726 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-02-04 14:45:45,727 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-02-04 14:45:45,727 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-02-04 14:45:45,727 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-02-04 14:45:45,727 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-02-04 14:45:45,728 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-02-04 14:45:45,728 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-02-04 14:45:45,729 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 14:45:45,729 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-02-04 14:45:45,729 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-02-04 14:45:45,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-02-04 14:45:45,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-02-04 14:45:45,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfDeviceExist()
2019-02-04 14:45:45,731 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-02-04 14:45:45,732 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-02-04 14:45:45,733 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-02-04 14:45:45,734 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-02-04 14:45:45,735 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-02-04 14:45:45,736 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-02-04 14:45:45,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-02-04 14:45:45,738 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-02-04 14:45:45,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-02-04 14:45:45,739 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-02-04 14:45:45,740 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-02-04 14:45:45,741 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-02-04 14:45:45,749 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-04 14:45:45,749 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-04 14:45:45,826 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 14:45:45,826 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 14:45:45,884 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-04 14:45:46,027 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-02-04 14:45:46,036 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-02-04 14:45:46,043 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-02-04 14:45:46,049 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-02-04 14:45:46,075 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-02-04 14:45:46,079 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.827 seconds (JVM running for 15.381)
2019-02-04 14:46:32,461 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-04 14:46:32,461 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-02-04 14:46:32,473 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-02-04 14:46:32,504 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 14:46:32,950 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:4210}] to 51.68.71.91:43975
2019-02-04 14:46:33,773 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:5, serverValue:4213}] to 51.68.71.91:43975
2019-02-04 14:46:33,774 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:4, serverValue:4212}] to 51.68.71.91:43975
2019-02-04 14:46:33,777 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:3, serverValue:4211}] to 51.68.71.91:43975
2019-02-04 14:46:34,139 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:6, serverValue:4214}] to 51.68.71.91:43975
2019-02-04 14:46:43,105 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:7, serverValue:4215}] to 51.68.71.91:43975
2019-02-04 15:00:00,043 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 15:00:00
2019-02-04 15:01:02,832 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-9] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 15:01:02,870 ERROR com.apiwatch.security.jwt.JwtAuthEntryPoint [http-nio-8091-exec-9] Unauthorized error. Message :null
2019-02-04 15:01:11,819 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-8] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 15:05:58,128 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-8] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 15:06:45,023 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-4] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-02-04 15:07:45,873 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-3] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
