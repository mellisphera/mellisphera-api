2019-03-05 08:37:48,384 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 6904 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:37:48,386 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:37:48,430 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Tue Mar 05 08:37:48 CET 2019]; root of context hierarchy
2019-03-05 08:37:49,201 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:37:49,301 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$910c6c2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:49,309 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:49,311 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1473b8c0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:49,317 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b5e10edf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:49,325 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:49,542 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:37:49,907 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e274d0d89841af86955f4', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9926}] to 51.68.71.91:43975
2019-03-05 08:37:49,937 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e274d0d89841af86955f4', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28225041}
2019-03-05 08:37:50,590 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@43acd79e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e1b061, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c1cfa53, org.springframework.security.web.header.HeaderWriterFilter@708f018e, org.springframework.security.web.authentication.logout.LogoutFilter@4667c4c1, com.apiwatch.security.jwt.JwtAuthTokenFilter@51b01550, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b06bef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6056232d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38f77cd9, org.springframework.security.web.session.SessionManagementFilter@6468a7b6, org.springframework.security.web.access.ExceptionTranslationFilter@2be95d31, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43984213]
2019-03-05 08:37:50,934 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Tue Mar 05 08:37:48 CET 2019]; root of context hierarchy
2019-03-05 08:37:50,999 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:37:51,002 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:37:51,003 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:37:51,008 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:37:51,010 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:51,011 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:37:51,011 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:51,011 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:51,011 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:37:51,014 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:51,015 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:51,017 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:37:51,019 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:37:51,020 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:37:51,020 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:37:51,021 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:37:51,021 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:37:51,023 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:37:51,023 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:37:51,024 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:37:51,024 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:37:51,027 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:37:51,027 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:51,028 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:37:51,029 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:37:51,030 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:37:51,030 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:37:51,030 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:37:51,032 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:37:51,033 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:37:51,033 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:37:51,033 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:37:51,033 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:37:51,034 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:37:51,034 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:37:51,034 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:37:51,035 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:37:51,035 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:37:51,036 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:37:51,038 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:37:51,038 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:37:51,038 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:37:51,039 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:37:51,039 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:37:51,039 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:37:51,039 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:37:51,040 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:37:51,040 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:37:51,041 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:37:51,041 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:37:51,042 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:37:51,043 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:37:51,043 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:37:51,043 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:37:51,043 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:37:51,044 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:37:51,045 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:37:51,045 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:37:51,046 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:37:51,046 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:37:51,046 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:37:51,047 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:37:51,047 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:37:51,047 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:37:51,048 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:37:51,049 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:37:51,049 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:37:51,049 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:37:51,052 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:37:51,052 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:37:51,053 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:37:51,053 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:37:51,053 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:37:51,054 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:37:51,054 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:37:51,054 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:37:51,055 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:37:51,056 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:51,056 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:37:51,057 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:37:51,057 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:37:51,057 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:37:51,057 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:37:51,058 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:37:51,059 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:37:51,059 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:37:51,059 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:37:51,060 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:37:51,061 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:37:51,061 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:37:51,061 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:37:51,061 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:37:51,062 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:37:51,063 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:51,064 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:51,126 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:37:51,126 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:37:51,171 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:37:51,328 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:37:51,336 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.3 seconds (JVM running for 3.828)
2019-03-05 08:37:51,503 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Tue Mar 05 08:37:48 CET 2019]; root of context hierarchy
2019-03-05 08:37:53,733 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 6860 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:37:53,751 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:37:53,830 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51c5ae82: startup date [Tue Mar 05 08:37:53 CET 2019]; root of context hierarchy
2019-03-05 08:37:54,563 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:37:54,677 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5e999a44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:54,686 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:54,687 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3debbc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:54,693 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$836e3cf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:54,701 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:37:54,930 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:37:54,943 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:37:54,950 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:37:54,950 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:37:54,961 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:37:55,173 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:37:55,174 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1344 ms
2019-03-05 08:37:55,559 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:37:55,918 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e27530d89841acc100aad', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9927}] to 51.68.71.91:43975
2019-03-05 08:37:55,948 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e27530d89841acc100aad', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28798292}
2019-03-05 08:37:56,202 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:37:56,203 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:37:56,204 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:37:56,207 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:37:56,207 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:37:56,208 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:37:56,208 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:37:56,835 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@59b3605b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b513dc5, org.springframework.security.web.context.SecurityContextPersistenceFilter@5411aec, org.springframework.security.web.header.HeaderWriterFilter@403bf311, org.springframework.security.web.authentication.logout.LogoutFilter@3747da24, com.apiwatch.security.jwt.JwtAuthTokenFilter@75904c67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ce0b4f0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57283f80, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c6927ba, org.springframework.security.web.session.SessionManagementFilter@7d0e994a, org.springframework.security.web.access.ExceptionTranslationFilter@2c4298fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3e209c8e]
2019-03-05 08:37:57,083 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51c5ae82: startup date [Tue Mar 05 08:37:53 CET 2019]; root of context hierarchy
2019-03-05 08:37:57,199 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:37:57,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:57,201 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:57,202 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:37:57,202 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:57,202 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:37:57,203 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:37:57,203 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:37:57,203 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:37:57,205 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:57,207 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:57,209 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:37:57,211 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:37:57,212 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:37:57,213 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:37:57,213 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:37:57,213 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:37:57,214 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:37:57,215 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:37:57,215 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:37:57,216 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:37:57,219 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:57,219 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:37:57,220 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:37:57,221 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:37:57,222 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:37:57,222 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:37:57,222 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:37:57,224 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:37:57,225 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:37:57,226 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:37:57,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:37:57,228 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:37:57,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:37:57,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:37:57,229 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:37:57,230 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:37:57,231 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:37:57,231 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:37:57,233 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:37:57,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:37:57,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:37:57,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:37:57,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:37:57,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:37:57,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:37:57,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:37:57,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:37:57,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:37:57,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:37:57,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:37:57,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:37:57,238 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:37:57,239 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:37:57,239 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:37:57,240 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:37:57,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:37:57,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:37:57,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:37:57,242 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:37:57,242 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:37:57,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:37:57,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:37:57,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:37:57,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:37:57,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:37:57,247 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:37:57,247 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:37:57,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:37:57,252 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:37:57,253 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:37:57,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:37:57,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:37:57,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:37:57,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:37:57,256 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:37:57,257 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:37:57,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:57,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:37:57,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:37:57,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:37:57,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:37:57,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:37:57,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:37:57,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:37:57,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:37:57,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:37:57,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:37:57,270 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:37:57,271 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:37:57,271 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:37:57,272 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:37:57,274 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:37:57,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:37:57,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:37:57,337 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:37:57,337 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:37:57,392 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:37:57,559 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:37:57,575 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:37:57,596 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:37:57,611 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:37:57,635 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:37:57,637 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.929 seconds (JVM running for 13.168)
2019-03-05 08:38:53,631 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:38:53,631 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:38:53,652 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-03-05 08:38:53,717 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-1] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:38:54,255 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:2, serverValue:9928}] to 51.68.71.91:43975
2019-03-05 08:38:55,866 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:3, serverValue:9929}] to 51.68.71.91:43975
2019-03-05 08:38:55,867 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:4, serverValue:9930}] to 51.68.71.91:43975
2019-03-05 08:38:56,115 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:5, serverValue:9931}] to 51.68.71.91:43975
2019-03-05 08:45:18,120 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51c5ae82: startup date [Tue Mar 05 08:37:53 CET 2019]; root of context hierarchy
2019-03-05 08:45:18,128 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 08:45:18,176 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9930}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:45:18,176 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9931}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:45:18,176 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9929}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:45:18,177 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9928}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:45:39,342 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 7507 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:45:39,343 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:45:39,384 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Tue Mar 05 08:45:39 CET 2019]; root of context hierarchy
2019-03-05 08:45:40,151 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:45:40,243 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d5027078] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:40,251 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:40,252 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@78411116' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:40,262 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f9d7132a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:40,271 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:40,554 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:45:40,931 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29240d89841d533f4b07', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9932}] to 51.68.71.91:43975
2019-03-05 08:45:40,967 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29240d89841d533f4b07', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31643409}
2019-03-05 08:45:42,510 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@37baddde, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5115f590, org.springframework.security.web.context.SecurityContextPersistenceFilter@32fa809f, org.springframework.security.web.header.HeaderWriterFilter@2e17a321, org.springframework.security.web.authentication.logout.LogoutFilter@404eca05, com.apiwatch.security.jwt.JwtAuthTokenFilter@7d57dbb5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12a14b74, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@708f018e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b31a708, org.springframework.security.web.session.SessionManagementFilter@4ba02375, org.springframework.security.web.access.ExceptionTranslationFilter@3c50ad4b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f3faa70]
2019-03-05 08:45:43,268 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Tue Mar 05 08:45:39 CET 2019]; root of context hierarchy
2019-03-05 08:45:43,415 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:45:43,421 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:43,422 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:45:43,423 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:43,425 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:43,432 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:45:43,437 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:45:43,438 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:45:43,439 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:45:43,441 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:43,442 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:43,445 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:45:43,448 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:45:43,450 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:45:43,453 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:45:43,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:45:43,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:45:43,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:45:43,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:45:43,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:45:43,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:45:43,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:45:43,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:43,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:45:43,475 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:45:43,476 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:45:43,477 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:45:43,478 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:45:43,483 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:45:43,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:45:43,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:45:43,490 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:45:43,490 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:45:43,491 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:45:43,491 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:45:43,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:45:43,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:45:43,494 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:45:43,494 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:45:43,498 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:45:43,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:45:43,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:45:43,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:45:43,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:45:43,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:45:43,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:45:43,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:45:43,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:45:43,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:45:43,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:45:43,518 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:45:43,519 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:45:43,520 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:45:43,520 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:45:43,520 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:45:43,528 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:45:43,528 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:45:43,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:45:43,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:45:43,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:45:43,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:45:43,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:45:43,531 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:45:43,531 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:45:43,535 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:45:43,535 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:45:43,535 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:45:43,536 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:45:43,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:45:43,554 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:45:43,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:45:43,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:45:43,557 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:45:43,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:45:43,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:45:43,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:45:43,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:45:43,570 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:43,570 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:45:43,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:45:43,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:45:43,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:45:43,572 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:45:43,572 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:45:43,572 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:45:43,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:45:43,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:45:43,578 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:45:43,578 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:45:43,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:45:43,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:45:43,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:45:43,580 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:45:43,587 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:43,588 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:43,680 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:45:43,681 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:45:43,766 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:45:44,106 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:45:44,115 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.983 seconds (JVM running for 5.491)
2019-03-05 08:45:44,283 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@1807f5a7: startup date [Tue Mar 05 08:45:39 CET 2019]; root of context hierarchy
2019-03-05 08:45:46,907 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 7465 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:45:46,914 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:45:46,963 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@384dbca3: startup date [Tue Mar 05 08:45:46 CET 2019]; root of context hierarchy
2019-03-05 08:45:49,012 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:45:49,403 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5d50e9b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:49,437 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:49,439 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@66e57d82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:49,447 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$82258c63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:49,474 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:45:50,153 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:45:50,169 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:45:50,177 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:45:50,177 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:45:50,191 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:45:50,512 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:45:50,513 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 3549 ms
2019-03-05 08:45:51,191 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:45:51,632 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e292f0d89841d29aa575d', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9933}] to 51.68.71.91:43975
2019-03-05 08:45:51,662 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e292f0d89841d29aa575d', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28724916}
2019-03-05 08:45:52,025 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:45:52,026 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:45:52,031 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:45:52,032 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:45:52,032 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:45:52,033 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:45:52,034 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:45:53,056 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@6403ac7e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70dcb65d, org.springframework.security.web.context.SecurityContextPersistenceFilter@62d2ad73, org.springframework.security.web.header.HeaderWriterFilter@ac09df8, org.springframework.security.web.authentication.logout.LogoutFilter@5518ed56, com.apiwatch.security.jwt.JwtAuthTokenFilter@12a0a848, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11691567, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@293be3fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d0eb8e, org.springframework.security.web.session.SessionManagementFilter@707368e6, org.springframework.security.web.access.ExceptionTranslationFilter@4a8a27a8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19700f48]
2019-03-05 08:45:53,398 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@384dbca3: startup date [Tue Mar 05 08:45:46 CET 2019]; root of context hierarchy
2019-03-05 08:45:53,535 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:53,545 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:45:53,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:53,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:53,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:45:53,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:45:53,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:45:53,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:45:53,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:45:53,549 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:53,550 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:53,558 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:45:53,560 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:45:53,562 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:45:53,563 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:45:53,564 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:45:53,564 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:45:53,565 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:45:53,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:45:53,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:45:53,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:45:53,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:53,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:45:53,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:45:53,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:45:53,570 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:45:53,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:45:53,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:45:53,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:45:53,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:45:53,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:45:53,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:45:53,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:45:53,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:45:53,575 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:45:53,575 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:45:53,575 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:45:53,576 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:45:53,576 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:45:53,578 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:45:53,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:45:53,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:45:53,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:45:53,580 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:45:53,580 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:45:53,580 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:45:53,580 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:45:53,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:45:53,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:45:53,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:45:53,587 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:45:53,588 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:45:53,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:45:53,593 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:45:53,594 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:45:53,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:45:53,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:45:53,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:45:53,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:45:53,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:45:53,599 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:45:53,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:45:53,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:45:53,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:45:53,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:45:53,603 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:45:53,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:45:53,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:45:53,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:45:53,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:45:53,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:45:53,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:45:53,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:45:53,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:45:53,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:45:53,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:45:53,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:45:53,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:53,619 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:45:53,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:45:53,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:45:53,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:45:53,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:45:53,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:45:53,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:45:53,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:45:53,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:45:53,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:45:53,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:45:53,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:45:53,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:45:53,634 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:45:53,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:45:53,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:45:53,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:45:53,703 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:45:53,704 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:45:53,749 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:45:53,898 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:45:53,916 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:45:53,927 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:45:53,938 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:45:53,991 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:45:53,998 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 8.103 seconds (JVM running for 19.035)
2019-03-05 08:46:03,574 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:46:03,574 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:46:03,585 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
2019-03-05 08:46:03,616 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:46:04,060 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9934}] to 51.68.71.91:43975
2019-03-05 08:46:05,392 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:3, serverValue:9935}] to 51.68.71.91:43975
2019-03-05 08:46:05,399 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:5, serverValue:9936}] to 51.68.71.91:43975
2019-03-05 08:46:05,414 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:4, serverValue:9937}] to 51.68.71.91:43975
2019-03-05 08:46:36,285 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@384dbca3: startup date [Tue Mar 05 08:45:46 CET 2019]; root of context hierarchy
2019-03-05 08:46:36,291 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 08:46:36,338 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9934}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:46:36,338 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9937}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:46:36,339 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9935}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:46:36,339 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9936}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:46:40,721 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 7724 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:46:40,722 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:46:40,766 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 08:46:40 CET 2019]; root of context hierarchy
2019-03-05 08:46:41,506 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:46:41,602 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$562490c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:41,610 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:41,612 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5972d253' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:41,618 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7af93379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:41,625 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:41,869 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:46:42,172 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29610d89841e2c229d35', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9938}] to 51.68.71.91:43975
2019-03-05 08:46:42,201 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29610d89841e2c229d35', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28449014}
2019-03-05 08:46:42,842 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@135a8c6f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6419a0e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4667c4c1, org.springframework.security.web.header.HeaderWriterFilter@58b91d57, org.springframework.security.web.authentication.logout.LogoutFilter@38830ea, com.apiwatch.security.jwt.JwtAuthTokenFilter@36327cec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22c75c01, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d074b14, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@280d4882, org.springframework.security.web.session.SessionManagementFilter@49f40c00, org.springframework.security.web.access.ExceptionTranslationFilter@7bac686b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a8d467e]
2019-03-05 08:46:43,174 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 08:46:40 CET 2019]; root of context hierarchy
2019-03-05 08:46:43,234 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:46:43,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:43,235 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:46:43,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:43,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:43,236 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:46:43,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:46:43,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:46:43,237 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:46:43,239 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:43,240 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:43,241 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:46:43,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:46:43,243 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:46:43,244 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:46:43,244 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:46:43,244 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:46:43,245 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:46:43,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:46:43,246 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:46:43,247 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:46:43,248 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:46:43,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:43,249 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:46:43,250 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:46:43,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:46:43,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:46:43,251 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:46:43,253 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:46:43,253 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:46:43,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:46:43,254 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:46:43,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:46:43,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:46:43,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:46:43,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:46:43,255 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:46:43,256 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:46:43,257 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:46:43,258 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:46:43,259 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:46:43,259 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:46:43,259 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:46:43,259 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:46:43,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:46:43,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:46:43,260 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:46:43,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:46:43,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:46:43,261 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:46:43,262 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:46:43,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:46:43,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:46:43,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:46:43,263 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:46:43,264 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:46:43,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:46:43,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:46:43,265 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:46:43,266 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:46:43,266 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:46:43,267 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:46:43,267 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:46:43,268 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:46:43,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:46:43,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:46:43,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:46:43,269 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:46:43,277 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:46:43,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:46:43,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:46:43,278 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:46:43,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:46:43,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:46:43,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:46:43,279 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:46:43,280 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:46:43,280 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:43,281 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:46:43,282 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:46:43,282 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:46:43,282 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:46:43,282 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:46:43,283 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:46:43,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:46:43,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:46:43,284 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:46:43,285 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:46:43,286 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:46:43,286 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:46:43,290 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:46:43,290 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:46:43,291 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:46:43,297 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:43,298 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:43,349 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:46:43,350 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:46:43,391 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:46:43,567 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:46:43,573 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.053 seconds (JVM running for 3.506)
2019-03-05 08:46:43,667 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 08:46:40 CET 2019]; root of context hierarchy
2019-03-05 08:46:45,056 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 7685 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:46:45,059 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:46:45,081 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e574c68: startup date [Tue Mar 05 08:46:45 CET 2019]; root of context hierarchy
2019-03-05 08:46:45,762 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:46:45,857 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5d8d21cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:45,866 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:45,867 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51605602' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:45,873 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8261c47f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:45,880 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:46:46,101 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:46:46,114 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:46:46,121 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:46:46,121 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:46:46,132 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:46:46,200 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:46:46,201 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1120 ms
2019-03-05 08:46:46,732 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:46:47,027 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29660d89841e051785bb', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9939}] to 51.68.71.91:43975
2019-03-05 08:46:47,056 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29660d89841e051785bb', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28509319}
2019-03-05 08:46:47,141 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:46:47,141 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:46:47,141 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:46:47,141 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:46:47,142 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:46:47,142 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:46:47,142 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:46:47,651 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@6dfb0355, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62d89b43, org.springframework.security.web.context.SecurityContextPersistenceFilter@2dd78d43, org.springframework.security.web.header.HeaderWriterFilter@2584c487, org.springframework.security.web.authentication.logout.LogoutFilter@5b97b2b9, com.apiwatch.security.jwt.JwtAuthTokenFilter@52e3711c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f9e4dd0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e33ff82, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d8bd464, org.springframework.security.web.session.SessionManagementFilter@11e799d0, org.springframework.security.web.access.ExceptionTranslationFilter@2a68398e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1765b98c]
2019-03-05 08:46:47,893 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e574c68: startup date [Tue Mar 05 08:46:45 CET 2019]; root of context hierarchy
2019-03-05 08:46:47,956 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:46:47,957 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:47,957 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:47,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:46:47,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:47,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:46:47,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:46:47,959 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:46:47,959 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:46:47,961 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:47,962 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:47,963 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:46:47,965 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:46:47,965 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:46:47,965 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:46:47,965 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:46:47,966 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:46:47,966 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:46:47,967 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:46:47,967 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:46:47,967 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:46:47,969 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:46:47,970 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:47,970 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:46:47,971 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:46:47,971 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:46:47,971 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:46:47,971 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:46:47,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:46:47,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:46:47,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:46:47,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:46:47,974 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:46:47,974 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:46:47,974 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:46:47,974 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:46:47,974 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:46:47,975 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:46:47,975 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:46:47,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:46:47,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:46:47,978 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:46:47,978 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:46:47,978 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:46:47,978 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:46:47,978 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:46:47,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:46:47,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:46:47,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:46:47,979 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:46:47,980 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:46:47,980 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:46:47,981 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:46:47,981 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:46:47,981 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:46:47,982 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:46:47,982 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:46:47,982 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:46:47,982 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:46:47,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:46:47,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:46:47,984 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:46:47,984 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:46:47,984 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:46:47,985 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:46:47,985 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:46:47,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:46:47,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:46:47,988 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:46:47,988 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:46:47,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:46:47,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:46:47,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:46:47,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:46:47,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:46:47,990 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:46:47,990 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:46:47,991 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:47,991 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:46:47,992 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:46:47,992 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:46:47,992 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:46:47,992 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:46:47,993 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:46:47,993 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:46:47,993 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:46:47,993 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:46:47,994 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:46:47,995 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:46:47,995 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:46:47,995 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:46:47,995 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:46:47,996 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:46:47,997 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:46:47,998 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:46:48,046 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:46:48,046 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:46:48,089 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:46:48,227 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:46:48,238 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:46:48,243 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:46:48,247 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:46:48,271 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:46:48,273 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.56 seconds (JVM running for 11.055)
2019-03-05 08:47:01,576 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:47:01,576 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:47:01,588 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-03-05 08:47:01,616 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-3] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:47:02,188 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-3] Opened connection [connectionId{localValue:2, serverValue:9940}] to 51.68.71.91:43975
2019-03-05 08:47:03,480 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:5, serverValue:9943}] to 51.68.71.91:43975
2019-03-05 08:47:03,508 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:3, serverValue:9941}] to 51.68.71.91:43975
2019-03-05 08:47:03,523 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:4, serverValue:9942}] to 51.68.71.91:43975
2019-03-05 08:48:11,780 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e574c68: startup date [Tue Mar 05 08:46:45 CET 2019]; root of context hierarchy
2019-03-05 08:48:11,784 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 08:48:11,830 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9940}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:48:11,831 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9942}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:48:11,831 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9941}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:48:11,831 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9943}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:48:16,209 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 7880 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:48:16,211 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:48:16,256 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Tue Mar 05 08:48:16 CET 2019]; root of context hierarchy
2019-03-05 08:48:16,996 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:48:17,101 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$17f58f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:17,110 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:17,112 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fcc0416' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:17,118 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3cca3239] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:17,126 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:17,384 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:48:17,682 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29c10d89841ec82cf2e7', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9944}] to 51.68.71.91:43975
2019-03-05 08:48:17,711 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29c10d89841ec82cf2e7', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28392647}
2019-03-05 08:48:18,366 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@e11ecfa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@485e13d7, org.springframework.security.web.context.SecurityContextPersistenceFilter@65eb76cd, org.springframework.security.web.header.HeaderWriterFilter@12a14b74, org.springframework.security.web.authentication.logout.LogoutFilter@31e2232f, com.apiwatch.security.jwt.JwtAuthTokenFilter@2cd62003, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@334ebcaa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52b06bef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43984213, org.springframework.security.web.session.SessionManagementFilter@19a31b9d, org.springframework.security.web.access.ExceptionTranslationFilter@7593ea79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37baddde]
2019-03-05 08:48:18,705 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Tue Mar 05 08:48:16 CET 2019]; root of context hierarchy
2019-03-05 08:48:18,767 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:48:18,768 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:48:18,769 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:48:18,769 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:48:18,770 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:18,770 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:48:18,771 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:18,771 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:18,772 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:48:18,774 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:18,774 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:18,776 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:48:18,778 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:48:18,778 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:48:18,778 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:48:18,779 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:48:18,779 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:48:18,780 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:48:18,780 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:48:18,781 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:48:18,781 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:48:18,783 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:48:18,783 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:48:18,783 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:18,784 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:48:18,785 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:48:18,785 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:48:18,785 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:48:18,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:48:18,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:48:18,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:48:18,787 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:48:18,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:48:18,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:48:18,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:48:18,788 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:48:18,789 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:48:18,789 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:48:18,790 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:48:18,791 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:48:18,792 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:48:18,792 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:48:18,792 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:48:18,792 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:48:18,793 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:48:18,793 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:48:18,793 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:48:18,793 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:48:18,794 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:48:18,794 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:48:18,795 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:48:18,796 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:48:18,796 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:48:18,796 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:48:18,796 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:48:18,797 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:48:18,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:48:18,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:48:18,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:48:18,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:48:18,798 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:48:18,799 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:48:18,799 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:48:18,800 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:48:18,800 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:48:18,801 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:48:18,801 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:48:18,801 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:48:18,803 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:48:18,804 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:48:18,804 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:48:18,804 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:48:18,804 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:48:18,805 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:48:18,805 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:48:18,805 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:48:18,806 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:48:18,806 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:48:18,807 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:18,807 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:48:18,808 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:48:18,808 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:48:18,808 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:48:18,809 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:48:18,809 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:48:18,810 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:48:18,810 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:48:18,811 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:48:18,811 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:48:18,811 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:48:18,812 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:48:18,812 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:48:18,812 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:48:18,814 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:18,815 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:18,860 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:48:18,860 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:48:18,922 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:48:19,078 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:48:19,084 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.072 seconds (JVM running for 3.655)
2019-03-05 08:48:19,171 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Tue Mar 05 08:48:16 CET 2019]; root of context hierarchy
2019-03-05 08:48:20,588 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 7840 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:48:20,591 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:48:20,618 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f1b05c6: startup date [Tue Mar 05 08:48:20 CET 2019]; root of context hierarchy
2019-03-05 08:48:21,294 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:48:21,391 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$564e8a8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:21,400 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:21,401 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@d8db730' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:21,407 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7b232d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:21,414 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:48:21,645 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:48:21,657 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:48:21,665 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:48:21,665 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:48:21,676 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:48:21,727 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:48:21,727 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1109 ms
2019-03-05 08:48:22,206 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:48:22,518 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29c60d89841ea0980b3b', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9945}] to 51.68.71.91:43975
2019-03-05 08:48:22,547 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e29c60d89841ea0980b3b', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28507179}
2019-03-05 08:48:22,571 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:48:22,571 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:48:22,571 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:48:22,571 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:48:22,572 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:48:22,572 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:48:22,572 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:48:23,157 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@7268d761, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6af81184, org.springframework.security.web.context.SecurityContextPersistenceFilter@803f9ff, org.springframework.security.web.header.HeaderWriterFilter@2414951c, org.springframework.security.web.authentication.logout.LogoutFilter@1a779db7, com.apiwatch.security.jwt.JwtAuthTokenFilter@7ead8ae4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51ffb5e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c3239a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@173f4aab, org.springframework.security.web.session.SessionManagementFilter@5d3a75ab, org.springframework.security.web.access.ExceptionTranslationFilter@389d3904, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e9d9fbc]
2019-03-05 08:48:23,416 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f1b05c6: startup date [Tue Mar 05 08:48:20 CET 2019]; root of context hierarchy
2019-03-05 08:48:23,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:23,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:48:23,488 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:23,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:23,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:48:23,489 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:48:23,490 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:48:23,490 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:48:23,490 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:48:23,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:23,493 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:23,495 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:48:23,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:48:23,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:48:23,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:48:23,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:48:23,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:48:23,498 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:48:23,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:48:23,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:48:23,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:48:23,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:48:23,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:23,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:48:23,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:48:23,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:48:23,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:48:23,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:48:23,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:48:23,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:48:23,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:48:23,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:48:23,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:48:23,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:48:23,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:48:23,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:48:23,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:48:23,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:48:23,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:48:23,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:48:23,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:48:23,510 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:48:23,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:48:23,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:48:23,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:48:23,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:48:23,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:48:23,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:48:23,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:48:23,512 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:48:23,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:48:23,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:48:23,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:48:23,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:48:23,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:48:23,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:48:23,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:48:23,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:48:23,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:48:23,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:48:23,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:48:23,517 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:48:23,517 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:48:23,518 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:48:23,518 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:48:23,519 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:48:23,519 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:48:23,519 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:48:23,521 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:48:23,521 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:48:23,522 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:48:23,522 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:48:23,522 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:48:23,522 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:48:23,523 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:48:23,523 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:48:23,524 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:48:23,524 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:23,524 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:48:23,525 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:48:23,525 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:48:23,526 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:48:23,526 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:48:23,527 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:48:23,527 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:48:23,527 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:48:23,527 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:48:23,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:48:23,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:48:23,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:48:23,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:48:23,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:48:23,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:48:23,532 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:48:23,533 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:48:23,585 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:48:23,586 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:48:23,635 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:48:23,780 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:48:23,792 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:48:23,800 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:48:23,803 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:48:23,825 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:48:23,827 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.584 seconds (JVM running for 11.322)
2019-03-05 08:48:43,744 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:48:43,744 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:48:43,757 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-03-05 08:48:43,785 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:48:44,311 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9946}] to 51.68.71.91:43975
2019-03-05 08:48:45,509 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:3, serverValue:9947}] to 51.68.71.91:43975
2019-03-05 08:48:45,529 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:5, serverValue:9949}] to 51.68.71.91:43975
2019-03-05 08:48:45,533 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:4, serverValue:9948}] to 51.68.71.91:43975
2019-03-05 08:50:10,465 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f1b05c6: startup date [Tue Mar 05 08:48:20 CET 2019]; root of context hierarchy
2019-03-05 08:50:10,471 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 08:50:10,523 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9946}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:50:10,524 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9947}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:50:10,524 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9949}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:50:10,524 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9948}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:50:16,018 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 8049 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:50:16,039 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:50:16,058 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Tue Mar 05 08:50:16 CET 2019]; root of context hierarchy
2019-03-05 08:50:17,070 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:50:17,347 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$981e4ea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:17,358 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:17,361 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13a37e2a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:17,367 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bcf2f15b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:17,377 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:17,689 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:50:18,270 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2a390d89841f714f4fb9', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9950}] to 51.68.71.91:43975
2019-03-05 08:50:18,304 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2a390d89841f714f4fb9', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31813291}
2019-03-05 08:50:19,387 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@37d28f02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15efda6c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b5a078a, org.springframework.security.web.header.HeaderWriterFilter@541179e7, org.springframework.security.web.authentication.logout.LogoutFilter@4ba02375, com.apiwatch.security.jwt.JwtAuthTokenFilter@18f55704, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ed922e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39909d1a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6056232d, org.springframework.security.web.session.SessionManagementFilter@46383a78, org.springframework.security.web.access.ExceptionTranslationFilter@4fb392c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52b06bef]
2019-03-05 08:50:19,774 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Tue Mar 05 08:50:16 CET 2019]; root of context hierarchy
2019-03-05 08:50:19,839 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:50:19,841 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:19,842 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:50:19,843 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:19,843 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:19,844 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:50:19,844 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:50:19,845 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:50:19,846 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:50:19,847 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:19,848 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:19,850 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:50:19,851 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:50:19,852 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:50:19,852 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:50:19,852 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:50:19,853 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:50:19,854 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:50:19,854 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:50:19,854 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:50:19,855 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:50:19,856 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:50:19,857 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:19,857 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:50:19,858 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:50:19,858 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:50:19,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:50:19,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:50:19,860 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:50:19,861 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:50:19,861 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:50:19,861 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:50:19,862 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:50:19,862 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:50:19,862 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:50:19,863 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:50:19,863 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:50:19,864 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:50:19,864 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:50:19,866 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:50:19,867 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:50:19,867 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:50:19,867 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:50:19,867 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:50:19,868 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:50:19,868 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:50:19,868 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:50:19,868 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:50:19,869 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:50:19,869 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:50:19,870 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:50:19,871 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:50:19,871 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:50:19,871 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:50:19,871 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:50:19,872 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:50:19,873 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:50:19,873 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:50:19,874 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:50:19,874 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:50:19,874 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:50:19,875 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:50:19,875 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:50:19,875 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:50:19,876 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:50:19,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:50:19,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:50:19,877 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:50:19,879 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:50:19,880 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:50:19,880 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:50:19,881 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:50:19,881 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:50:19,881 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:50:19,881 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:50:19,882 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:50:19,883 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:50:19,883 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:19,884 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:50:19,885 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:50:19,885 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:50:19,885 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:50:19,886 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:50:19,887 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:50:19,887 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:50:19,888 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:50:19,888 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:50:19,890 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:50:19,890 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:50:19,890 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:50:19,891 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:50:19,891 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:50:19,891 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:50:19,893 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:19,893 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:19,963 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:50:19,963 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:50:20,031 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:50:20,334 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:50:20,355 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.653 seconds (JVM running for 5.492)
2019-03-05 08:50:20,531 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@71687585: startup date [Tue Mar 05 08:50:16 CET 2019]; root of context hierarchy
2019-03-05 08:50:22,673 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 8010 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:50:22,678 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:50:22,725 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@406c3963: startup date [Tue Mar 05 08:50:22 CET 2019]; root of context hierarchy
2019-03-05 08:50:24,342 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:50:24,592 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$780c5e07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:24,609 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:24,612 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2ad0141' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:24,625 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9ce100b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:24,638 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:50:24,924 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:50:24,942 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:50:24,952 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:50:24,953 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:50:24,967 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:50:25,427 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:50:25,428 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 2703 ms
2019-03-05 08:50:26,265 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:50:26,668 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2a420d89841f4aad65c7', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9951}] to 51.68.71.91:43975
2019-03-05 08:50:26,699 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2a420d89841f4aad65c7', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29562356}
2019-03-05 08:50:27,112 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:50:27,117 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:50:27,118 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:50:27,118 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:50:27,119 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:50:27,120 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:50:27,120 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:50:28,072 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@49588246, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5eec0536, org.springframework.security.web.context.SecurityContextPersistenceFilter@14619e77, org.springframework.security.web.header.HeaderWriterFilter@bfee2f0, org.springframework.security.web.authentication.logout.LogoutFilter@572d9b2a, com.apiwatch.security.jwt.JwtAuthTokenFilter@594bf20d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ee75fc4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@405e52e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@544cb14a, org.springframework.security.web.session.SessionManagementFilter@1d2da325, org.springframework.security.web.access.ExceptionTranslationFilter@6702b355, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@188d0d65]
2019-03-05 08:50:28,689 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@406c3963: startup date [Tue Mar 05 08:50:22 CET 2019]; root of context hierarchy
2019-03-05 08:50:28,856 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:28,858 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:50:28,859 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:28,868 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:28,869 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:50:28,869 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:50:28,869 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:50:28,870 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:50:28,870 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:50:28,872 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:28,873 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:28,891 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:50:28,893 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:50:28,894 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:50:28,894 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:50:28,894 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:50:28,895 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:50:28,911 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:50:28,911 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:50:28,912 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:50:28,912 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:50:28,944 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:50:28,955 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:28,955 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:50:28,956 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:50:28,956 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:50:28,957 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:50:28,957 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:50:28,960 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:50:28,960 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:50:28,960 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:50:28,961 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:50:28,961 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:50:28,961 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:50:28,961 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:50:28,962 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:50:28,968 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:50:28,971 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:50:28,973 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:50:28,975 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:50:28,976 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:50:28,976 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:50:28,976 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:50:28,976 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:50:28,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:50:28,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:50:28,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:50:28,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:50:28,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:50:28,977 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:50:28,980 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:50:28,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:50:28,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:50:28,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:50:28,983 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:50:28,985 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:50:28,985 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:50:28,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:50:28,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:50:28,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:50:28,986 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:50:28,988 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:50:28,989 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:50:28,993 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:50:29,000 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:50:29,001 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:50:29,001 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:50:29,001 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:50:29,004 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:50:29,005 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:50:29,005 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:50:29,006 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:50:29,006 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:50:29,006 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:50:29,007 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:50:29,007 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:50:29,008 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:50:29,008 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:29,008 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:50:29,009 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:50:29,010 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:50:29,010 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:50:29,011 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:50:29,012 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:50:29,013 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:50:29,013 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:50:29,016 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:50:29,020 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:50:29,027 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:50:29,027 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:50:29,027 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:50:29,028 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:50:29,028 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:50:29,032 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:50:29,034 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:50:29,106 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:50:29,107 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:50:29,164 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:50:29,382 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:50:29,403 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:50:29,412 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:50:29,419 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:50:29,485 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:50:29,495 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 7.467 seconds (JVM running for 17.51)
2019-03-05 08:50:36,367 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:50:36,367 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:50:36,380 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
2019-03-05 08:50:36,412 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-2] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:50:36,985 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9952}] to 51.68.71.91:43975
2019-03-05 08:50:38,131 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:3, serverValue:9953}] to 51.68.71.91:43975
2019-03-05 08:50:38,134 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-6] Opened connection [connectionId{localValue:5, serverValue:9955}] to 51.68.71.91:43975
2019-03-05 08:50:38,138 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:4, serverValue:9954}] to 51.68.71.91:43975
2019-03-05 08:54:15,206 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@406c3963: startup date [Tue Mar 05 08:50:22 CET 2019]; root of context hierarchy
2019-03-05 08:54:15,211 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 08:54:15,256 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9952}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:54:15,256 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9953}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:54:15,257 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9955}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:54:15,257 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9954}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:54:22,269 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 8654 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:54:22,272 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:54:22,367 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Tue Mar 05 08:54:22 CET 2019]; root of context hierarchy
2019-03-05 08:54:23,666 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:54:23,760 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$981e4ea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:23,768 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:23,769 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1280851e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:23,775 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bcf2f15b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:23,783 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:24,169 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:54:24,542 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b300d898421ce06c321', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9956}] to 51.68.71.91:43975
2019-03-05 08:54:24,572 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b300d898421ce06c321', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28616311}
2019-03-05 08:54:25,240 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@38f77cd9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a8e6e89, org.springframework.security.web.context.SecurityContextPersistenceFilter@52b06bef, org.springframework.security.web.header.HeaderWriterFilter@a5bbaec, org.springframework.security.web.authentication.logout.LogoutFilter@22c75c01, com.apiwatch.security.jwt.JwtAuthTokenFilter@3337d04c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6af91cc8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@107bfcb2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6fbb4061, org.springframework.security.web.session.SessionManagementFilter@696b4a95, org.springframework.security.web.access.ExceptionTranslationFilter@2aa7399c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38830ea]
2019-03-05 08:54:25,569 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Tue Mar 05 08:54:22 CET 2019]; root of context hierarchy
2019-03-05 08:54:25,639 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:54:25,640 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:25,641 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:54:25,641 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:25,641 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:25,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:54:25,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:54:25,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:54:25,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:54:25,644 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:25,645 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:25,647 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:54:25,648 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:54:25,649 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:54:25,650 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:54:25,650 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:54:25,650 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:54:25,652 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:54:25,653 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:54:25,653 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:54:25,653 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:54:25,655 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:54:25,656 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:25,656 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:54:25,657 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:54:25,657 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:54:25,658 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:54:25,658 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:54:25,660 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:54:25,660 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:54:25,660 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:54:25,661 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:54:25,661 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:54:25,661 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:54:25,661 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:54:25,662 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:54:25,662 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:54:25,663 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:54:25,663 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:54:25,665 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:54:25,665 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:54:25,665 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:54:25,666 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:54:25,666 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:54:25,666 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:54:25,666 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:54:25,667 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:54:25,667 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:54:25,668 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:54:25,668 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:54:25,669 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:54:25,670 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:54:25,670 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:54:25,671 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:54:25,676 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:54:25,677 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:54:25,678 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:54:25,678 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:54:25,678 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:54:25,678 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:54:25,679 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:54:25,679 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:54:25,680 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:54:25,680 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:54:25,681 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:54:25,682 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:54:25,682 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:54:25,682 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:54:25,684 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:54:25,685 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:54:25,685 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:54:25,685 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:54:25,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:54:25,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:54:25,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:54:25,686 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:54:25,687 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:54:25,688 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:25,688 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:54:25,689 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:54:25,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:54:25,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:54:25,690 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:54:25,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:54:25,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:54:25,691 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:54:25,692 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:54:25,693 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:54:25,693 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:54:25,694 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:54:25,694 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:54:25,694 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:54:25,695 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:54:25,697 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:25,697 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:25,761 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:54:25,761 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:54:25,812 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:54:25,998 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:54:26,012 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 4.306 seconds (JVM running for 5.41)
2019-03-05 08:54:26,100 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7dfd3c81: startup date [Tue Mar 05 08:54:22 CET 2019]; root of context hierarchy
2019-03-05 08:54:27,471 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 8613 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:54:27,473 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:54:27,498 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7915868: startup date [Tue Mar 05 08:54:27 CET 2019]; root of context hierarchy
2019-03-05 08:54:28,169 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:54:28,262 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d68b04f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:28,270 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:28,271 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@550024c7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:28,277 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fb5fa7a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:28,284 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:54:28,512 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:54:28,527 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:54:28,535 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:54:28,535 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:54:28,546 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:54:28,770 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:54:28,771 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1273 ms
2019-03-05 08:54:29,122 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:54:29,482 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b350d898421a5df346b', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9957}] to 51.68.71.91:43975
2019-03-05 08:54:29,512 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b350d898421a5df346b', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28547754}
2019-03-05 08:54:29,539 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:54:29,539 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:54:29,540 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:54:29,540 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:54:29,540 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:54:29,540 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:54:29,540 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:54:30,254 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@4779a949, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@358defbe, org.springframework.security.web.context.SecurityContextPersistenceFilter@540fb78e, org.springframework.security.web.header.HeaderWriterFilter@59ced74a, org.springframework.security.web.authentication.logout.LogoutFilter@3ad0fc4d, com.apiwatch.security.jwt.JwtAuthTokenFilter@7dd4aad3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@83511b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@639e9085, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a3cd7ac, org.springframework.security.web.session.SessionManagementFilter@41b23ed3, org.springframework.security.web.access.ExceptionTranslationFilter@3af65ce1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@33bb8b1b]
2019-03-05 08:54:30,496 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7915868: startup date [Tue Mar 05 08:54:27 CET 2019]; root of context hierarchy
2019-03-05 08:54:30,563 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:54:30,565 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:30,565 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:30,565 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:54:30,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:30,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:54:30,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:54:30,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:54:30,567 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:54:30,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:30,570 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:30,572 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:54:30,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:54:30,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:54:30,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:54:30,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:54:30,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:54:30,575 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:54:30,576 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:54:30,576 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:54:30,577 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:54:30,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:30,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:54:30,579 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:54:30,580 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:54:30,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:54:30,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:54:30,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:54:30,583 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:54:30,583 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:54:30,584 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:54:30,585 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:54:30,586 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:54:30,586 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:54:30,586 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:54:30,586 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:54:30,587 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:54:30,587 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:54:30,588 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:54:30,589 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:54:30,589 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:54:30,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:54:30,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:54:30,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:54:30,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:54:30,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:54:30,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:54:30,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:54:30,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:54:30,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:54:30,592 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:54:30,593 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:54:30,593 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:54:30,593 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:54:30,593 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:54:30,594 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:54:30,594 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:54:30,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:54:30,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:54:30,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:54:30,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:54:30,596 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:54:30,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:54:30,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:54:30,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:54:30,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:54:30,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:54:30,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:54:30,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:54:30,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:54:30,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:54:30,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:54:30,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:54:30,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:54:30,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:54:30,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:54:30,603 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:54:30,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:30,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:54:30,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:54:30,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:54:30,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:54:30,605 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:54:30,606 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:54:30,606 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:54:30,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:54:30,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:54:30,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:54:30,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:54:30,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:54:30,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:54:30,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:54:30,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:54:30,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:54:30,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:54:30,658 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:54:30,658 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:54:30,701 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:54:30,836 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:54:30,848 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:54:30,853 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:54:30,856 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:54:30,879 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:54:30,880 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 3.777 seconds (JVM running for 13.833)
2019-03-05 08:54:56,126 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-2] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:54:56,126 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:54:56,138 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-2] FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-03-05 08:54:56,167 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-1] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:54:56,622 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:2, serverValue:9958}] to 51.68.71.91:43975
2019-03-05 08:54:58,092 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-10] Opened connection [connectionId{localValue:4, serverValue:9960}] to 51.68.71.91:43975
2019-03-05 08:54:58,098 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:5, serverValue:9961}] to 51.68.71.91:43975
2019-03-05 08:54:58,099 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:3, serverValue:9959}] to 51.68.71.91:43975
2019-03-05 08:55:32,500 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7915868: startup date [Tue Mar 05 08:54:27 CET 2019]; root of context hierarchy
2019-03-05 08:55:32,505 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 08:55:32,551 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9960}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:55:32,553 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9961}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:55:32,554 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9958}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:55:32,555 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9959}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 08:55:55,977 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 8847 (started by mickael in /home/mickael/git/Backend)
2019-03-05 08:55:55,978 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:55:56,022 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 08:55:56 CET 2019]; root of context hierarchy
2019-03-05 08:55:56,837 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:55:56,937 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$562490c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:55:56,946 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:55:56,947 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5972d253' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:55:56,953 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7af93379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:55:56,962 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:55:57,480 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:55:57,822 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b8d0d8984228f4bbc6e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9962}] to 51.68.71.91:43975
2019-03-05 08:55:57,852 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b8d0d8984228f4bbc6e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28838126}
2019-03-05 08:55:58,629 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@135a8c6f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6419a0e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4667c4c1, org.springframework.security.web.header.HeaderWriterFilter@58b91d57, org.springframework.security.web.authentication.logout.LogoutFilter@38830ea, com.apiwatch.security.jwt.JwtAuthTokenFilter@36327cec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22c75c01, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d074b14, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@280d4882, org.springframework.security.web.session.SessionManagementFilter@49f40c00, org.springframework.security.web.access.ExceptionTranslationFilter@7bac686b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a8d467e]
2019-03-05 08:55:58,972 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 08:55:56 CET 2019]; root of context hierarchy
2019-03-05 08:55:59,046 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:55:59,047 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:55:59,048 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:55:59,049 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:55:59,049 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:55:59,049 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:55:59,050 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:55:59,050 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:55:59,050 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:55:59,058 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:55:59,059 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:55:59,061 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:55:59,063 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:55:59,063 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:55:59,063 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:55:59,064 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:55:59,064 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:55:59,065 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:55:59,067 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:55:59,067 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:55:59,068 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:55:59,070 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:55:59,071 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:55:59,072 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:55:59,072 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:55:59,073 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:55:59,073 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:55:59,074 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:55:59,076 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:55:59,076 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:55:59,076 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:55:59,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:55:59,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:55:59,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:55:59,077 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:55:59,078 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:55:59,078 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:55:59,079 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:55:59,079 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:55:59,081 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:55:59,081 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:55:59,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:55:59,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:55:59,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:55:59,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:55:59,082 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:55:59,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:55:59,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:55:59,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:55:59,083 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:55:59,085 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:55:59,085 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:55:59,085 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:55:59,086 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:55:59,086 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:55:59,087 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:55:59,087 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:55:59,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:55:59,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:55:59,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:55:59,088 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:55:59,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:55:59,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:55:59,089 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:55:59,090 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:55:59,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:55:59,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:55:59,091 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:55:59,093 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:55:59,094 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:55:59,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:55:59,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:55:59,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:55:59,095 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:55:59,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:55:59,096 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:55:59,097 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:55:59,097 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:55:59,098 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:55:59,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:55:59,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:55:59,099 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:55:59,100 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:55:59,100 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:55:59,101 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:55:59,101 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:55:59,102 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:55:59,103 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:55:59,103 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:55:59,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:55:59,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:55:59,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:55:59,104 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:55:59,107 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:55:59,108 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:55:59,162 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:55:59,163 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:55:59,207 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:55:59,466 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:55:59,491 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.74 seconds (JVM running for 5.369)
2019-03-05 08:55:59,675 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 08:55:56 CET 2019]; root of context hierarchy
2019-03-05 08:56:01,273 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 8802 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 08:56:01,276 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 08:56:01,324 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@576884a1: startup date [Tue Mar 05 08:56:01 CET 2019]; root of context hierarchy
2019-03-05 08:56:02,066 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 08:56:02,165 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$edb37b08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:56:02,179 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:56:02,181 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7f3d9e8d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:56:02,190 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$12881dba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:56:02,200 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 08:56:02,512 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 08:56:02,525 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 08:56:02,532 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 08:56:02,532 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 08:56:02,544 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 08:56:02,785 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 08:56:02,786 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1462 ms
2019-03-05 08:56:03,129 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 08:56:03,456 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b930d898422624a8f59', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9963}] to 51.68.71.91:43975
2019-03-05 08:56:03,487 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2b930d898422624a8f59', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28376597}
2019-03-05 08:56:03,571 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 08:56:03,572 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 08:56:03,572 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 08:56:03,572 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 08:56:03,572 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 08:56:03,573 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 08:56:03,573 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 08:56:04,125 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@645b056b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25c668cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@75bf5b7d, org.springframework.security.web.header.HeaderWriterFilter@14b168b3, org.springframework.security.web.authentication.logout.LogoutFilter@45f4f339, com.apiwatch.security.jwt.JwtAuthTokenFilter@787c2456, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6940ee32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f36dd5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4be78ffd, org.springframework.security.web.session.SessionManagementFilter@47bb8edc, org.springframework.security.web.access.ExceptionTranslationFilter@256d2f1f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a1fc0e3]
2019-03-05 08:56:04,358 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@576884a1: startup date [Tue Mar 05 08:56:01 CET 2019]; root of context hierarchy
2019-03-05 08:56:04,446 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 08:56:04,447 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:56:04,448 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:56:04,449 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 08:56:04,449 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 08:56:04,449 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 08:56:04,450 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 08:56:04,450 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 08:56:04,450 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 08:56:04,452 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:56:04,454 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 08:56:04,455 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 08:56:04,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 08:56:04,457 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 08:56:04,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 08:56:04,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 08:56:04,458 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 08:56:04,460 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 08:56:04,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 08:56:04,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 08:56:04,461 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 08:56:04,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 08:56:04,463 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 08:56:04,464 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 08:56:04,464 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 08:56:04,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 08:56:04,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 08:56:04,465 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 08:56:04,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 08:56:04,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 08:56:04,467 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 08:56:04,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 08:56:04,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:56:04,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 08:56:04,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 08:56:04,468 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 08:56:04,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 08:56:04,469 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 08:56:04,470 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 08:56:04,471 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 08:56:04,472 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:56:04,472 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 08:56:04,472 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 08:56:04,473 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 08:56:04,474 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 08:56:04,476 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 08:56:04,478 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 08:56:04,478 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 08:56:04,478 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 08:56:04,478 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 08:56:04,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 08:56:04,480 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 08:56:04,481 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 08:56:04,482 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 08:56:04,482 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 08:56:04,485 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 08:56:04,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 08:56:04,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 08:56:04,486 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 08:56:04,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 08:56:04,487 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 08:56:04,492 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 08:56:04,494 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 08:56:04,495 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 08:56:04,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 08:56:04,496 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 08:56:04,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 08:56:04,497 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 08:56:04,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 08:56:04,500 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 08:56:04,500 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 08:56:04,500 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 08:56:04,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 08:56:04,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 08:56:04,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 08:56:04,501 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 08:56:04,502 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 08:56:04,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:56:04,503 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 08:56:04,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 08:56:04,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 08:56:04,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 08:56:04,504 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 08:56:04,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 08:56:04,505 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:56:04,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 08:56:04,506 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 08:56:04,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 08:56:04,507 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 08:56:04,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 08:56:04,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 08:56:04,508 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 08:56:04,509 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 08:56:04,513 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 08:56:04,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 08:56:04,606 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:56:04,606 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:56:04,663 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 08:56:04,810 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 08:56:04,821 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 08:56:04,826 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 08:56:04,830 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 08:56:04,864 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 08:56:04,866 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.033 seconds (JVM running for 15.392)
2019-03-05 08:56:12,404 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 08:56:12,404 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 08:56:12,417 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
2019-03-05 08:56:12,447 ERROR com.apiwatch.security.jwt.JwtProvider [http-nio-8091-exec-1] Invalid JWT token -> Message: {}
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:235)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.apiwatch.security.jwt.JwtProvider.validateJwtToken(JwtProvider.java:63)
	at com.apiwatch.security.jwt.JwtAuthTokenFilter.doFilterInternal(JwtAuthTokenFilter.java:46)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter.doFilterInternal(ApiwatchCorsFilter.java:22)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 08:56:12,902 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-1] Opened connection [connectionId{localValue:2, serverValue:9964}] to 51.68.71.91:43975
2019-03-05 08:56:14,262 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:5, serverValue:9967}] to 51.68.71.91:43975
2019-03-05 08:56:14,262 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:3, serverValue:9965}] to 51.68.71.91:43975
2019-03-05 08:56:14,267 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-4] Opened connection [connectionId{localValue:4, serverValue:9966}] to 51.68.71.91:43975
2019-03-05 09:00:33,166 INFO com.apiwatch.ScheduledTasks [pool-2-thread-1] The time is now 09:00:33
2019-03-05 09:00:34,290 ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler [pool-2-thread-1] Unexpected error occurred in scheduled task.
org.springframework.web.client.HttpClientErrorException: 404 Not Found
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:79)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:730)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:686)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at com.apiwatch.controllers.WeatherAPIController.getActualWeather(WeatherAPIController.java:35)
	at com.apiwatch.ScheduledTasks.apiaryWeatherNow(ScheduledTasks.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-05 09:03:47,837 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@576884a1: startup date [Tue Mar 05 08:56:01 CET 2019]; root of context hierarchy
2019-03-05 09:03:47,854 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 09:03:47,908 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:3, serverValue:9965}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 09:03:47,908 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:4, serverValue:9966}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 09:03:47,909 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:2, serverValue:9964}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 09:03:47,909 INFO com.mongodb.diagnostics.logging.SLF4JLogger [Thread-7] Closed connection [connectionId{localValue:5, serverValue:9967}] to 51.68.71.91:43975 because the pool has been closed.
2019-03-05 09:03:53,313 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 9283 (started by mickael in /home/mickael/git/Backend)
2019-03-05 09:03:53,315 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 09:03:53,344 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Tue Mar 05 09:03:53 CET 2019]; root of context hierarchy
2019-03-05 09:03:54,754 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 09:03:54,982 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7fff8f6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:03:55,013 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:03:55,019 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@62ddd21b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:03:55,030 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a4d4321e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:03:55,046 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:03:55,603 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 09:03:55,992 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d6b0d8984244306f720', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9972}] to 51.68.71.91:43975
2019-03-05 09:03:56,021 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d6b0d8984244306f720', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28347565}
2019-03-05 09:03:56,940 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@7af3874e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a8816cc, org.springframework.security.web.context.SecurityContextPersistenceFilter@2be95d31, org.springframework.security.web.header.HeaderWriterFilter@1d247525, org.springframework.security.web.authentication.logout.LogoutFilter@7bac686b, com.apiwatch.security.jwt.JwtAuthTokenFilter@672a1c62, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2aa7399c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6415f61e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68565bc7, org.springframework.security.web.session.SessionManagementFilter@12a14b74, org.springframework.security.web.access.ExceptionTranslationFilter@521bb1a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@c017175]
2019-03-05 09:03:57,334 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Tue Mar 05 09:03:53 CET 2019]; root of context hierarchy
2019-03-05 09:03:57,498 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 09:03:57,499 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 09:03:57,511 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 09:03:57,514 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:03:57,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:03:57,515 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 09:03:57,516 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 09:03:57,522 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 09:03:57,523 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 09:03:57,525 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:03:57,525 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:03:57,527 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 09:03:57,528 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 09:03:57,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 09:03:57,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 09:03:57,529 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 09:03:57,530 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 09:03:57,531 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 09:03:57,531 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 09:03:57,532 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 09:03:57,532 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 09:03:57,534 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 09:03:57,534 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:03:57,534 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 09:03:57,536 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 09:03:57,536 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 09:03:57,537 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 09:03:57,537 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 09:03:57,545 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 09:03:57,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 09:03:57,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 09:03:57,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 09:03:57,546 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:03:57,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 09:03:57,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:03:57,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 09:03:57,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 09:03:57,548 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 09:03:57,548 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 09:03:57,551 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 09:03:57,551 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 09:03:57,552 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 09:03:57,552 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 09:03:57,552 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:03:57,552 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:03:57,552 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 09:03:57,553 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 09:03:57,553 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 09:03:57,553 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 09:03:57,553 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 09:03:57,554 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 09:03:57,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 09:03:57,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 09:03:57,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 09:03:57,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 09:03:57,557 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 09:03:57,557 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 09:03:57,557 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 09:03:57,557 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 09:03:57,558 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 09:03:57,558 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 09:03:57,559 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 09:03:57,559 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 09:03:57,560 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 09:03:57,561 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 09:03:57,561 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 09:03:57,562 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 09:03:57,562 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 09:03:57,564 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 09:03:57,565 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 09:03:57,565 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 09:03:57,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 09:03:57,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 09:03:57,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 09:03:57,566 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 09:03:57,567 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 09:03:57,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 09:03:57,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:03:57,568 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 09:03:57,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 09:03:57,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 09:03:57,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 09:03:57,569 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 09:03:57,570 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 09:03:57,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 09:03:57,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:03:57,571 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:03:57,572 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 09:03:57,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 09:03:57,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 09:03:57,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 09:03:57,573 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 09:03:57,574 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 09:03:57,576 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:03:57,576 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 09:03:57,627 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:03:57,627 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:03:57,671 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:03:58,062 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 09:03:58,086 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 5.0 seconds (JVM running for 5.951)
2019-03-05 09:03:58,308 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@4dc27487: startup date [Tue Mar 05 09:03:53 CET 2019]; root of context hierarchy
2019-03-05 09:04:00,664 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 9242 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 09:04:00,666 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 09:04:00,692 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@790a2afc: startup date [Tue Mar 05 09:04:00 CET 2019]; root of context hierarchy
2019-03-05 09:04:01,533 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 09:04:01,640 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$27009bba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:01,650 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:01,651 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@65eeb0c3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:01,658 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4bd53e6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:01,666 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:01,902 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 09:04:01,915 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 09:04:01,923 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 09:04:01,924 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 09:04:01,933 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 09:04:02,011 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 09:04:02,012 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 1320 ms
2019-03-05 09:04:03,002 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 09:04:03,360 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d720d8984241a462a7e', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9973}] to 51.68.71.91:43975
2019-03-05 09:04:03,390 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d720d8984241a462a7e', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28610642}
2019-03-05 09:04:03,552 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 09:04:03,553 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 09:04:03,553 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 09:04:03,553 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 09:04:03,553 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 09:04:03,553 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 09:04:03,553 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 09:04:04,193 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@7a4e76b1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@716f6f0, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a3aaa11, org.springframework.security.web.header.HeaderWriterFilter@4eb1b1f0, org.springframework.security.web.authentication.logout.LogoutFilter@74f30db5, com.apiwatch.security.jwt.JwtAuthTokenFilter@22b872b2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75868bb8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f080573, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36f7ec92, org.springframework.security.web.session.SessionManagementFilter@7df4950f, org.springframework.security.web.access.ExceptionTranslationFilter@228801c6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2abfe595]
2019-03-05 09:04:04,459 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@790a2afc: startup date [Tue Mar 05 09:04:00 CET 2019]; root of context hierarchy
2019-03-05 09:04:04,547 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 09:04:04,548 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:04,548 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:04,549 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 09:04:04,550 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:04,550 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 09:04:04,550 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 09:04:04,551 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 09:04:04,551 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 09:04:04,553 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:04,555 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:04,557 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 09:04:04,588 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 09:04:04,589 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 09:04:04,589 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 09:04:04,589 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 09:04:04,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 09:04:04,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 09:04:04,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 09:04:04,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 09:04:04,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 09:04:04,594 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:04,594 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 09:04:04,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 09:04:04,596 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 09:04:04,596 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 09:04:04,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 09:04:04,597 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 09:04:04,599 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 09:04:04,599 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:04:04,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 09:04:04,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 09:04:04,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 09:04:04,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 09:04:04,600 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:04:04,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 09:04:04,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 09:04:04,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 09:04:04,602 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 09:04:04,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 09:04:04,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 09:04:04,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 09:04:04,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 09:04:04,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:04:04,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:04:04,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 09:04:04,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 09:04:04,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 09:04:04,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 09:04:04,610 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 09:04:04,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 09:04:04,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 09:04:04,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 09:04:04,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 09:04:04,612 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 09:04:04,613 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 09:04:04,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 09:04:04,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 09:04:04,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 09:04:04,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 09:04:04,614 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 09:04:04,615 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 09:04:04,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 09:04:04,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 09:04:04,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 09:04:04,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 09:04:04,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 09:04:04,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 09:04:04,620 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 09:04:04,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 09:04:04,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 09:04:04,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 09:04:04,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 09:04:04,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 09:04:04,622 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 09:04:04,623 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 09:04:04,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 09:04:04,625 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:04,625 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 09:04:04,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 09:04:04,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 09:04:04,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 09:04:04,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 09:04:04,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 09:04:04,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 09:04:04,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:04:04,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:04:04,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 09:04:04,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 09:04:04,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 09:04:04,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 09:04:04,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 09:04:04,631 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 09:04:04,633 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:04,634 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:04,686 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:04,687 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:04,741 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:04,891 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 09:04:04,904 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 09:04:04,910 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 09:04:04,915 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 09:04:04,940 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 09:04:04,944 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 4.749 seconds (JVM running for 16.409)
2019-03-05 09:04:27,020 INFO org.springframework.context.support.AbstractApplicationContext [Thread-7] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@790a2afc: startup date [Tue Mar 05 09:04:00 CET 2019]; root of context hierarchy
2019-03-05 09:04:27,024 INFO org.springframework.jmx.export.MBeanExporter [Thread-7] Unregistering JMX-exposed beans on shutdown
2019-03-05 09:04:31,644 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplicationTests on mellisphera-MS-7A70 with PID 9429 (started by mickael in /home/mickael/git/Backend)
2019-03-05 09:04:31,645 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 09:04:31,685 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 09:04:31 CET 2019]; root of context hierarchy
2019-03-05 09:04:32,458 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 09:04:32,551 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$79d664fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:32,560 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:32,562 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1e63d216' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:32,568 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9eab07af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:32,574 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:32,948 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 09:04:33,368 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d900d898424d5833f99', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9974}] to 51.68.71.91:43975
2019-03-05 09:04:33,399 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d900d898424d5833f99', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28998659}
2019-03-05 09:04:34,120 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@68565bc7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37baddde, org.springframework.security.web.context.SecurityContextPersistenceFilter@2aa7399c, org.springframework.security.web.header.HeaderWriterFilter@32e652b6, org.springframework.security.web.authentication.logout.LogoutFilter@f9f3928, com.apiwatch.security.jwt.JwtAuthTokenFilter@39e69ea7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@708f018e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0bef24, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5115f590, org.springframework.security.web.session.SessionManagementFilter@e76b097, org.springframework.security.web.access.ExceptionTranslationFilter@1a0c5e9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18371d89]
2019-03-05 09:04:34,503 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 09:04:31 CET 2019]; root of context hierarchy
2019-03-05 09:04:34,581 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 09:04:34,583 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 09:04:34,584 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 09:04:34,585 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 09:04:34,586 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:34,587 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 09:04:34,587 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:34,588 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:34,588 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 09:04:34,590 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:34,591 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:34,593 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 09:04:34,595 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 09:04:34,596 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 09:04:34,598 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 09:04:34,601 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 09:04:34,604 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 09:04:34,607 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 09:04:34,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 09:04:34,608 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 09:04:34,609 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 09:04:34,611 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 09:04:34,613 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:34,616 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 09:04:34,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 09:04:34,617 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 09:04:34,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 09:04:34,618 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 09:04:34,621 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:04:34,624 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 09:04:34,626 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 09:04:34,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 09:04:34,628 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 09:04:34,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 09:04:34,629 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 09:04:34,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 09:04:34,630 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:04:34,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 09:04:34,632 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 09:04:34,634 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 09:04:34,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 09:04:34,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 09:04:34,635 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 09:04:34,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 09:04:34,636 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 09:04:34,637 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:04:34,637 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:04:34,637 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 09:04:34,637 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 09:04:34,638 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 09:04:34,639 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 09:04:34,639 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 09:04:34,639 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 09:04:34,640 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 09:04:34,640 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 09:04:34,641 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 09:04:34,642 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 09:04:34,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 09:04:34,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 09:04:34,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 09:04:34,643 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 09:04:34,645 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 09:04:34,646 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 09:04:34,647 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 09:04:34,649 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 09:04:34,650 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 09:04:34,650 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 09:04:34,650 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 09:04:34,657 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 09:04:34,657 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 09:04:34,658 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 09:04:34,658 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 09:04:34,658 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 09:04:34,659 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 09:04:34,659 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 09:04:34,659 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 09:04:34,660 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 09:04:34,660 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:34,661 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 09:04:34,662 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 09:04:34,662 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 09:04:34,662 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 09:04:34,662 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 09:04:34,663 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 09:04:34,664 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 09:04:34,665 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:04:34,665 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:04:34,666 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 09:04:34,666 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 09:04:34,667 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 09:04:34,667 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 09:04:34,667 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 09:04:34,667 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 09:04:34,669 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:34,670 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:34,738 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:34,739 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:34,804 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:35,000 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 09:04:35,011 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplicationTests in 3.58 seconds (JVM running for 4.069)
2019-03-05 09:04:35,114 INFO org.springframework.context.support.AbstractApplicationContext [Thread-2] Closing org.springframework.web.context.support.GenericWebApplicationContext@7fb4f2a9: startup date [Tue Mar 05 09:04:31 CET 2019]; root of context hierarchy
2019-03-05 09:04:37,053 INFO org.springframework.boot.StartupInfoLogger [main] Starting LemabkrApplication on mellisphera-MS-7A70 with PID 9390 (/home/mickael/git/Backend/target/classes started by mickael in /home/mickael/git/Backend)
2019-03-05 09:04:37,059 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2019-03-05 09:04:37,104 INFO org.springframework.context.support.AbstractApplicationContext [main] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e02fcc8: startup date [Tue Mar 05 09:04:37 CET 2019]; root of context hierarchy
2019-03-05 09:04:38,206 INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [main] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-05 09:04:38,304 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b550bfbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:38,313 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:38,317 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@77f1c21f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:38,325 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$da256271] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:38,343 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-05 09:04:38,852 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8091 (http)
2019-03-05 09:04:38,888 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8091"]
2019-03-05 09:04:38,908 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-03-05 09:04:38,915 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet Engine: Apache Tomcat/8.5.28
2019-03-05 09:04:38,952 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2019-03-05 09:04:39,369 INFO org.apache.juli.logging.DirectJDKLog [localhost-startStop-1] Initializing Spring embedded WebApplicationContext
2019-03-05 09:04:39,369 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [localhost-startStop-1] Root WebApplicationContext: initialization completed in 2265 ms
2019-03-05 09:04:40,186 INFO com.mongodb.diagnostics.logging.SLF4JLogger [localhost-startStop-1] Cluster created with settings {hosts=[51.68.71.91:43975], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2019-03-05 09:04:40,575 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d980d898424ae61eb26', description='null'}-51.68.71.91:43975] Opened connection [connectionId{localValue:1, serverValue:9975}] to 51.68.71.91:43975
2019-03-05 09:04:40,611 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5c7e2d980d898424ae61eb26', description='null'}-51.68.71.91:43975] Monitor thread successfully connected to server with description ServerDescription{address=51.68.71.91:43975, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 4]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32982898}
2019-03-05 09:04:41,086 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-05 09:04:41,087 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-05 09:04:41,087 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-05 09:04:41,087 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'requestContextFilter' to: [/*]
2019-03-05 09:04:41,088 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-05 09:04:41,093 INFO org.springframework.boot.web.servlet.AbstractFilterRegistrationBean [localhost-startStop-1] Mapping filter: 'authenticationJwtTokenFilter' to: [/*]
2019-03-05 09:04:41,096 INFO org.springframework.boot.web.servlet.ServletRegistrationBean [localhost-startStop-1] Servlet dispatcherServlet mapped to [/]
2019-03-05 09:04:41,639 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [com.apiwatch.security.com.apiwatch.cors.ApiwatchCorsFilter@ebfc799, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@748386c6, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e6b83e7, org.springframework.security.web.header.HeaderWriterFilter@2163421c, org.springframework.security.web.authentication.logout.LogoutFilter@2b1ed623, com.apiwatch.security.jwt.JwtAuthTokenFilter@7a9f8995, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8e60ea1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@207d861c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a616116, org.springframework.security.web.session.SessionManagementFilter@ea5adb8, org.springframework.security.web.access.ExceptionTranslationFilter@41f96c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4233f94d]
2019-03-05 09:04:41,831 INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [main] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e02fcc8: startup date [Tue Mar 05 09:04:37 CET 2019]; root of context hierarchy
2019-03-05 09:04:41,906 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/id/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getByid(java.lang.String)
2019-03-05 09:04:41,907 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAllUserApiaries(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:41,908 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/details/{idApiary}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.getApiaryDetails(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:41,908 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/background/{idApiary}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.updateBackground(java.lang.String,java.lang.String)
2019-03-05 09:04:41,908 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/sharing/{idUsername}/{idApiary}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.deleteSharing(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:41,909 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Apiary> com.apiwatch.controllers.ApiaryController.getAll()
2019-03-05 09:04:41,909 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ApiaryController.update(java.lang.String,com.apiwatch.entities.Apiary)
2019-03-05 09:04:41,909 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ApiaryController.delete(java.lang.String)
2019-03-05 09:04:41,909 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/apiaries],methods=[POST],produces=[application/json]}" onto public com.apiwatch.entities.Apiary com.apiwatch.controllers.ApiaryController.insert(com.apiwatch.entities.Apiary)
2019-03-05 09:04:41,911 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signin],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.authenticateUser(com.apiwatch.security.message.request.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:41,912 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/api/auth/signup],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.AuthRestApiController.registerUser(com.apiwatch.security.message.request.SignUpForm,javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:41,914 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/logs],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Connection> com.apiwatch.controllers.ConnectionController.getAll()
2019-03-05 09:04:41,915 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsTHController.deleteById(java.lang.String)
2019-03-05 09:04:41,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByIdHive(java.lang.String)
2019-03-05 09:04:41,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/{username}/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getByApiary(java.lang.String,java.lang.String)
2019-03-05 09:04:41,916 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/last/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.DailyRecordsTH com.apiwatch.controllers.DailyRecordsTHController.getLast(java.lang.String)
2019-03-05 09:04:41,917 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsTH/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsTH> com.apiwatch.controllers.DailyRecordsTHController.getAll()
2019-03-05 09:04:41,918 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.DailyRecordsWController.deleteById(java.lang.String)
2019-03-05 09:04:41,918 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/{id}],methods=[GET],produces=[application/json]}" onto public java.util.Optional<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getById(java.lang.String)
2019-03-05 09:04:41,918 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getByidHive(java.lang.String)
2019-03-05 09:04:41,919 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyRecordsW/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyRecordsW> com.apiwatch.controllers.DailyRecordsWController.getAll()
2019-03-05 09:04:41,920 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdHive(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:41,921 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getByIdApiary(java.lang.String)
2019-03-05 09:04:41,921 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyStockHoney/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.DailyStockHoney> com.apiwatch.controllers.DailyStockHoneyController.getAll()
2019-03-05 09:04:41,922 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.dailyWeatherCompute()
2019-03-05 09:04:41,924 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/getMinTemps],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.Float> com.apiwatch.controllers.DailyWeatherController.getMinTemps()
2019-03-05 09:04:41,926 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getById(java.lang.String)
2019-03-05 09:04:41,928 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/dailyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.DailyWeather> com.apiwatch.controllers.DailyWeatherController.getAll()
2019-03-05 09:04:41,930 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/username/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllUserHives(java.lang.String)
2019-03-05 09:04:41,930 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/id/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getById(java.lang.String)
2019-03-05 09:04:41,930 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAllByUsername(java.lang.String)
2019-03-05 09:04:41,931 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/details/{idHive}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.getHiveDetails(java.lang.String)
2019-03-05 09:04:41,931 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/coordonnees/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.updateHivePos(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:04:41,931 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Hive> com.apiwatch.controllers.HiveController.getAll()
2019-03-05 09:04:41,931 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.HiveController.update(java.lang.String,com.apiwatch.entities.Hive)
2019-03-05 09:04:41,931 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.HiveController.delete(java.lang.String)
2019-03-05 09:04:41,932 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hives],methods=[POST]}" onto public com.apiwatch.entities.Hive com.apiwatch.controllers.HiveController.insert(com.apiwatch.entities.Hive)
2019-03-05 09:04:41,932 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.weather.HourlyWeather> com.apiwatch.controllers.HourlyWeatherController.getAll()
2019-03-05 09:04:41,933 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/hourlyweather],methods=[POST]}" onto public void com.apiwatch.controllers.HourlyWeatherController.insert(com.apiwatch.weather.HourlyWeather)
2019-03-05 09:04:41,934 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllFlowers()
2019-03-05 09:04:41,934 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateFind/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateFind(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:04:41,935 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updatePresence/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updatePresence(java.lang.String,java.lang.String)
2019-03-05 09:04:41,935 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/add/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.addFlower(java.lang.String,com.apiwatch.entities.OneObservedFlower)
2019-03-05 09:04:41,935 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ObservedFlower> com.apiwatch.controllers.ObservedFlowerController.getAllUserFlowers(java.lang.String)
2019-03-05 09:04:41,935 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/namesflowers/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.ObservedFlowerController.getNamesFlowers(java.lang.String)
2019-03-05 09:04:41,935 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesthflowersd/{id}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesThFlowersd(java.lang.String)
2019-03-05 09:04:41,936 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/datesobflowersd/{id}/{annee}],methods=[GET],produces=[application/json]}" onto public java.util.List<java.lang.String[]> com.apiwatch.controllers.ObservedFlowerController.getDatesObFlowersd(java.lang.String,java.lang.String)
2019-03-05 09:04:41,936 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/updateDebd/{id}/{annee}],methods=[PUT]}" onto public void com.apiwatch.controllers.ObservedFlowerController.updateDebutd(java.lang.String,java.lang.String,java.lang.String)
2019-03-05 09:04:41,936 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ObservedFlowerController.delete(java.lang.String)
2019-03-05 09:04:41,936 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersOb],methods=[POST]}" onto public void com.apiwatch.controllers.ObservedFlowerController.insert(com.apiwatch.entities.ObservedFlower)
2019-03-05 09:04:41,937 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/getOne/{id}],methods=[GET]}" onto public com.apiwatch.entities.Post com.apiwatch.controllers.PostController.getById(java.lang.String)
2019-03-05 09:04:41,938 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Post> com.apiwatch.controllers.PostController.getAll()
2019-03-05 09:04:41,939 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.PostController.update(java.lang.String,com.apiwatch.entities.Post)
2019-03-05 09:04:41,939 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.PostController.delete(java.lang.String)
2019-03-05 09:04:41,940 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/posts],methods=[POST]}" onto public void com.apiwatch.controllers.PostController.insert(com.apiwatch.entities.Post)
2019-03-05 09:04:41,942 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/apiary/{idApiary}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsApiray(java.lang.String)
2019-03-05 09:04:41,942 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/hive/{idHive}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getReportsHive(java.lang.String)
2019-03-05 09:04:41,942 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ProcessReport> com.apiwatch.controllers.ProcessReportController.getAll()
2019-03-05 09:04:41,943 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.ProcessReportController.update(java.lang.String,com.apiwatch.entities.ProcessReport)
2019-03-05 09:04:41,943 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportController.delete(java.lang.String)
2019-03-05 09:04:41,943 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report/insert],methods=[PUT]}" onto public com.apiwatch.entities.ProcessReport com.apiwatch.controllers.ProcessReportController.insert(com.apiwatch.entities.ProcessReport)
2019-03-05 09:04:41,944 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/add/{username}],methods=[GET],produces=[application/json]}" onto public void com.apiwatch.controllers.ProcessReportTempController.addReports(java.lang.String)
2019-03-05 09:04:41,944 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.ProcessReportTemp> com.apiwatch.controllers.ProcessReportTempController.getReports(java.lang.String)
2019-03-05 09:04:41,944 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/report_temp/delete/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.ProcessReportTempController.delete(java.lang.String)
2019-03-05 09:04:41,945 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/hive/{idHive}],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<?> com.apiwatch.controllers.RecordController.getByIdHive(java.lang.String,java.util.Date[])
2019-03-05 09:04:41,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Record> com.apiwatch.controllers.RecordController.getAllSensors()
2019-03-05 09:04:41,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records/weight],methods=[GET]}" onto public java.lang.Float[] com.apiwatch.controllers.RecordController.getJCPWeightRecords()
2019-03-05 09:04:41,946 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/records],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.RecordController.insert(com.apiwatch.entities.Record)
2019-03-05 09:04:41,948 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getAllSensors()
2019-03-05 09:04:41,949 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserSensors(java.lang.String)
2019-03-05 09:04:41,949 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/check/{reference}],methods=[GET]}" onto public com.apiwatch.entities.Sensor com.apiwatch.controllers.SensorController.checkSensor(java.lang.String)
2019-03-05 09:04:41,949 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/weight/{username}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.Sensor> com.apiwatch.controllers.SensorController.getUserWeightSensors(java.lang.String)
2019-03-05 09:04:41,949 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/update/{id}],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(java.lang.String,com.apiwatch.entities.Sensor)
2019-03-05 09:04:41,950 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[PUT]}" onto public void com.apiwatch.controllers.SensorController.update(com.apiwatch.entities.Sensor)
2019-03-05 09:04:41,950 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.SensorController.delete(java.lang.String)
2019-03-05 09:04:41,950 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sensors],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SensorController.insert(com.apiwatch.entities.Sensor)
2019-03-05 09:04:41,951 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.ShareApiary> com.apiwatch.controllers.SharingController.getSharing()
2019-03-05 09:04:41,951 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/share/],methods=[POST]}" onto public java.lang.Boolean com.apiwatch.controllers.SharingController.shareHive(com.apiwatch.entities.Apiary,com.apiwatch.entities.User,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:41,951 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sharing/user/{idUser}],methods=[GET]}" onto public com.apiwatch.entities.ShareApiary com.apiwatch.controllers.SharingController.getApiaryShareById(java.lang.String)
2019-03-05 09:04:41,952 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/username/{soldTo}],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getSoldDevicesByUsername(java.lang.String)
2019-03-05 09:04:41,953 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/check/{sensorRef}],methods=[GET]}" onto public com.apiwatch.entities.SoldDevices com.apiwatch.controllers.SoldDeviceController.checkIfSoldDeviceExist(java.lang.String)
2019-03-05 09:04:41,953 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.SoldDevices> com.apiwatch.controllers.SoldDeviceController.getAll()
2019-03-05 09:04:41,953 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/sold_devices],methods=[POST],produces=[application/json]}" onto public void com.apiwatch.controllers.SoldDeviceController.insert(com.apiwatch.entities.SoldDevices)
2019-03-05 09:04:41,954 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/all],methods=[GET],produces=[application/json]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getAllFlowers()
2019-03-05 09:04:41,954 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/recherchePer],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRecherchePer(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:04:41,954 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/rechercheVar],methods=[PUT]}" onto public java.util.List<com.apiwatch.entities.TheoricalFlower> com.apiwatch.controllers.TheoricalFlowerController.getRechercheVar(com.apiwatch.entities.TheoricalFlower)
2019-03-05 09:04:41,955 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/flowersTh/types],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.TheoricalFlowerController.getAllGenre()
2019-03-05 09:04:41,956 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[GET]}" onto public java.util.Optional<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getById(java.lang.String)
2019-03-05 09:04:41,956 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/usernames],methods=[GET]}" onto public java.util.List<java.lang.String> com.apiwatch.controllers.UserController.getAllRuchers()
2019-03-05 09:04:41,958 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/createdAt],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.findByCreatedDate()
2019-03-05 09:04:41,959 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/all],methods=[GET]}" onto public java.util.List<com.apiwatch.entities.User> com.apiwatch.controllers.UserController.getAll()
2019-03-05 09:04:41,961 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/user/{id}],methods=[DELETE]}" onto public void com.apiwatch.controllers.UserController.delete(java.lang.String)
2019-03-05 09:04:41,962 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/weather/actualweather/{city}],methods=[GET],produces=[application/json]}" onto public com.apiwatch.weather.WeatherAPI com.apiwatch.controllers.WeatherAPIController.getActualWeather(java.lang.String)
2019-03-05 09:04:41,964 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-05 09:04:41,964 INFO org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry [main] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-05 09:04:42,020 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:42,020 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:42,067 INFO org.springframework.web.servlet.handler.AbstractUrlHandlerMapping [main] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-05 09:04:42,221 INFO org.springframework.jmx.export.MBeanExporter [main] Registering beans for JMX exposure on startup
2019-03-05 09:04:42,232 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2019-03-05 09:04:42,237 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8091"]
2019-03-05 09:04:42,245 INFO org.apache.juli.logging.DirectJDKLog [main] Using a shared selector for servlet write/read
2019-03-05 09:04:42,286 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8091 (http) with context path ''
2019-03-05 09:04:42,288 INFO org.springframework.boot.StartupInfoLogger [main] Started LemabkrApplication in 6.044 seconds (JVM running for 14.634)
2019-03-05 09:04:47,272 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8091-exec-1] Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-05 09:04:47,272 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization started
2019-03-05 09:04:47,283 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8091-exec-1] FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
2019-03-05 09:04:47,595 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-2] Opened connection [connectionId{localValue:2, serverValue:9976}] to 51.68.71.91:43975
2019-03-05 09:04:49,369 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-7] Opened connection [connectionId{localValue:5, serverValue:9979}] to 51.68.71.91:43975
2019-03-05 09:04:49,371 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-9] Opened connection [connectionId{localValue:4, serverValue:9978}] to 51.68.71.91:43975
2019-03-05 09:04:49,371 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8091-exec-8] Opened connection [connectionId{localValue:3, serverValue:9977}] to 51.68.71.91:43975
